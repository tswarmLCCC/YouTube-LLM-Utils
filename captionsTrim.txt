hello um in this video I am going to introduce GitHub classrooms and GitHub in general GitHub is a source control uh mechanism or git is I should say git git um GitHub is a Microsoft owned uh repos uh web web page where you can publish your code um using the git mechanism um and it will keep track of your code changes uh keep track of different versions of your code allow you to share code and things like that um and uh what we're going to use it for in particular right now is sharing code back and forth between uh you as a student and me as an instructor we're going to do this U by using a uh a a free product or not a free product actually but um a product that's free to us is a college called GitHub classroom which allows me to share some starter code uh with you and you will clone this into what are called repositories um and work on it um and then you'll submit that back to me so we're going to go through that process of basically uh using the GitHub platform um and version controls to turn in our work this is going to replace repet um the online um uh code editor that we were using in um fall of 2024 uh that changed their licenses unfortunately and has made things quite a a bit of a headache the first thing you'll need to do and don't worry you don't need to take notes on this this will this this video will accompany a page that has all of these instructions as well the first thing you'll need to do is go to github.com um G hub.com and sign up for an account if you don't already have one and if you have one uh sign into it you can either use your uh your school account or your personal one um I'd recommend maybe starting with your personal one if you if you're comfortable with that that won't matter though this code will not be attached to your your personal account it will only be uh part of the the school repository that I've set up for grading um lots of details there that are be on the scope of this video but go to githubsign in and then what you're going to do is you'll get a link uh from me that looks something like this um it won't say this right away it'll say well there'll be two steps involved first you'll get a link from me that says do you want to join you know your respective classroom that I'll set up um uh pretty quick here um and then within each assignment you'll get a link within there uh uh that uh will say do you want to accept this assignment once you've accepted the assignment um it will set up your repository and that's what's going on here it's creating a repository for you um and uh you will um you uh it'll create that and I'll show you what that looks like in just a bit and then from there you can actually just open that in what are called GitHub code spaces code spaces is an online editor and this is the main reason we're going going here is to use this online Editor to uh do our code editing and collaboration if we need to um and and I'll walk you through that process as well this is an assignment that I've worked through a couple times just to work out some of the bugs and record different versions of this video um uh so I'll I'll be making a few edits in there but we'll use it to go through some of the uh some of the existing uh functions so anyway um you can go directly I'm going to go go and close this you can go directly to your repository um from here um it turns out that this is one that I've done after I've submitted it you can see some of these were just within the last few minutes um but the uh what you might just have here is like a read me that says like hey here's how you you know you do your your assignment this week and then maybe some starter program like main CPP here this is C++ code for those of you in Python um but all of these operations are the same they're just different kinds of files is all um so once you're in here uh you can certainly see which version of your files are the most uh the the ones that were updated last um if you've only cloned it recently it will be just you know the ones that you just copied but this is the one you'll want to check this is what I will be checking and you'll notice here it tacked my uh my name on here um not this is not me as the instructor this is actually me as a test student this is my Gmail version of my GitHub accounts um but you'll see your name here um leave that leave that the same that's all fine um you don't need to worry about uh anything like uh sing forking you don't open your files from here although you can you can certainly look at them and see what's in there like like this uh things like that but what you'll there's two things you'll you'll be interested in here um you will either want to just open in GitHub code spaces directly or under code here uh you you can get a local uh some some Ser different kinds of local ways to uh download this so if you're using GitHub uh the the command line interface you can actually actually um just uh you can you know clone the URL um or you can download it with GitHub desktop if you choose to go that route there's some instructions for that in the uh accompanying instructions but that's not what we're going to do today instead what we're going to do is we're going to go to code spaces and uh I've got two here one of them is actually active but I'm going to set up a new one for for us today that uh is going to clone our uh or make a a new code space so you wouldn't have these these are only because and you know what I'm going to even delete these uh can I can I delete those real quick yep I'm going to just delete these real quick because I don't need them hopefully it doesn't take too long I'm going to go delete this other one that I have going on I'm going to stop it first because it's active and then I'm going to and then I'm going to go delete that one as well uh because I do not need it for what I'm doing right now so now that those are deleted I'm going to make a new code space on main main here is the branch of the code I'm using um and we'll come back to that but uh what what main means is basically I've got one version of the code so if I was writing um and maybe I've got a stable branch of the code and then something I wanted to experiment you can actually Branch your code within GitHub um and I encourage you to look that up as you have time I'm not going to go into that today but uh know that that's an option but that's what main here is create a code space on Main is basically saying using the main branch of my code you can that's the one I'm looking at right here uh it's going to create a code space which is the online editor so I'm going to create that and it's going to start to fire that up what uh codespace is as you can probably start to see is um it looks a lot like vs code for those of you that you've used it so it's it's going to create that and again this is only from um this repository so this is what matters and all these files that I have here are going to be there um as soon as this gets done so uh I don't know what's going here let's take a quick look H that's okay um what it's doing here is telling me it doesn't have a build file uh which we might add I didn't add them uh for our C++ classes yet but that's probably something we don't need to worry about just yet um so if I open uh this this main file main CPP might be the file that I'm working on and you'll notice that it kind of tries to recognize that hey you don't have an extension for this extension are add-ins to this that are under this tab this little block tab here that help us help uh Visual Studio coder in this CL code space vs code um understand what we're doing and how to run the code in the in the case of C++ it needs to know um how to compile and Link files and then um in the case of python it's just the python interpreter um either way uh it will probably prompt you to install it and and certainly you want to do that um for the C++ you'll want the C+ plus extension pack um and uh in Python you will want just it's just called Python and I'll show you that in just a sec too so I'm going to go and click install here but if that doesn't show up for some reason and it's going to open a tab and do that for me I'll go and close that because I don't really need that tab um it went to it went from here which I was in um in the Explorer it went to extensions here and you can see it's starting to install it now it's asking if it wants me to use an experimental version which I I actually don't um but the other thing I can do is if if if I was going in for Python and um for some reason it didn't show up uh this I can get rid of all this stuff and I could type Python and I can show you which one we'd want to use for that it'd be just it's just called Python and it's called Python language support it's built in from Microsoft it'll work just fine for what we're doing for almost all of our code um we might have one little issue when we get to the uh games programming unit that I might have to rethink uh that we set up in repet uh but other than that we should be just fine so if you want to do install python you can there for some reason I haven't figured out how to make these things stick yet uh where you don't have to do this every time but you should only have to do it at worst once a week for your code space and then once you're set up like I said um that that will now be uh let me go and refresh this uh go ahead and refresh my my repository you can see here that that now exists and it gives it a funky name but um I could go to there from here if I hadn't yep and it's saying it's code space is being paid for by tor it's not it's it's actually being paid for by the college and by paid for I mean it's free to us given based on an agreement but don't go running like infinite loops and leaving them running forever there is a limit to these things um but I don't think we're going to run into them anytime soon for our work anyway going back to the code space um so let's pretend uh this code and like I said I'd already done this but let's say I I uh was wanting to do well here let's let's just change this so instead of hello world say I wanted to do it with exclamation marks but let's say I just my whole problem was to add this hello world right so I add this and I save it that's a hit control s behind the scenes um and uh what happens then is you might have notied this m popped up over here this and that means it was modified that's the source control showing you and this is an Explorer what's going on um that that this was modified um so if I go to the uh console here let's just go go to a console uh terminal I'm sorry um there's two ways I can actually submit this so you notice here that when I go into um when I go into main CPP here you can just see that it's hello world without exclamation marks that's the version I had here um but that might just be a blank or to-do or you know the prim exercises or things like that those would exist here but you want to update this file you want to get this here and you notice I just saved this but it didn't go there well there's a couple ways we can do that the first thing we can do is we can add the file to uh to get tracking and we can use the command uh get let's see is that showing up properly no it's just a little too small I'm going to shrink my window hopefully you can see this after I there we go get there um get and then I can do get ad and then I can do main.cpp and it turns out that was already in there for me uh because I submitted it earlier but that's basically adding this to the tracking is is how we would do that so there's three commands that you'll need at the very minimum the first one is that and then the second one is you have to do what's called commit you have to commit your um you have to commit your change uh and and commit means basically this is what I want I've done the file editing now and I'm committing this to to a a a change for GitHub and that looks um oops dang it sorry I thought I had a copy paste going on there but it's pretty simple command so I can just type it it's just get commit so that's the big part of it and then the last part you want is uh you need to give it a um you need to give it a uh a commit message and we use the flag there- M and we say you know um resubmit with exclamation marks think I mistype that but the main point is that we need this M for the message and then resubmit with exclamation marks if I tried to commit without that it would give you an error saying you have to give it um that that message so you'll see here that we we basically made that main main uh commit that's a check-in for lack of a better term and now that that's saved here and we could do more of those here and it the cool thing about it is if you ever mess up your work you can go back to any commit um there's ways to do that again beyond the scope of what we're doing but that's what we mean by Version Control every time we do a commit we are basically um basically making a version of our program so if you start out on your final and you you know write print hello world you could commit that and you know you're going and then you maybe import your libraries you could commit that and then you can always build upon that and you can you know be running these the whole time uh which I I I recommend you do um and as as a matter of fact I haven't even gone over that yet I just realized so nvs code um just like when we added the extensions you might have noticed that this wasn't here this little um Plus or this little bug debugger thing going on here it wasn't here before um I just realized you can't see quite there we go um or or this one this run C++ file but once I added the extension these pop in so I'm going to run the C++ program and it's going to ask me a whole bunch of questions like do you want to do all this stuff with make files and things like that which I don't right now um I'm going to it's just going to go through here and eventually it's going to produce our hello uh output fil I think this is still stemming from that earlier thing so I'm going to actually do the whole thing again and we should before too long get our hello world with our exclamation mark so that's how we run that right um or of course uh we could do things like we could run the g++ compiler and we could say uh compile file main.cpp to an output file called main. out right um these are things that we do in C++ to get things running um and then we could actually even submit the out file by adding it um to our uh repository like so actually I think I've got two different terminals yep uh this one so now I can go back and I could add our main do uh out file and you'll see it change here from Green now it's going to be tracked and then I can uh commit that uh resubmit with an out file and that's going to commit that and now those are committed all those changes are committed but you'll notice here that still we do not I'm going to refresh this just to prove it we don't have those exclamation marks and as a matter of fact we don't have that main. out file here either we have some other stuff well the way the way we finish this whole Loop is we have to do uh a command called get push get push origin main is the full command and again I I give these to you in the uh in the module so don't worry about that uh remember but what this means uh let me go and expand this just a bit because I don't like that it Scrolls I want you to be able to see most of this in this little window like so there we go um get get gets the again the program push be is basically saying take this repository and move it somewhere push it um so origin is kind of the weird one here origin is an alias uh that's set up for you when you when it was when this uh was cloned origin is basically this URL up here it's saying go to GitHub and and and uh and and uh and push it there and if you had done this with GitHub proper as opposed to code space here it would actually have you log in and author eyes and make sure that you had rights to push to this that it was actually yours um but uh that's what's going on there is that you are uh you're getting ready to push it uh to origin or that URL so this is just basically a shortcut or shorthand for that URL that goes to your thing and then finally main is the main branch it's not main CPP or anything like that those are not related in this case uh that could be confusing I realize it's actually this brand and we only have one branch here called main but if you had more than one you could you could uh push it to different branches instead that's not what we're doing here but you need all of this so you need get you need push you need either the URL or the uh um Alias of the URL in this case called origin and then the branch and once I do that it's going to basically push that and we'll see then finally when we go back to our repository and refresh this we're going to see all of these changes that we we uh made we made you know so we see the one with the out file the one with the exclamation marks and things like that those where those comments come and then you this was this would be linked to Google classrooms uh I'm sorry GitHub classrooms and I would be able to then um to to grade it for you and get feedback um so there's another way to do all of this let's say I now want one with only two exclamation marks and I save it um now again Main's modified right just like we saw before and it's actually saying hey uh our main program our out file is also because that got created when I ran up here that's a binary file um it turns out you don't have to use those commands if you don't want to down here the git git uh ad all that you can use this this Source control here within vs code if you do that you'll notice we've got a couple things here like I can open the file I can discard the file if I want to which I'm actually going to do for this one because I don't really care about that one yep I don't care about that one but this one I want to add I want to Stage it so this is again getting getting ready and you can see it's staged now it went from changes to Stage changes and then finally I can unstage it here if I wanted to push this button then lastly I've got this commit and what I'm going to do instead is I'm going to commit and push um there's a built-in command for that here which is really nice uh once I do that though I'm going to see a slightly different thing than what I saw before because you got to remember you have to have a comment for these things so when I do that it's basically going to say hey do you want to uh you have to add a comment a commit message right that's what's going on here we did this before you might recall with that M and then and then the thing let's see if I still got it here we did that before by by using this m down here this guy and this this message that's what we're do going to do here so I can change this I can actually just delete all this or I can say changes to be committ so say I don't want any of those um and then I I'm going to uncomment these because the comments don't matter but I'm going to say removed exclamation or two exclamation marks something like that something simple right um so as long as I've got anything in here that's not a comment we're going to be able to do this and the way you do it from here is you actually accept the commit message and then of course this all up it goes and it's going to ask you to do that so again you can do that all that stuff with this and you can see there's nothing else changing here until I go in here and I make another modification then then they'll start to show up here and I I could go in and do all of that again so two different ways to do it but you'll notice now our new one shows up in here and we got the new exclamation mark uh for this I can actually read this and you can see the changes that I made when I click on that and you can do that for any commit actually it's really slick um any any of that that's that's GitHub in a nutshell so that will be available for me and it's LinkedIn classroom and then I could uh grade it and uh there's other things we can use some other extensions um I can't remember the name of it give me one sec let's see if I can find it real quick um there's a get there's another uh extension that you can enable uh let's see if I can find it real quick yeah it's called live share it's an extension um under under here called live share so let's go type that and I'm not going to go into this right now back to extension sorry live share I don't know what's going on there give me oh I think I just need to do that live share so if you if you enable this live share it's going to look at if you install this you're going to get a new guy down here in just a sec and this actually will allow you sh share a link that I can you can send this to me or and I can join it um so what you'd see is like this you're going to get this and it's uh forward and ports and and things like that and then what you'd want to do is do this invite participants like this and you could just uh send that to me so if we were like in a in a sync session or something like that and you wanted help with this you can actually invite participants and I can actually get into your your your space directly and edit it live I'm not going to Dem it more than that but that's prettyy slick too um so that's how you would do that if you need if you need to uh it's called live share so I think that's kind of it guys I think that's kind of the overview that I wanted to at least start with uh for this um but uh I hope I guess I could have made this a little bit bigger this whole time sorry um uh I hope that that gets you started with this I know it's a big change um especially if you're with me right now in September of 2024 um but hopefully this video helps and um I'm going to refine the page um I wrote a big old monster page on this and there's way too much information in there but I want to pair it back I wanted to get a lot of detail in there just in case uh you wanted to know more about this stuff so anyway I'll get this published tonight and hopefully this works okay for you and we can get get going so let me know if you have any questions like always thank you