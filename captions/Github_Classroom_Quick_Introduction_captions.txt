hello today we're going to introduce GitHub classrooms as a new way for LC computer science students to um turn in their co uh homework online and use some of the tools that we normally or that we formerly used in um in in repet um uh in Fall of 24 um uh in in September here repet really changed the way they work so we we want to get away from that and um and we're tring to going to move over to GitHub uh uh classroom and code spaces here so I'm going to walk you through a little bit about that uh of that and how that might look so um give me one just just one second to double check okay so um what you're seeing here on your screen is basically what you'll see when you accept an assignment there'll be a link and I'll put it in the URL here it'll look something like that it'll say classroom. github.com and that'll be a a link unique to the assignment uh that you've been given uh for the week much like what we did with repet um and there'll be starter code in there and things like that before um when you first I've already done it here but when you first come in you'll uh be asked to accept the assignment if you haven't done it and choose your name um so uh depending on the classroom um and you'll need to be signed into GitHub so the there there's um instructions on how to do that within the canvas shell um if you haven't used GitHub before but it's as as simple as going to github.com here oops looks like I forgot it to open over here sorry um this is my old one uh that I'm using as a test student account um but you you can see I'm signed in here and this is my some of my um existing work that I've done you know over over the the previous years is after I cleaned it out when I moved LC but the point is you just need to be logged in to uh to GitHub to to use this um your your repositories uh will not be stor here they're actually stored on L C's uh Community uh classroom uh repository but you need to be signed in to accept it so once you get a link you'll you'll sign in you'll choose your name and um and then you'll uh you'll be uh get this message where you've accepted uh the assignment um of course this is in C++ but it works just fine for python too once you've done that you want to make sure you hit open in GitHub code spaces if that's been enabled for your assignment and what that'll is it will set up your code space this is an online editor kind of like repet um so give it a sec just to do that and I'll walk you through a couple of extensions that you're going to want um as well um for those of you that have used VSS code before uh uh you um might want to make and uh you might want to make sure that uh or you I'm sorry it should look quite familiar if you get this message go ahead and click open and get code spaces as well um and it will pop open uh um it'll pop open the proper window um so in this case it's just setting up my existing code space because I've already demoed this uh but you can also do it right within here you might notice here uh the differences is that I've got a prompt here that I didn't quite have here right away uh the first thing you'll want to do if you haven't done it already is go into your extensions so that's this uh this little block thing going on here and for python you just install the python um extension it's just called python it says language support vs code and then for C++ you want a C++ extension you can just start typing that and you'll get this uh C++ extend let me expand that out a little bit extension pack and you'll want to install that um sometimes it'll save that and you'll get it back and sometimes you won't um so give it just a sec to do that um and when that's done it will sometimes ask you to restart and sometimes it'll just work in this case it just worked so I'm going to close this and close this and then go to my uh Explorer here again and you can see I've got files here now when I open a C++ program uh you can see I've got a run button here and as a matter of fact I can do just that so if I run this right now it's not going to do anything um so I'm going to goe and do that and you'll see uh yeah no I don't want to do that uh you're going to see that nothing happens down here which is by uh By Design uh but when I do something like uh you know do a out um you know just one of our early um I think I actually did that wrong did I do that wrong yeah maybe I did um yeah I always flip those wrong um so we write the stream to write hello world here and now you can see when I run this um it's going to ask me uh what do you want to do so I just choose the uh the g++ compiler um and it's going to ask me do I want to really do that yes the answer is yes um so now it's it's compiling and things like that you can you'll be able to see the main program get built here then if I go to Output um sorry I lost it here let me minimize this just for a sec so I can um see the stinking uh terminal and we can see that we got hello world here right so we've done our work um and then of course I could I could change this and run it um as well so if I wanted to say hello world to I could do that as well um and then rerun it and it will uh just do the same thing again and we get Hello World 2 just like we would expect python is the same way this is just C++ code you'll get a runner here um you can do it you can also um of course compile and things like that you could um do the uh g++ command here so I can just compile everything that's a C++ file uh like that and I can make a the a.out file U much like what we talk about in that um class and we get a do out and then of course I can just run it from here as well right so it's just like VSS code uh uh pretty much in that way we'll go over this in class of course I just want to let you know how to use the environment so the the main thing with GitHub though is it's a source control program and the way you'll turn this in is you'll actually do what's called committing you might notice these letters over here um that have been added uh to the uh to to your editor as you've been working uh where we've got things like U and M and things like that these are mod m stands for modified U stands for unknown at this point and what we need to do is we need to tell um gith Hub in this case to to commit these files so we do that by going to this Source control tab here and what you'll want to do is you the first thing you want to do if you want to add a new file um so we've got the main CCP CPP file is we want to Stage it so when I hit this plus uh uh um icon it's going to Stage the file and it says basically I like this file I want I want to to basically save this change and I could do the a a.out I'm not going to in this case and same thing with main those are the binary files so I don't really care about those um and then what you you'll do is you'll either commit but what I prefer to do instead is do commit and push and what push means is it will uh basically take the the committed changes in this case and push them back to your repository and I'll show you what that looks like in just a bit as well so if I do commit and push it's going to prompt me to do this um and it's basically asking you to make a comment uh for your your change and uh what you'll want to do with this is uncomment some of these lines with the hashtags um so I'm going to actually I I don't care about that one but you need to do you need to do something here um and I'm going to just uncomment these so this text right here is the is the the oops sorry is the comment that I want to send with this commit so make sure you do at least some of that you have to do at least one line or at least some code and then you can hit the check box here to accept the commit message and then you'll see all the changes are going to go up to the uh to the repository and um and then um and uh and then they'll be we I'll get a message that that uh your uh your repository has been updated and I can show you what that looks like in just a sec here um so that's kind of it um and you you can go back in here oh sorry go back in here and you can see that that is now um is change uh is uh is uh ready to go and then you know if I change it again of course it's going to want me to do the whole thing again so every time you change it it will be a modified file you don't have to set commit every time you modify it but you do commit when you want to turn it in and you want to make sure you commit the files that you want to work in um so that's kind of that in a nutshell um how to do it uh just just really quickly from uh point a to you know turning it in um ju just a quick getting started guide I'll go over some other Pages uh or I I'll write a whole bunch of um other ways to do this down either in BS code locally or using the command line and things like that in your canvas shell but if if you just want to get working and turn in your homework this is the way to do it um so let me know if you have any questions about that um and let's see here let me try to let me try to add a quick source here one second I can show you what it looks like on my end uh give me one sec to try to set that up um let's see let's add chrome okay uh let's see let's see where's my instructor one what's that called uh it's let's see where's my classroom yeah let's see if that worked yep it did um so let um what I'll see then when you do that here let me let me swap Windows here sorry about that with o in OBS let me swap Windows to this guy um is that working I'm not quite sure why I can't get Chrome to show well I'm going to stop this video here and I'll show you that another time but basically I'll get that IM immediate feedback and I can grade it um and get feedback much like what we did with uh repet there so all right that's the intro um look for more videos but this should get us going for at least now let me know if you have any problems s with this um and uh hopefully this is something we can get using in the next couple weeks and then um on a on a more permanent basis going forward