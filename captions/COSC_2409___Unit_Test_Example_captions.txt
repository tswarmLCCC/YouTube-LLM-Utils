hello uh it's Wednesday the Wednesday before the final it's May 1st here um I just uploaded a file that we um worked on last night in our sync session uh with one student that I wanted to make uh you all aware I'll upload this video and make a link to it here in a bit but um there's this test template file under your finals information here in 249 and um it's a skeleton of what you might do uh for the final um see if it loads here on this sometimes this takes a while it shouldn't take too long though it's only a little bit I think it's doing like a security scan but if it doesn't come up in a little bit I'll bring it up in an editor U what this is doing is U I'm I'm just giving you a little bit of code that you can wrap around your project to do testing uh particularly some of the more rare hands um you know like Royal flushes for example you might not randomly run into those and being able to test for those is a key part of your program um it looks like it doesn't want to come up quickly let me let me try to do this instead uh let's just do do this and do that there we go and yep here we go so uh this uh hopefully it doesn't look too crazy to you um the uh the three things I want to call out though this is a stub of essentially what you might be building for your final where we've got a class uh for a card and class for a hand it turns out for what we're doing here you don't need the deck uh class you'll need it in your final of course but you don't need it here uh for just demoing this but the idea is that we we overload the card uh Constructor so just just as a quick review this AIT function uh uh will get called every time you create a card uh with this sort of signature right with with uh if you give it a face in a suit our default one doesn't take anything it just it just refers to itself this you'd call this without anything um and in this case it sets the Su and face to clubs and Ace respectively um but uh it'd be nice to be able to kind of create a series of cards by hand and uh for example create a royal flush create five cards and and put those into a hand so I put together this code where you can essentially overload this which basically it's just another way to make a card you know an object of class card um but you can give it the face in the suit and all you're doing is uh creating these now of course you'll need to change these to whatever you put in your class for these things um uh this you know isn't meant to be like something you just drop in it's just an example um from my solution um and then uh I have random here for the random number generation for Shuffle but you don't need it uh well you will need it um you obviously you'll need that for your final uh but the one thing that you you might not have is the uh import CIS uh library and then down in main um down in main here is really what you can do a little bit differently now you'll have of course your simulation code here but you can comment that out on occasion and if you wanted to test your evaluation of your uh your your your hand evaluation so in hand you might have an evalu it looks like I don't here but you you know if you had one um you you would you could do something like this where you basically Ally uh create a hand right um uh just by just you know with our typical syntax like this and then you can either make a card independently where you give it the the um the face and then the suit right or you could actually use this shorthand so these are um equivalent this is just shorter so here I'm making a new card and then putting it into my hand with the ad card function um and again all all of these methods and things like that are things that you'll have to change uh depending on what you named them in your code but I can't imagine doing this project without some sort of objectoriented programming if you have this uh might have some usefulness to you but probably won't um but the uh so when we call card like this though when we call card like this as opposed to card like this um it's using our new um so let's just put that out here we can do something like this right something like that oops don't need that um we're it's just taking those in so what we can do is quickly make a card like this is the T of clubs this is the Jack of clubs so on and so forth um and because we're doing that we can just add the card directly just remember that you have to you know use the card Constructor and that's what's going on here and then give it its arguments and then you can add that card directly to your hand and uh as you build your evaluate function in your in your hand uh you can test it right so if I wanted to give a hand of two pair I could you know quickly just add the cards that would make up two pair and see if my evaluate hand does what it's supposed to um this gives you a much smaller turnaround when you're debugging things this week uh so hopefully that's useful the other thing I added here you don't have to use this but I like to do it a lot I made a tests subfolder in my in my my python project and then what's going on with this whole line is it's basically taking your uh your your console CIS do standard out and it's saying whatever happens in this block go to this file instead of to your console so what I've done here is for example this first one is uh I would put my um print statements for the evaluation in here if for example I got statistics about like whether the cards were of you know how many were in the same suit and where they where they you know how many pairs all those things uh you could put those in in like that file and then you could actually just print the hand um let's say I've got a print method for the hand in another file um so these files would just get updated every time I run this program right um and you can do this with anything you want so the prints don't clutter up your console and things like that and then once you get uh out of this this block right here it goes back to your um to your console so you don't have to worry about that there's ways that you can do that more permanently but this works quite nicely so anyway I'll upload this to YouTube real quick and send out a little announcement uh to that end and uh hopefully you find this useful let me know if if you'd like uh if uh you know you have trouble adapting this if you want to use it but uh as you get towards the end of your final um it's going to be very useful for you to be able to manually put in uh cards as opposed to having them random or I'm sorry manually put in cards uh to test certain type of hands and make sure they show up uh as opposed to um you know relying on Randomness especially for that Royal Flush it's such a low odds of that thing happening you might not see it uh reliably enough to test test that while you're building your code to evaluate your your the five cards in your hand and see if you have a royal flesh or even straight fleshes and things like that could be like that they get you know kind of rare to to draw those out of five cards directly um so being able to to test that directly uh might be something that's very beneficial at least I hope so so I wanted to put together this quick uh code and video to help you along in that way hopefully this is useful uh let me know if you have any questions thanks