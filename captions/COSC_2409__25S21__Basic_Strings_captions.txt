continuing on from uh numeric values um let's talk about their close cousins uh uh strings characters um and strings the the main difference uh between um in Practical use is that numbers will not usually have quote marks around them and strings will strings are characters um strings are taken as literal strings um think about the meaning I guess between like the value of 21 it's a quantity right and the name Trevor or the word red they they those have fundamental fundamentally different meanings right um where the there's a quantity and an idea associated with a number U strings of course you can't add two strings together uh in in the way that we do with numbers um even the word 21 like we typed in the previous thing you know if we typed out the the string TW w n t right uh that that by itself uh you can't add two to that um without your brain doing some some gymnastics and saying okay I need to convert that to a number well the same thing is true with strings strings are great because they allow us to do things like uh communicate with our users um and get input and output but uh they are a fundamentally different Beast um and if I can make you know one thing driven home uh over these two videos is that you need to treat each of them differently and be aware of the types the data types that you're dealing with with with each of those um so with that said let's get into Strings a little bit um and talk about how they're supported in Python um I've imported um a bunch of strings and some examples from the python official tutorial which you might recognize a lot of the examples here from um to support and this is in addition to what we'll do in zybooks um the other thing I've done in the meantime if you're using VSS code you can install an extension pack for this uh so uh where you can do a little bit more with python other than run entire files um so if you see me do something like this and um I hit uh control enter or shift enter what it'll do is it basically takes the lines that I've selected and shoves them down into the console that's all it does so to get this to work I need to basically go into python like so and set up The Interpreter so that's all I've done here and now you'll see if I hit control enter it's just uh running run it's basically saying take what I've got here and put it down here um so instead of typing all these things we can speed up with our examples um so uh let's start with Spam eggs here right basically what we do to uh identify a string is we use either quotes or or single quotes or double double quotes um now there's some really cool tricks to this it seems pretty simple but you as you'll see on the next line we use double quotes instead of single quotes and you'll see that this works as well um uh right so we see that doesn't actually work the reason that worked you'll notice there's a single quote in here well the the the the string here is being delimited by double quotes in this case so it knows to ignore the single quote if I did something like this on spam oops sorry if I did something like this on spam eggs here um and I tried to run this you'll even see the syntax highlighters freaking out it's basically thinking this is the end as opposed to this being the end and it's because it's got this single quote here right but if I want that in there there's ways to do that and we'll talk about those in just a sec so if I do that uh sorry hitting the wrong button let me close co-pilot here let's see if I can get rid of you I don't want you go away ah dang it oh there it goes um so if I hit shift enter here U it basically freaks out and that's of course because of what we just said so if I change it back we're back to normal and that works we we it prints spam eggs now the reason this works down here um is because I've changed the delimiter changed it from single quotes to double quotes they're both valid um now it says okay I'm looking for a double quote not a single quote so that's a pretty slick way to get around that now there's other ways around that um and we'll see one here down here in a bit um so uh but moving on let me just kind of go in in order here uh because I tend to jump around when I get excited about talking to you guys about these things is um is you can actually just put uh more uh and well this is just another example of double quotes going the other way right so now we have um single quotes delimiting the whole thing and we have double quotes within it that's why that works it's because we we're looking for for those now it turns out you can use what's called an escape character and that's what's going on with this back tick here um it's this is called a backslash and it's saying any the next character out of this after this take as a literal so in this case this will work because I'm saying this is not the end this this double quote is not the end of my statement uh my PR my my uh thing it's just another character in the string so you'll see that that works as well um now if I got rid of one of those of course we're back into our air right it thinks this is the whole thing this this little bit right here and you can even see it's kind of freaking out um as we go here so if I do something like this you'll see that we get a syntax here so two ways to do that this is probably the preferred way to get used to um because there's other other things that you'll want to use in there but that's how you can use quotes within quotes um the next thing I want to cover are new line characters or other special characters um those will often have a an escape character as well but they'll have a special character and there's references for for the for these in your textbook um and also online um but I just want to introduce them in this so here we have a string we're again assigning a string to a variable we can do that just like we do we're assigning to a string a variable called s and what's going on here is it's basically saying okay this is a special character and in this case it's a new line so when I run these two together you'll see that they go to first line and second line if I took this out you'll see that that is not the case there's nothing special about that right um so but by putting this in um I can then Escape it so that's called a new line character or a line break um you can do the same thing with page breaks tabs and a whole bunch of other things um uh let's see oh there's a special kind of string called a raw string in Python um which is beyond the scope but I if you see this R before it it's basically taking things um a little more lit L and you'll see that um that does not work it's basically not going to do that and you'll even see the uh what you're seeing here is basically and it's handy for things like um for file paths that's what's going on here actually but you'll see that the forward sln here it ignores that escape sequence just a little bit of trivia but that can be super handy sometimes uh when uh when you get into um you know processing and and working with file file line file uh file directories and files sorry a little stuttery today trying to get a a lot jammed into these videos and keep them short for you guys um as we talked about with comments you can do multiple lines so uh typically you could not do something like this let's go back to even spam eggs I could not do something like this where it would go like this uh you'll see that that starts to break I could can't do any I can't do this um that that's just a syntax there it's basically saying I'm looking for the next quote on this line um that's just the rule with using quotes like this um and that's true of invariable with invariables too but if you use this uh triple quote and this can be single or triple uh quotes you can do things like this where you you uh embed line breaks right in there so I can type as much as I want between those and it'll keep going basically until I hit this um until I hit this next quote so if I run this you'll see that that works just fine it's actually let me clear this just so I'm a little more explicit uh so let's just exit out real quick and do clear the CLS by the way if you ever see me type that that's just the clear console command then I'm going to go right back into the python interpreter and you'll see if I run this now it will basically it's printing it here it's telling me what it's printing but you'll see that it's printing multiple lines here uh very elegantly uh super handy um and I can't remember why it needs this quote but I'm pretty sure it does does no it doesn't I'm sorry uh that I can't oh I think that's just giving um an initial line to it that's all that's doing there so kind of cool there now earlier I said that you can't do math uh on strengths and it turns out I was lying you can do math on strings but they don't behave like you would think you can um actually repeat things uh so this will actually repeat un three times and then you'll add um on top of it so what's basically saying is saying repeat this three times and let's do this down in the console let's just play with a few of these so let's do three times high so we can kind of see what's going on there so it repeats it three times and that's kind of what's going on up here and then you can also add things to it so if I did like um you know like Trev plus swarm it will add those together now uh oh you know why I did that because I CH mixed up my quotes um so it's stick to one kind of quote but you'll see it's Tri form and of course I could add a space in there I could do that two ways I could add it in here or I could do something like this where I could add another thing in here and this is something you'll get to do a lot of as a programmer where you're you're controlling your formatting by combining strings like this um so you'll see there that we get Tre form and of course you can combine these operations where here we're going to get three UNS plus the the uh theem so we're get unem uh when we run this uh but pretty slick and a lot of a lot of neat tricks there that um aren't immediate sorry hitting the wrong keys but when I actually run that thing down here you'll see that we get an un onum um you can do this without uh the plus sign if you just have strings back to back it will just actually combine those for you um just a little Shand nothing too crazy about there um and of course you can do that you can do multiple lines uh like that as well as long as you uh put each one on single quotes uh so you can you can um combine multiple lines together like that and of course we could do something like this too if we wanted a new line in there we could do something like uh space sln or I'm sorry is it back slash n yep like so and then it would actually do a line break that's just another way to do that as well uh so that's kind of slick uh notice the difference here this one does not have a new line um even though they were on new lines here this one does have a new line just because I added it and then they are broken out on new lines but if I get rid of this line here and I go back and run this we'll be back to one line uh if I print the stupid thing it will put that back on one line so they're on separate lines here U but it's just basically using this syntax right where they're they're um side by side regardless of how they how you get to those in Python so uh that's uh let's let's break this video up uh this was already getting a little long in the strings um I want to get into slicing in a separate video so I'm going to pause this video here and come right back