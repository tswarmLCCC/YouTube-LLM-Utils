welcome to the uh supplementary material for the unit on variables and memory and a few other bits about extending what we did in the first week um just kind of getting a program up and running and starting to kind of figure out what we're going to do with this this thing we call programming and what that kind of means in a nutshell it's kind of our second foray into this idea of computational thinking uh this week there is some guided learning um from your zbook um and then there's going to be an assignment where we actually create a program that does a little bit more than just just say hi to us um so this should uh this uh this video will after I've done recording it will be in the week two overview as well um and uh and then our assignment is the week to home here uh as I've named it so far that might change a b it's in this week of introd introduction to computational thinking um I've got a bit of a PowerPoint uh just a short slide deck to introduce a few high level concepts for us um and we'll we'll talk a little bit about memory and variables and then we'll go in and do a few demonstrations on that concept uh and uh finally we'll get into essentially the uh Prim exercise for this week where we study study that a little bit more and do a little bit more where you think about it and do a little coding in Visual Studio yourself so that's kind of the overview for the week um let's switch over to the PowerPoint here see that comes up for us okay great that looks like it worked just fine um so like I said we're going to talk about memory variables and programs this week um you might recall from the the intro video we have this uh kind of overall arching um a mindset for the uh the the course where we're going to build tools um we're going to build tools that we can use to to problem solve um and the ones we're going to cover this week are is this concept of variables which we'll describe in just a second and then at the end a little bit about input and output IO is what that stands for it's what IO stands for and that basically means that we're going to collect input from users um here than so I want to talk just a little bit about memory um memory uh in a computer uh is and information in general in a computer is stored with electricity um it's really just the presence or lack of a presence of electricity in a circuit in a wire um so you could think of it like a light bulb being h or off um and as a matter of fact that's a really good analogy uh because what we use is as we know is called binary which is uh just the simple representation of a signal being on or off so you can think of a light being on or off and that might be zero or one or true or false um well it turns out that we can then extend this and you might call this from our B binary unit into starting to count things and go from um uh on or off and then we could have two light bulbs where uh examp uh you know we might have 01 meaning the number one we we did this a little bit in week once I'm not going to go back over but the idea is those electrical signals are just a series of on and off signals but we can take those um on and off signals and we can use uh or computers do this I shouldn't say we we humans don't do this we do it quite a bit differently but it's mimiced quite elegantly computers when we uh introduce a concept called the transistor and that's what um are in a lot of computer chips these are memory chips on a computer um and there's millions and millions and millions of of these little things called transistors and their whole job in life is to basically store a signal uh over over time so they can be turned on or off and when they're on they they have that one signal and when they're not there's zero um so the idea in programming is we could take advantage of this in many many unique ways um one way to think about this is that we can each one of those I'm GNA go down to another slide back this one um and then I'll come back to this but the idea is we're going to talk about essentially uh memory getting um essentially a name or an address um so like this this mailbox here might be my address you know the address down the road as I'm sitting here at home tonight lecturing um it might be the address of of of my mail box outside my house well if we think about memory is just a place to store these signals and again like my name might be stored here uh in an address called first name um where the te is in the first few bites uh and then the RS in the second and so on and so forth right and they're sequential well what we've done essentially is we've we've told the computer that we're going to call this range right here um a variable we're going to call call this a variable called first name and I know that's a little small I apologize I was going to do this in paint but it wasn't working with my recording program so had to move it into Power Point um but the idea then is that we can refer to this whole thing then this this place in memory as as first name in a program um well the nice thing about that is that we could change this if we wanted to I could add o if we wanted to make a bigger one or I could you know put like if if for example we had somebody named Aaron that would fit in the same space we could put e r i n here um but the idea is that what's stored in here is is referenced by this this concept of of first name um and that might seem a little trivial right now but when we get into what we're going to do in just a bit this becomes a very powerful concept because we can use this this place called first name um as as an input for a program and you might recall uh from our very first week um when we introduced this box that uh computers do really well with this process of taking an input doing something with it and then producing an output well the nice thing about what uh we can do with variables is this input then can change a little bit right we can just say go to this place called first name here and it's going to go into a process and then it's going to do something with it so that's that's kind of the concept um of of of what we're doing it of what we're going to be doing here um as opposed to just always saying always do this thing on this name called Trev or this number called 21 we can say take the input called first name or the input called it's called age um and do something with it instead um so let's see what else did so oh and then the other thing that we'll be introducing so this very first this very first uh week or the second week here we're going to just um we're going to find many many creative ways to use this but don't be overwhelmed by some of the ways you see variables used that will come naturally um and I kind of like this slide because you know know this a crescent wrench is a very handy tool to have around the house right but you often use it in unorthodox ways and that that will often happen in programming too um uh I just these tools will become more and more familiar to you as a matter of fact as as you really kind of go through um the the the the tools here you'll almost think of these as they play with each other very nicely um these are all building blocks and we're going to go you know kind of simple but then you'll see variables in IO used next week we talk about if statements and that'll be used within loops and we'll also start to be able to then take these Concepts I'm sorry losing my place here I don't have the right slide deck open um where the input becomes more and more complex where instead of saying we're only dealing with a first name at a time we're going to deal with a whole part of a program at a time or we're going to even deal with entire programs at a time and they become what what goes into a bigger process and becomes the output so that's how these things kind of build on each other um and we're going to start with what's called a procedural program here where it's just a simple um we're going to take a simple line of code and then we're going to expand it to have multiple lines of code a procedure if you will or an algorithm to do something quite simple it just be some calculations this week um but then those calculations might be incorporated later in in our our our um our you know how we build things into more complex things where they might be repeated or used in different ways completely depending on what's going on at the time um it's really this idea of abstraction that we're talking about here uh where we're going to take um ideas and we're going to do them very very well and uh make what's called a routine or an algorithm or a procedure for that and then we're going to it's going to go away you can think of it um like a recipe almost like we know how to make dough right we we we add flour and water maybe some salt and things like that and we do some certain things with yeast but then that becomes a known process then we take that away and we put that on the shelf and then when we want to make something a little more complex like a pizza we bring that idea of dough back out and we say make the dough that's all we do right we we know how to do that that's kind of a known thing we can even buy it at the store if we wanted to which has some interesting thought processes in in its own right but then we can take that dough roll it out and add ingredients to it and build on top of that that's what we're going to be doing in this course and that's really why we introduce this idea of input process output and you'll see it many many times in my lectures here um and then that goes along with these these tools here um starting with memory and variables so with with that let's let's get into a little code here a Let's uh make sure I didn't miss anything else oh I do want to introduce one other concept here yep this one so the thing uh the other thing I want to do is uh introduce um this idea of diagramming programs um this this is these are called flowcharts or parts of flowcharts down here um and in this week we're going to be talking about a sequence over here on the left where block one and block two are just simp uh statements these this could be print this could be assign a variable which we'll be doing very shortly things like that in the coming weeks we'll be introducing conditional uh statements and Loops but you can disregard this for down I just wanted to put this as a reference and we have another reference on our shell here for these shapes and what they mean but the main one I want you to be aware of this week is process I'll come back to this though we'll be talking about some of these other things here in a bit so uh just wanted to touch on that in the lecture notes here before we get going okay let's uh let's do some code let's do some real work instead of all this abstract mumbo jumbo huh and switch over to my coding window here if you just give me a sec okay so uh you might recall that we have done things like this let me just go ahead and print something here go and clear this out Ju Just for just for oops sorry we'll just kill her just kill it so we we've done things like this right where we made what we call a statement print here is telling us um to telling our computer the input is going to be this hello right we did this last week and it's going to do something with it it's in this case it's going to tell the tell python to do this thing called print and we can run this and we can just do our shift enter and as as we've seen before it does exactly that trying trying to get that to clear out doesn't seem to want to do it for me that's okay you can see that it does that hello and as a matter of fact there's a a neat distinction here you might recall from our setup video that python uh can be used in a lot of different ways as a matter of fact we can do this line by line I can do the same thing if you'll notice down here in our terminal window I can print hello so if you want to do this by uh yourself that's that's great um if you want to do that you can do it number of ways you can uh bring up a terminal if you go terminal and you go new terminal that'll bring this window up and what you'll want is a python shell here um I'm going to go ahead and delete this one just in case and you can hit plus here and oh I'm sorry I do not want a power showell one I want a python one like uh I think maybe I have to you know what there's another way to in Powershell if you want you can just cut python it's actually really cool that it does that so that is actually calling the program Python and it's saying okay give me some stuff in this python environment and we can do this thing just like we did we can print uh let's just print something else and we can even do some simple calculations you can use this use this like a calculator but what's going on here is all we're doing is we're giving the input to Python and it's outputting something right it's the same thing that we're kind of building on up here in a in a in a a more grandiose manner but really all this is doing is taking a file giving it to a program and doing something in this case the the the file is our source code up top and it's going to this thing called an interpreter which is what python is on our computer when we installed it and then it's giving us this output in terminals we'll find many many different ways to get input and output into and out of programs but the analogy Remains the Same and it's quite elegant um um so I'm going to actually change a little bit here change modes and let's say we want I've kind of given away what I'm doing here but let's go ahead and say I wanted to do a calculation and I wanted to know what uh what um uh uh let's say let's say we wanted to know something like we want to know what 60 degrees in Fahrenheit oops sorry we wanted to know what 60 degrees in Fahrenheit would be in Celsius well it turns out that you can do that calculation with this formula we we can learn this from our friends down down the the mall here uh in in our physics department this is how we do it we we just trust that at this point we're we're Dum computer scientists we don't really uh you know know this outright but we can write programs to encapsulate information so this is this is the the kind of the the number we want to convert let's say it's 60 deges outside and I certainly wish it was here in December well we can run this and you might recall we can highlight things and hit control enter sometimes and it will do this calculation force and as a matter of fact it did that it would be 15 degrees celi so 60° fenhe is 60° or 15 degrees CSUS and we can even type that down oops sorry I trying to get this to copy paste but it doesn't seem to want see if I can get it sometimes it's a little finicky uh down there there we go I did that by right clicking if you're curious and it will give us the same information that's great you know that's a really nice way to to kind of uh start start with a program or start with using python to do some things but we can do a little bit better and this is where a programming gets its word programming what we can do then is we can instead of saying only work for 60° ever we can write a couple statements and this is where we're going to introduce this concept called very variables this this right here is is a named address if if you recall back to the PowerPoint um let me just go back there for a sec uh just going back here we have this first name well we have the same thing here in um in in visual Visual Studio let me uh go there one sec um where we're creating an address you can think of an address on a mailbox called 50 and what we're doing here is we're putting this this value called 70 in there so you can think of user input as an mailbox and says go there and grab whatever is in there and grab this thing called or the value out of it in this case is called 70 well the nice thing about that is we don't have to put 70 everywhere because if I wanted to like do this where I'm printing this thing out things like that I would have to put 70 here and here right you can even see um the uh the program kind of telling me what what's going on and we can we could do that I'll go ahead and do it and then I'll undo it just to illustrate it we can oops just like we do before we can put it there we can put it there and we might get something you know where we run line by line here where it's it's prettier it says 70 degrees is 21.11 Celsius because we did some formatting here right but instead of doing that if we use variables what we can do is only input it once so say I wanted to change the to 100° well because I've got this variable first it's going to assign this let's go and do this down here actually let's go and do this in the console one by one and then I'll run it all at once so first I'm going to assign it and this equal sign here in Python the single equal sign I want to be very clear about that because there's the double equal sign does something different that we'll talk about next week but the single equal sign takes this n this value and puts it in this in this variable in this address right so we're going to go and do that that's done didn't look like it did anything but it did it put this into there and it's always from the right to the left so your variable name always goes on the left side and then you have the assignment operator the equal sign the single equal sign and then its value turns out the value can actually come from other programs which is quite elegant we'll see that here in in in another example in just a sec um is it as a matter of fact it's going to happen right now now that I think about it out loud um I'm going to copy this now and I'm going to put this down here and we have a slightly different bit of code where we're taking the thing that was in user input and say go out and grab in this case 100 subtract and do do the rest of this math right order of operations and all that are in play here and then it's assigning that to another variable so again the thing that happens on the left goes in or on the right goes into the thing that happens on the left in this case we're creating a new variable called converted Fahrenheit and I'm going to go ahead and just hit enter here right and then lastly we're doing an output format so this is kind of what we did in week one uh where we just printed some stuff out and we we've studied F strings a little bit that's all that's going on here it's just formatting this pretty um plent plenty of material on that I'm not going to get into that in this lecture um and it does our nice little print job Well turns out that uh what we've built here is actually a program a sequence of three statements that do things that are related to a task in this case it's taking an input doing some math and printing it nicely um but because we've done this thing called abstraction where we taken the concept of here's the input and storing it someplace and then doing those operations on variables this becomes what's called modular we can change this in one place and think things happen to change everywhere else so if I run this again I'm just doing control enter to do that I'm sending it down to the python interpreter is all that's going on there um I could do -10 right figure out what that is so we've built a a a little uh procedure program algorithm kind of synonymous and all these things to do this thing right that's what's going on here and then once we've got that down we could maybe go the other way let's say we wanted to um we wanted to do something like let's instead let's instead grab something a little more robust right um where we we do something like this I'm going to actually remember we can comment out code by using these three uh these three um quotes above and below code we don't want it basically makes the the computer think that this is this is is um just we're we're we're writing to ourselves that's what this is is doing right now but what it allows us to do in this case is we can run this program like this where we run the whole file and the nice thing about doing that I'm going to go close this for a sec is because this is expecting input um it's going to wait for us and we'll see that uh what I do let's see I broke something oh uh just close that close that let's do there we go um it's basically going here and this input thing it's again it's another one of uh of uh let's go back here just set Power a PowerPoint window um if you recall oops sorry that's all we're doing here is a different kind of program where the um the ifs or the input statement saying wait for somebody to actually give us an input that's its input it's like print something out and wait and it's going it its output actually becomes an input to another program I know that's getting a little philosophical here but it's kind of cool once you kind of start to put that together how you can chain these things together hence the ter to term tools and Tool kits anyway Factory code sorry getting a little little ahead of myself on a few things here so let's get back here let get back here so when we run this we can we can actually have the user do this right where instead of running code uh we can actually just run this program and do the exact same thing we've been doing um so we can start to extend these things once we understand like okay we know that something like like this works well then maybe we can extend it so so instead of putting the variable in we can extend it to have people put things in and what's going on here just technically is first uh python is going to print this out this this text and then like we saw it's going to wait for the user to put something in and then what what happens with this float is that float is a is changing text or attempting to change text to a number so it can do the calculation so for example I can't divide the name Trev by four right that doesn't make any sense so if somebody put Trev in there uh when asking for the temperature it would actually just say and then if you tried to do math on it python would say nope I give up user error um so that's what we're doing here is saying okay first you have to take what's called a string and convert it to a number or a decimal point in the case of a float and and then store that as an input and that allows us to do things like that so if if you Tred to do this without float you might see something like a conversion eror typ air well let's actually just see what the ER would be right we can we can play with this real quick no reason not to computer Cycles are are cheap I'm just going to you know kind of clean that up and we'll just kill you and play you um and the error is could not convert string to float so if you run into that that's exactly why is it's trying to do math on a string and and it catches that before you even do it so I'm just going to go back here and like so and then this should just go back to normal where um we can put numbers in right and we get get those the other thing it can do uh or that U that I want to demonstrate is if I did put my name in here we'll get in there very simar right uh very similar so just just a good way to get familiar with some of those things all right so this is kind of the idea of building what what I'm calling a procedural program this week where we take things and we start to uh combine them and store things in memory uh in variables to do operations on them uh you know the the recipe analogy is a good one where we start to build things and modularize them we'll come back to the concept because it turns out we can Tech away code in a lot of really cool ways in in in programming that uh start to let us do many many of these operations either uh on a lot of data or in different ways or in different formats it's really it this is just really the tip of the iceberg if you could if you can maybe think of this as a nail and a board we're going to introduce Hammers and Saws and things like that uh to to kind of play on our our toolkit uh analogy you hear in a little bit okay so just a little bit more about the assignment this week uh you'll read about all this stuff probably before you've watched this video and then what I will have you do is we will go in and you're going to um right at the end of the reading um kind of do what we just did in this video I'm all I want you to do here is expect what kind of predict what's going on on and then run it uh run it that's all we're going to do in predict so open this up kind of read this code take a take a a second and say I think this is going to do this or that or the other thing and then be honest with yourself if you got it wrong or right um and uh the point of all this is uh to to take a second away from the code just think about what's going on um and then we're going to investigate it a little bit and uh you're going to run this and you can play with this a little bit uh this one takes a little bit of input um the next one is I'm going to have you modify this to add a few few different um a few different uh uh calculations in the same way and we'll do some printing here and we'll see that we convert things back to Strings so this is all working code and stuff you could you can build on maybe maybe you add 10 to it or something to that end things like that um and then last we we get into our assignment the assignment's pretty straightforward uh where you're going to just basically calculate uh the volume of a cylinder um you know honestly you have everything you need to do that right here um and then this is you'll write the program down here and maybe with a little documentation either in in you can replace this this block or you can just say you know um you know you could just start typing down here by da da da and explain what you did down there or you could even grab paint or another program and start flowcharting it that's perfectly fine too and then finally you'll you'll package up those files and then submitted in canvas um I think Friday night uh is the going to be our due date for for this next term uh so I I can grade and get feedback to you over the weekend and we can move on so the idea is that you'll you'll uh get feedback on your previous assignment early in the week right after you've done your reading so we can course corrected things are going on and that also gives our asynchronous folks a little more bandwidth to maybe um have a chance to get a get a hold of of uh uh you know get get a hold of me uh certainly or other classmates during the week when when we're a little more active um I'll be monitoring the boards though so do your reading the week before right our our our our work week for lack of a better term will be Saturday to Friday so do your reading on Saturday hopefully it's a little lighter and then the stress should come through the week and hopefully U you know we turn things in um uh you know by Friday um for this part of the C so that that's kind of the unit on um on memory management and variables and this introduction to what is a program and an algorithm um a topic we will visit many many times uh good foundational piece though really want you to get your your uh your sync your feed into that uh kind of concept um maybe think of some applications we'll have a discussion board post this week as well um as it relates to the final um but certainly let me know if you uh would like to discuss this further um in in the open Office hours or anything like that thank you