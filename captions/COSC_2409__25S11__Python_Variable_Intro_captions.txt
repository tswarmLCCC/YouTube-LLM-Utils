in part two of this intro to python its environment and um the execution flow I I want to talk just a little bit more about the console itself um in the in in the very intro that when I was just introducing this console um when we go into the python interpreter remember we can just type Python and we can get to this so if you ever see these three lines you're probably in a python enir interpreter and you can get out of it by typing the exit command like this um that that's that's a key thing to remember if you ever see those you can get right back out to your operating system but I actually want to be in there right now um as I showed you earlier I can do simple math and things like this or I can do simple print commands that we'll study in a little bit uh in just a little bit in this video uh I can type those um and do on liners but that that's not all you can do you can actually start to build a program here you can build a program here um if uh and frankly if you wanted to use this is a very good scientific calculator you could um or even um even more um it's a great it's as good to place as any to introduce this idea of variables um a variable in programming um as many of you already know is is a place stored in the computer's memory where we can assign values and and use them later uh we use them extensively in programming we use them to organize our work we use them to um iterate over many types of information all kinds of things um and and uh getting we're really getting back into computer science 1010 here material where we talk about why we do this and how memory works but the main thing is that we can use the simple assignment variable let's just say I want to say um I don't know um it is daytime equals let's say true so what am I doing here um it's not going to do anything what this statement does um is it t it creates a variable called it is daytime um and uh the the the thing about this is that you cannot have spaces in here and some other special characters uh and that's why I use underscores here um but I've got this thing now called it is daytime and as a matter of fact if I type it is daytime uh I can see what's in there it will tell me that I've got the value true now true here is not a string it's it's not the word true it's actually a special reserved word in um in Python uh it's called a Boolean value and it that type of variable only holds true or false um it basically is a one bit data uh structure and it will be one or zero um it it's probably well it is the most basic thing you can do in programming you can have a binary data of one or zero right um now we can we can add other types of variables but what happened here is when I created this uh it will take the uh value of true and say what kind of uh what kind of memory do I need for this and I'm going to allocate that much memory to this thing called it is daytime I can then reference that in other parts of my program so if I write a simple um uh structure that uses a Boolean data type so I could write something like if it is Data daytime I could do something like this and I can actually say print you know daytime and then um and then I need to uh how do I I always forget how to oh yeah I I needed one more line so it was still in the execution block um but you can see I can reference variables here in the console itself um and we're going to get into what boo Boolean and if in the if statement of the control block is in just a bit but the point is I could do this with any kind of variable I can say you know name equals Trevor here like so and I can print the name I can refer to anything in that session now if I happen to leave this session like so if I type exit here and I go back in I can't do that now I cannot I can't it it doesn't know it anymore I would have to go back and recreate that in here it's lost to me unfortunately um and I'm hitting up Arrow by the way uh so I can I can do hello here because it it I'm giving it to it right there but I can't do I can't print um the name without creating it like I just did um is the idea and that that's why it's called an Interactive envir enironment but once you close that environment it's gone that's why we use files though uh we start to write these things out so they're recreatable um and uh and we can do a lot with that so um just a little bit more on that um The Source environment and that you can access variables uh within your uh your um local envirment I probably won't use the console too much more and as a matter of fact you don't need to um a in um in a lot of idees like vs code I can um I can install things to run entire files at a time which is usually what you do or you can even make um or I could copy and paste down here of course uh into a python interpreter or I can uh install an extension that actually just lets me run uh selected code at a time which is quite handy as well um so just a little bit more on that and an introduction to variables in memory um uh so let's get into a little bit more um a little bit more uh useful stuff other than the nuts and bolts but I really wanted to ground this in what you can do with this uh just to tie things up um you can certainly write python at the command line in your computer to do about anything you want you can use it as a quick um Sorry my phone's going off let me just silence that for a sec um and uh or you could even start to script these things out um and run python uh uh you know directly you can even do things like uh I think you can do like this where I do I think you can even do like this without going into the this might nope that doesn't quite work sorry I thought in some systems you can actually do that where you pipe it in there's a way to do it I can't remember how to do it natively so anyway enough introductory stuff we'll get into um some typing here and and introduce the language properly in the next video