good afternoon welcome to a kind of a different unit for us uh from where we've been um uh at least if the order holds um we're going to study game programming in Python a little bit this week um it's going to be a bit of a different unit from what you're probably used to in that there's not very much programming it's more of a studying programming unit than actually programming we just don't have enough time to really get into all the um aspects of game programming at the end of of these classes these python classes that we in um with the uh the rigor I'd like to but I uh I know there's a lot of interest out there for game programming so as I've gone through the semester this year um with you guys I really wanted to put together at least an overview of a way to program games in Python so I threw this unit together and this will be one of the last uh units we do um as we're getting ready for the the uh the final um this will be uh a unit where we um don't do a heck of a lot of new programming we kind of study some examples of of game programming um there's a bit of a bit of reading to do but they're not zybooks they're actually videos and and reference material that I'll go into in just a bit um for the unit and then we we have you know two different assignments depending on which class you're in 249 or 1010 um so what I'd like to start off with is to go over the unit itself uh this learning objectives um and this lecture will be in here right here when I get it done this this this video will be there um and uh there's some documentation some code documentation here um that looks like this and like this and like this and I want you to kind of glance through this and read it I know especially in 1010 some of this might not make sense but I want you to kind of just kind of read through it and if you if it doesn't make sense that's okay um you know kind of just get through it and get a get a a rough rough rough kind of cut of what's going on here in in the three of these uh these little articles that come from a programming module called pame which we're going to study this week um there's three of them um and then P game by itself is there's a lot of fun stuff in here so I'd encourage you to come back and look at it later but uh it this is uh what we'll be studying uh in Earnest here in particular this Sprite module uh that uh the games are are written on uh a Sprite if you don't know is basically an image or an object in a game um it comes it comes actually from older uh older game programming technology when um the hardware couldn't keep up with drawing things fast enough so they'd actually have some tricks to be able to keep images on the screen like Mario would have different Sprites um that's not true anymore but the um the uh the actual way that these things work a lot of the the magic is in um in this uh in this technology here so there's some reading to do there but again don't get hung up on this it's an introduction this is mainly to kind of let you know oh okay I kind of know a little bit more about this that I understand every single thing we just don't have time for that um and then what I've done down here in the video lectures is I've I've um provided a whole bunch of different videos and examples so um the uh this video is only about I'm sorry this one is only about 5 minutes at the very least I want you to watch that one in its entirety kind of get an idea and watch this this uh YouTube uh author go through a game program then we'll we'll study this program a little bit same thing with this 10-minute one um those ones i' I'd kind of encourage you to watch um and then these last two this one is I think it's over an hour it might even be over or 3 hours this is if you really want to see the ins and outs of really how all these things work and how they go through this yeah this is a 4 Hour video so it's it's here print it's here if you want to use that game and to refer to different parts of it uh but you don't necessarily have to um and watch a full development of a game right this guy really goes through all of it his thought process and all that really like that video as a reference um and then this one actually is is another video um and it's a long with there's five different games in here five different games this one if you guys each one of these is about an hour okay so like right now he's making Tetris for example what do so those are the the that's kind of the what you'll do this week you do not have to watch all of the videos or read all of the stuff I just want you to know that it's there and I'd like you to glance through it and kind of get an idea um it's really going to help you out the more you play with it but again you know I wouldn't spend more than a couple hours probably on these videos and reading total um I'd recommend it but definitely watch the five minute one and the 15minute one um so uh with that said you're going to get introduced to this this Library called P game and you might recall libraries are bits of code that somebody's really perfected and packed away and put on a shelf somewhere um to let us build things that are better than what we could build from scratch at least really quickly we could of course rebuild all of this all the time but at some point we're repeating ourselves right um so the idea is that we kind of take our best ideas and build them out really well and test them this is what software development kind of is and then we um and then we use those to build better things we we live on top of this and game programming certainly is is um a technology or a field where you build up on existing technology um so with that I wrote a bit just a little quick slide down deck before we get into the actual uh actual uh code bits so let me bring that up just to kind of introduce a few new Concepts for us this week let me put this in reading mode um so the main thing that uh three things that you're probably unfamiliar with with what we've done so far is the this idea of using a window for a program uh pame does this for us you've certainly seen it I'm looking at one right now a window is is a container for a program that lives in Windows so instead of typing python it lives in Windows and we can close it like you know with the X up here like we do in Windows or we can you know uh have menus sometimes things like we do in PowerPoint here things like that so it'll it'll run in a window here for us that's one idea but that's taking care of us Pi p p game takes care of that part for us and we'll I'll show you how to set that up in in a few of our examples the next idea is this game Loop idea so a lot of our programs even when they've contained Loops they only Loop a couple number of times right um well that's not true in a game uh a game is intentionally an infinite Loop you might recall that and you may have done this when you're were programming Loops or or or some of your other work um an infinite Loop is a loop that keeps going forever hence the name infinite but usually that's unintentional we want it to leave after a while you know for example if we've gone through our lists and we want to be done with adding them up or whatever whatever we want that to end at the last last part of the list or if we're in a menu we might want to have an exit right uh an exit where it says okay now leave the loop and exit the program well a game is kind of like that actually where it's it's an infinite Loop where it keeps updating um its game State and drawing and collecting input um so really that's what a game Loop will do is it will uh collect input from the user update the game What's going ever is going on draw it however it's drawing and then and then collect the more input and keep going until the game's over right um it's an infinite Loop though um and it keeps playing over and over again we're just updating data that we're displaying to the screen in one way or another um and then the last thing that we probably haven't uh handled um to the degree where you'd understand what's going on out of the gate is this idea of an event handler in in in modern operating systems uh when I click a button on a mouse or a key or um you know another program send U what's called an event um you can make your program wait it or or hang out and wait for those things to happen either by waiting or just reacting when they happen otherwise it'll just keep going and those are called events uh keyboard presses and mouse clicks are the two biggest ones um where uh basically if if for example I push up on my keyboard the up Arrow like the you know this button right here this this up button um that can that that could be an event it could be the up up event press up um well I want my game to be able to react to that oops sorry I didn't realize I scrolled there see I I clicked an event um uh and it it scrolled to the next window anyway uh pame handles that for us as well and we'll see you know a lot of examples of key presses um in our in our games um and we handle those and they're just if statements basically if they happen we do something and then we keep going um but they're a different kind of if statement and really that brings me kind of to the main point of the whole unit all of these all of these things really are are the same stuff we've we've been tackling variables um you know Loops uh if statements you know thing functions certainly functions um object-oriented programming you know if we've gotten that far in in in the 249 class all of those things are just you know th when we write them from you know from scratch they seem pretty small and and not very powerful but when we add more powerful tools to them it's the same things we're just using it for different uh different inputs and things like that that get handled for us and we can build much more powerful programs as we're going to see in a second um so pame is a library that does a a lot of cool things for us um but one of the main things it does is this sdl idea the simple Direct Media layer um it's basically an interface that python has that lets us do things with images and sounds but also get keystrokes a little more efficiently and do things with the mouse and things like that um it basically py game takes takes that hard hard to under understand code it makes it a lot easier for us in a way that makes sense for game programming and that's what you're going to read about a little bit um and study um but again you don't have to become experts in this I don't want you to get too overwhelmed by this but just know that we're using pame to make our lives easier here um let's see so like I said it can handle graphics and Sound and Music uh which we'll see maybe not here um I don't know if the music will come through but certainly if you download the code it does it's kind of a cool little little Loop um but the main thing uh that is the event handling um basically being able to take user inputs um and and affect the game Loop then the other idea is this idea of Sprites and collision detection where um instead of manually drawing you know to you know whatever graphics card we have in our computer or or to Windows even for that matter we just say draw in this way now drawing in this way can mean a lot of different things in P game it can be drawing lines it can be drawing rectangles it could be drawing circles and moving them or you can also use images uh that we download um and as a matter of fact that's one thing I might recommend you maybe start by changing is either change the music or maybe the graphics that we use um when we play with these things when we play with these programs that might be a nice way to alter the thing if you want to and then Collision detection is basically programming the Sprites uh to where when they hit each other something happens it fires off a different event um sometimes we want the bullet to hit the guy and he dies sometimes we want morio to hit the ground and he stops falling right those are all things that happen with collisions or not hit the ground and fall through the pit and die um those are all handled within P game and we just need to learn how to control them with our loops and our if statements to make it do what we want um but it gives us some tools to do that and all that's covered in the pame documentation um not that you need to really understand all of that to get going with it but it's good to know that all of that's available for us at some point let's see oh so py game as I mentioned before is a is a python package one thing that we may not have done yet I think we do but I want to make sure is to uh we we'll use pip pip to install this so pame gets downloaded onto our local computer if you're doing it locally um uh and I'll explain what I mean by if you're doing it locally in just a sec I know that may throw into you for a loop as well but pip will download pame and make it available for us um it's a it's a free free thing that comes with python in modern day python um and then there's uh let's see I think I had one more some common things oh I guess that was it uh where I thought I had something oh pip list oh yeah pip list will uh install or list all of the modules that you have installed including the built-in python ones and then pip install followed by the name uh will uh install and it's lowercase pip by the way this is just so it's like this oops dang it um let's see if I can actually update this to where yeah there we go so yeah it's it's like this um so if we did like pip install Pi game it will it will download and install py game to our python environment then we could just call it which we will do and then if we wanted to get rid of it we could do the same thing with Pip uninstall P game like that so but the main point is that they're lowercase so if you have uppercase it's not going to work um and then repet is another bit of software that we're going to use um or at least c not all of you have to use it um and it's one I'm going to use for computer science in general going forward it's basically you know how we use VSS code now it's basically VSS code but in a browser so you don't have to download and install um you know Python and all that which we didn't have it available at the beginning of the semester um we do now um so I'm going I I put some games up in repet um so you can go that route uh if you'd like as well to uh to to play these games and alter it there and I'll explain how to do that I have a page about that as well so let me go back to Canvas real quick and talk about just that uh so rep so in in your course modules there's going to be Let me refresh this real quick there's this um down a bit [Music] um it's this using repet to code in your browser it's that page and that is this so basically what you'll do is you'll go to repet which is just website and you'll uh you'll click up here where I'm installed you'll sign up and I explain all that and uh it even talks about that this is a video from repet going guiding you through the sign up process and then what you'll do um let's see if I can make this happen here is when I go in here let me go into a repet so I'm going to go into mine and we'll go into this 1010 one that I wrote here we're g to we we have two of them I'm going to use this one and I'm going to do this in a different window and try to sign in as my other account my student account give me one sec to do that off screen here oops that's not what I wanted oh I think I need to I see okay give me one one sec let's see oh goodness I have to verify it to me on my phone give me just a sec to do that shouldn't take too long as long as I can get into my phone there we go that's taken care of okay um and then I need to make this a public repet give me one sec there we go and I will just need to do that on the other one as well so um let me do this one more time now where I'm going to go back here actually I can do it right from here um from here and you don't need to do this this is just because I'm signed in as an instructor and I also need to be in in uh in uh um in a as a student here uh well dang it I can't quite show you that yet I'll pause and fix that in a sec thought I just fix that uh let me try the other one example no uh this one rectangle defined by craftsmanship I'll have to fix that but the idea is that you go into rep and I'll show you what it looks like so you'll Fork it though is the idea and that's explained in this in this page sorry about the hiccup there um it's hard to do with the users um but what you'll do is you'll uh you'll Fork the um it's in the top right you'll Fork it that makes a local copy of of the code for you um and then what you what you'll do is you'll invite me back out you'll send me this link you'll go into the top right and do this copy uh join link and you can it's private so it's still just me that can see it but you'll send this back to me either before you turn it in if you need help or as part of your homework that's how you use that and the way that looks then is this so this is a fully uh full development environment and you can see here when I run this um it's going to uh start up and it'll fire up this game most of the time let me Let me refresh this sometimes you have to refresh it a couple times because this is doing a lot in the browser so when I run this it will actually play this silly little game that we have here in a browser so this is one of the games we're going to look at in just a bit um but the idea is you can change it you can change this in this environment without having to download anything to your code so I'm actually hitting my space bar here I don't know if you can see that and uh do that now if you download this and I'll make this code available to download as well it's got music and stuff that you can't hear in the browser uh but it's still pretty Pretty stinking cool um so you'll Fork this you'll be able to play it um after you get it running and this has got Pi game installed already for us by the way which makes it nicer there as well and then you'll invite here like so and you'll add my my T swarm uh at LC um uh uh uh um email address there's a slightly different one and then you'll turn this on so you'll you really just need to send this to me and then I'll be able to go go see your code so you don't actually need to invite me sorry I lied about that you'll actually just copy this and copy it to me and you will you'll send that to me and I'll be able to take a look and we can even collaborate um I won't go into all that but it's Pretty stinking cool um so that's what repet is um and if you have problems with that let me know it's kind of a new tech for us but everything you need to know or should need to know for it is on this page um so I I I put a lot of detail into this page you should be able to get there so um and then we have both of them but both of our programs so we got that game that I just showed you and then oh that's the one and then we got this other guy right here that we uh have this presence game so here I'm just using my keyboard to to play this other game that we'll we'll play with and neither one of these are my code by the way I don't want to I don't want to act like I I wrote these things certainly could uh but I I downloaded these because they have videos really nice videos that AC accompany them and I I just didn't have time to write a full game tutorial uh for our weekly unit here so I'm borrowing some from online they're both really good videos um and then there's several more you're not limited to these but uh you can certainly use either repet or VSS code to do this um as well so in vs code uh it's very simple you'll just download the zip files like we always have um and this is the same game so here's VSS code uh this is the same game that you were just looking at um and here what I you know the only thing is that you know you have to install pame so we've got import pame right here um and again I didn't write this but um it could certainly could have um and then I'm going to so you'd want to do something like pip install P game like this um and it it wrapped here it wrapped from here to there but when you do that it's going to install P game in your local environment now I've already done that um um here that's why I didn't go out and install uh but it would it would do that if I hadn't um where it's saying hey you've already done this so you don't need to do it again you'll get some progress bars and things like that but anyway after that um it's just a bunch of code um and I'll I'll start to explain some of this we'll go over it so but when you run this thing so I'm going to go to its its Runner uh video uh this is the main program here um and we can see that it has a main program down here uh down down down it's right around here where it starts here this is what basically got a bunch of functions and then it starts with it's a nit function and does some other stuff and this is actually where we're going to pick up in a second but you can see when I run this it's going to I don't know if you can hear that looks like you can I don't know any got audio and everything just really groovy music I I'm sure you guys are just GNA download all download that music and listen to it on Loop U anyway so that's how to get the things running and I hope that works you know pretty well for you guys um if if not let me know uh you know certainly part of this a good part of it is downloading installing and getting it running but after we've done that what do we do well we start to study games right so the first thing you'll probably notice is we've got a bunch of folders over here and we've done this before for our Prim assignments but they're a little different here where here we actually have Graphics in here where we've got this fly guy and this player guy and this snail Guy where these are actually animations right so we got like the the dude standing here and starting to walk he's got two different walks to him right um and a jump jump animation things like that so and uh what happens there is you can see here we're using pame in in this case to load an image uh in this player uh class now I know in 1010 we don't study object-oriented programming but you can think of classes as basically containers for similar logic it it stores you know Vari that are related to the player and has some uh some data like the images and things like that it just groups them all together um the the point isn't how it's doing it it's that it's doing it and then you can kind of see that here um and what's going on with this is It's just loading the images um and then um the uh the same things here is basically it's saying um this this is a uh getting the um the input from the game um so it's basically saying which keys were pressed and if it's the space button that's what this means uh jump so it's basically changing the gravity um so if he's if he's um if if if he's jumping um it's messing with the gravity and it makes the the the the sound so if I didn't want that sound to play I could just actually just comment this out like we comment anything else out that might be your alteration for the thing see so I don't know if you can hear it but he no longer makes that sound when he jumps um so you can start to mess with that uh or you could mess with the gravity as well um so there's a bunch of functions which I hope you're all familiar with here where we can start to see how this thing's put together now I don't expect you to be able to tr you know Trace all the way through the object and all that but you know you should start to see things like oh the gravity is changing the way of his position and things like that um or the uh like this is how the animation Works um basically uh the um they we load we load the different uh we load a simple dictionary here of those two images of this guy jumping right that or walking that that and that well they're just in a simple little dictionary here and it says says start at at position zero and then loop back and forth um that's all that's going on and then the same thing we're getting a player jump uh image here um well when he's walking we can see here so we can actually just you know kind of look at player walk here I'm sorry player walk and we can actually uh just kind of look for it and let's just go down and see where else player walks doing anything um where the image is actually getting set to him walking here and then it gets updated when the frame gets updated um that's you know what happens during this animation things and all these are plugged into pyit so and you can start to play through these the um the uhu the other thing that does work quite nicely is the break points you can actually step into and and follow through a whole frame of Animation um so the classes are basically registering a bunch of things about how in this case the player interacts with the world and you can see those here or the obstacles which in this case are just that guy uh the fly and the snail here and the same thing's going on here where we're getting the frames and he's getting the these guys are getting put um uh you know at different y positions so we could start to mess with that a little bit and these are just variables this is just storing something into a y position but then it's drawing it later um uh at at a certain y position so on and so forth uh depending on which which one it is so I'm going to run this again see this guy is kind of like there right well let's go ahead and make him a little higher up so that's the fly so he's going to be at like let's make him at a little higher at 110 I think that'll make it higher see now he's higher up and I can barely even hit him so that's how you could kind of alter the game if you wanted to um we could make the snail not be on the ground anymore if we wanted to we could make him like at one or you know 250 right and he'll be flying through the air now there he goes and that's because the Y position starts in the top left and goes down um and that's just something you you would either read in the documentation or you know from experience with uh computer Graphics um so it's not like math where y goes up it actually goes down from the top left that's how that works top left um on your video um we can see how the animation works here which is kind of cool it's basically saying if um if the uh animation index is is bigger than um than the length of of the frames of this guy's frames set it back to zero so it's looping um and what this is doing is basically adding a tenth tenth of it to it every frame um so every Tenth Frame it's going to change uh uh from one to the other um and then it's just saying the the image is is the frame at that at that uh integer so same thing we've always done right this is not not we're just saying you know the thing in that dictionary at position Z or one is the image we're going to use so if we wanted to add more we could we could we could certainly do that um and then some stuff about you know I'm not going to go into all of these but here's a collision detection that comes from uh that's coming from our Sprites uh and our uh Collision detection mechanism within pame itself it's actually saying hey do all this math for me and see if these things overlap and if so if so um then uh return the fact that there's uh no collisions things like that let me close that student email down sorry bow uh more animation stuff here very simple stuff very similar to what we talked about okay so the main game Loop though we talked about this a little bit ago is that it starts off with a knit that's initializing the window um and speaking of the window it sets this to 800 by 400 so this is 800 wide by 400 tall if I wanted to I could make it 500 tall well let's actually make it even wider so we'll make a wider game and you'll see it messes up because the graphics are kind of set up that way but you see that it doesn't do longer so you can see how we can alter the window very simply here in a program so instead of doing something like printing we set them out now how do I know that this is how you do it well I don't until I read the documentation uh of py game but the point is it's a very simple assignment it's saying build a screen object from this thing and it uses this screen object in other places the caption is just the title we're setting in some fonts um clock is actually the how it knows what frame it's on so that's something that is usually in almost any P game program um and then it's getting the music this is the music file that's again it's just right in this thing just right here um and I think we can play it yeah looks like we can in vs code which is kind of cool and these are just you know just mp3s and wave files uh nothing too crazy there but this is telling how to how to you actually do these things um and then groups are basically talking about the player and the obstacle groups um and these are how things update and and get uh animated uh in in and all that has has to do with that Sprite page that I showed you if you don't want to go into that I completely give you a pass on that um but this is really how the game programming the engine will if you will operates is this is how things get registered um so for your assignment um if you're in 2409 you'll be altering this a little bit um you can simply change the graphics or something or the the sound or mess with the gravity things you could find here but you can also change the game itself or even write a game if you really want to um um and then it's basically just doing more image loading loading the images like we talked about earlier um doing the intro screen and then here's the actual game Loop this is actually while the games while we're playing the game it keeps it basically says for every event that can happen and in this case it's just the space bar I want to say for this game it it uh uh well there's other ones but um uh as well but it it will do the space so it's saying here if if the pushing person presses space uh um oh this is stting the game Sorry if the game's active and they hit space um they it'll jump things like that um and I can't remember what blit does but basically what the game Loop will continue to do is while the game's active it's going to draw the game and then update the game uh the first the uh first the player then the obstacle group which are the the snail and the the bird thing um and then it's going to check for Collision um and then it's going to keep dry it and it just goes over and over and over again and then it ticks 60 milliseconds um and so th if we took took this out the whole game would stop working right it would never update so let's go and test that and nothing you can hear it but you never see update um so it's kind of interesting what what turns on and off so and it's pretty easy mess up this code I got hit like these guys come off scen right now kind of interesting side effect so anyway that's one of the games um the other one is uh this presents one this one's a little different um in that uh you um use a lot of different um libraries so let's go to the main the main uh the main program of this um what this does is it says from the source file SRC file um and we'll see that that's in the folder here go and unexpand it so when we start it looks like this not don't worry about this this is just pame and some stuff from uh from the uh repet environment um you'll see that we have different files so we have a component subfolder and a services subfolder and etails and then three other games well that's how you read these things in Python this SRC do components. game status this is a subfolder and this is a subfolder and this is a and then this is a file this would be gamest status. puy and to demonstrate that let's go to source and then components and then we have uh game status. pii and we can actually read what's in here in this case it's a class called game status and it's just saying that these are just numbers right so that's how you'd read that first First Column um and then we get a config from source. config which is again uh just right in the source file and it's right here and it's just saying hey uh I'm going to give you some variables uh that we'll use so you can change them in one place here which is good practice using these config files by the way where you set things up like this and then you use them everywhere so basically anywhere where I want um I want to use where's that config file go um the width of the screen I can I can just call the uh config do width uh uh variable here and I'd have it and I only have to change it in one place there um as opposed to everywhere it's kind of like using a function or a module in that way um let's see and then oh the game phases so from here we're actually getting um this is kind of a crucial one from s uh the the game uh phases um folder here or a file again game phases the LA the last thing is going to be a python file and here it is um we'll see here that we've got um the uh the um the three game phases where it's the main menu phase the gameplay phase and then the exiting game phase um and those are all defined in here um let me go and make this a little bit wider just so it's a little more readable um so you see these are these are just functions um and they're basically saying when we're playing the game this is this is the loop um where we go through and check for um some collisions here and we're updating Max scores these are all functions you can trace through all of these and it's a bit of you know a little all over the place but you can actually go through the whole program and this modularization it's hard to follow um at the beginning but once you start to understand it it's letting you operate on little bits of code at a time as opposed to the whole thing so um that's kind of uh what I wanted to introduce you about now I I know this can be very um overwhelming I definitely recommend that you start with the um the snail game it's a little easier to read here because it's all in one file but you can certainly play with the other one or bring in some of your some of your own code as well one thing I don't like about this snail game is this guy does not use comments at all um I might comment it up a little bit so you can understand a little bit better if I have more time enough time to do that before the end of uh before this unit goes live um I might might do that and replace these files but um that's kind of it um so in repet if if uh if you're working now this wouldn't be what you submit here this is actually the college copy uh the copy I made for the college so you'll all copy this you won't edit it you'll copy it um and Fork it it's called Fork just means Fork the version so we've got the college copy here and then you'll have your version here and then your version you own it you you change it you could delete it all but it won't affect this it's that's comes from uh Source control but when you Fork it then you can make a changes to yours um and um and then and then you'll give me that link back and that's how I'll create it if you work in repet now if you're in 1010 all you're going to do is write a paper about this you're going to kind of say okay I understand this I don't understand that um I could change this kind of thing that's all you'll be doing uh for in 1010 but in 249 you'll be making some slight changes and then if you're one of of the three in this uh spring semester that are in three both classes you'll you'll do both you actually have the two assignments for the first time with this unit so um that's kind of it um I it's a lot of cryptic code but I think you'll be able to track through most of it at least I hope so and if if I I've completely overwhelmed you please come see me um again it's more about you just kind of playing with it and reading the you know these docu documents watching these videos these videos are pretty good like this guy really does a good job of explaining all everything we're just well not Humble Bundle but uh come on YouTube hello folks he talks about everything he's doing here you can even write this where it's a simple I think you writing a snake game if I recall correctly 0 0 and if I run this again now you can see that the rectangle moves around Ian you can even just do this if you wanted to I know I run through that last bit very quickly but I just wanted to show you some of the features um so I definitely watched this video and the uh this one I was itching for an excuse to make a game both are pretty good um and and should get you there pretty quick and and again um I'm not looking for you to like recreate this I mainly want evidence that you've been in there and kind of understand a little bit of it even if you don't understand at all I'm not trying to make you game programming experts overnight here I'm trying to introduce you to the complexities of game programming and show how you can go down that rabbit hole if you choose to okay that's all this is you're not going to you don't need to use this again this semester probably um and if you're not a computer science student probably never again in your career unless you want to but this is this is how games are made um with these engines this this is a 2d game obviously 3D games are a little bit more so um I think that's everything I think I've covered everything I wanted to for this video um yeah I think so well I hope you enjoy this unit um it shouldn't be too much work of programing frankly go in there change an image go in there make the gravity different change change the controls I don't know um you know CH change the image out from the that dude make put a soccer guy soccer uh ball on his head you know make uh make this guy where's where's it at make make put a soccer guy on this guy's head in in an image editor or something like that and if you need help with that I'm even happy to do that we'll just make him soccer guy and we'll make a soccer ball walk around and play that game or something to that end um whatever you want to do uh is fine with me um I just documented a little bit let me know what you did if you're if you're changing the program and then otherwise you just be writing a paper about what you did and didn't understand in this whole thing and I don't want it to be a super long paper I think I even say that let me check uh in the assignment uh where's that assignment at yeah the writing one uh let's see yeah not looking for a large paper just write it you know a page is fine you know probably it'll take you about a page to go through these prompts I gave you so um you know I give you a few things that I want you to answer in the paper here make sure you do that um and then uh the other one is you you'll change something in there just let me know what it was and I'll grade that so again I I think this will be a pretty easy unit homework wise it'll probably make your head spin a little bit when you're actually trying to go through that code it makes my head spin a little bit I didn't write these things and you know different people write them differently large projects get like that you kind of have to get used to studying other people's good and bad code sometimes um but often there will be documentation that goes along with it like the pame documentation here where you can start to understand how the thing works and then you can Implement your own stuff uh pretty easily so anyway that's what I have uh for this I'll get this video put it up on YouTube here and get this module active so you guys can see it and hopefully you enjoy it uh thanks