welcome back to our continuing lecture series on the fundamental building blocks that we use in the Python programming language uh we're moving on from uh two very intensive units um talking about functions and then control structures really jumping into um and data structures uh really jumping into sets and dictionaries and and uh lists and things like that and all all of the all the building blocks that um can really let us um you know make some pretty sophisticated code and and and uh build a lot of things um up from essentially scratch in Python um when we do that though we we tend to basically build on top of um existing code or or uh repeat things and things like that that's what this new module or this this module on modules will be about uh module in canvas talking about modules in Python which is certainly uh you know uh an interesting little dichotomy there is is it um we're going to start off uh with an example actually um and we're back in regular regular scripts you'll certainly see why that is the case here as we go um let's see so let's let's talk about a use case where let's I'm going to close this just for a sec where we might want to build uh let's actually even go where did I put this thing let's go back even back here where we might might want to write a menu um a series of menus or well let's just let's just simplify this down to one uh you know I'm going to I'm going to do that let's uh let's say we just wanted a simple um I've got a whole bunch of them here A whole bunch of examples let me go ahead and save this off and I will make uh a new version of this let's go uh let's go I think I can just copy it actually and then we'll just make just make one of these just just we'll call this just small like so and then we'll get rid of everything but this guy this very first one um this is something we've done quite a bit in programs where we have um essentially we're wanting to you know capture some user input we might put this the their choices in um in you know a list here and then essentially print those things so we're going to go through and just print the options and then um while while uh they haven't chosen one of the ones we want um they uh they uh they need to keep putting um new um new input in until we get one and in this case it's just looking for an integer um so let's let's take a look at that just run it real quick uh just to kind of demonstrate so we're basically printing this out and then it Loops through prints the options here that's how we get these things printed out and then we wait we're entering a choice here and of course if we put a we're going to loop back through um uh or if I put five in here I think it will work no that won't work I don't quite catch um the the use case I wrote this a little bit ago I apologize for for having to catch up on myself here U but the point is it needs a number and then we we select a number um and it it prints out it just simply prints out what we chose here um after we've done the thing um so it's just simply printing that out within this while loop of course we could do some other work in here we could say okay you chose you know enter data or you chose list data we I've seen many of you do this uh operation in um many of your assignments and I think it's great um but what's not great is having to rewrite this all the time right this could be a a bit of a pain so what how can we improve that well one way we can improve that is we can um we can take these things uh and we can put them into um into functions uh let's see this this is uh yep so what we could do is put them into functions so so uh we might do something let's just do the same thing we just did let me um rename this again small or copy it rename it small sorry I I made a whole bunch of examples and you'll see why I did in just a sec um oops then this needs to go back into here yep oh I don't want that let's just go and rename this small now like so and and we'll stick this back in here um and get rid of all the other ones uh so what we can do is you can probably already see by looking at the screen behind me though is we can write a um we can write a uh a uh a function to do exactly what we just did uh in our menu and of course as we know from our function unit let just get rid of this one um and we'll get rid of all of these except for our very first example in the main uh Pro module and then our our our code gets a lot simpler right um or our main code right so we have this display menu item here um that uh when we run this of course it does the exact same thing but now it's um asking for a choice which is being returned from a a menu in an in a um in in a in a function so we Define the function here um and we we do some things with uh default parameters and things like that which are great um and we tuck it away and as a matter of fact in vs code it it uh even lets you kind of Tuck that away once you're done with it once this code's working we like it a lot right we can tuck it away and then we've got a function ready to go here and we can call this whenever we want to capture a choice and it does all this great functionality for us great right this is this is this is great um and and we love it but um Let's Pretend We're working for a large company and we want to use this menu system in like um 10 different places or 100 different places right how do we handle that well there's a a another set of options that we can use in Python called modules and modules are a way to basically uh tuck away our code in another file and um and then call it um call it call it from that file and uh we maintain um our code in one place in that file and when we need it we just bring it in we've seen this before um let me bring bring up our our our our uh our runner here uh let's see this one um so again uh here we have a uh we have two files we've got let's let's actually go into the definition first so you'll see in this file this is a file called menu.py in our in our folder here um and uh we've taken a little bit more time to use doc strings and you know uh do a little bit of documentation um and then uh of course we have our our different menu options so we've got display menu we've got a get input here we've got the confirm version we got a print header version and then we have um a main program that I'll come back to in a sec in this module um but uh you'll see in this main program it's essentially what we had before right but the difference is when we write it in a module like this like so um we can grab uh we can run in a um in a uh in a new file um let's uh actually just get rid of all of these just because uh just for a sec um you know yeah I I'll come back to this and and um uh but well you know I'll go ahead and leave them but you can see here that we don't even have to worry of there's no function up here anymore right and that's because from menu which is the name of the file that we defined the thing in from menu uh we import display menu and get get input here um we're using display menu here and this is just a function we find somewhere else so we don't have to worry about maintaining our our our menu systems and a bunch of functions we can import this one file and get access to a whole bunch of different kinds of menus so you'll see just with this one line of code here we go through and we can write you know use our display menu uh we can um overwrite it we can have um the options uh we can use get input uh we can use the get input with different um signatures as we uh go back and uh talk about you know use this thing in the way we uh talked about when we were talking about functions uh let's let's just explore that for a little bit uh where we um override we where we have uh we have default parameters um but you can certainly use it with or without those um so on and so forth uh going back to our um our our uh goodness sorry I'm jumping around a little bit a little um but you can see all these different use cases come from just having um you know several functions in our menu system let me go ahead and close everything but this close others no you can go um and then let's bring menu back up just to make swap in between those so you'll just see in here we've got several different uh functions so we basically got four kinds of menus and a way to test it I'm going to talk about what we're doing here in the next video um as we start to explore the structure of these things and things like that but hopefully you see the motivation where we get all of this basically for free once we write it and we're only maintaining it in one place um so we'll uh come back to that in just a sec uh but the main main version is uh you know we kind of move from doing something like this where we got um I'm sorry without a function even where uh we you know we start from going oh where where was the original one um sorry I didn't do do a very good job this is a good lesson in in um naming things a little bit smarter so you know this is kind of you know how we started it out where we didn't even you know put the thing in a function we write it in here all of this code is just for one menu system right and then of course we went to a uh you know a place where we've got multiple uh versions of functions in here um but we're we're still just you know th this essentially replaced um all of all of that code that we were doing and then we got a whole bunch more so what we're doing here right is we're basically compartmentalizing or abstracting away the code to do the menu system and then when we need it we get to do it in one line and we don't have to worry about all the nitty-gritty details and we can focus on our presentation like these strings are or other examples or looping in logic all of this in one program and then moving on from that of course we um we can even uh take that a step further sorry I keep jumping around and get rid of those definitions in our in our working file and we just bring them in from somewhere else where they're completely shoved away in another file and of course another big benefit is we can reference that file from other Runner programs like this so this isn't the only place where we might call that menu um so we don't have to maintain in more than one place um hopefully that kind of sunk in that motivation that's kind of why we want to use these things in a nutcase there's other reasons um that we'll talk about as we go but that's a good start um so I'll continue the lecture series here on on the module formats and how the these things are all working here in just a bit