hello um in this video I'd like to go over how to navigate most of your assignments and use a webbased um development environment we're going to use in this um course called repet this replaces using um integrated develop environments if you've used them before and should simplify our grading and um grading process but also how how I can help you if you run in run into something so if you're looking at canvas and you're for example navigating say week three here you'll notice that in your assignment here um you'll have a guided learning um and that's just the reading from our zy books um and then you also have a a graded assignment most weeks if you click into that it will look like this and it'll give you basically some um uh information about the actual um assignment and then it'll have this repet repository link um and if I clicked this it would look like this to me I'm sorry it looks like this to me for example this is a Hello World example um but this is the solution for the instructor so it'll look a little different um for you it'll look more like this um if you went directly to hello world here and it might spin up let while and say navigating if if the if the if repet has been updated and things like that but it'll look a lot like this this sort of structure and what you have here is a code navigation window and then kind of a tool window but you can put these anywhere um often when you come in this one's pretty generic but that your assignments will usually have the instructions copied here as well and I usually put them in the comments as well although you should change those comments to do your own documentation as you implement your work um but you can for example put this over here or you can put the shell over here you can basically do whatever you want you can even put them down here if you like um things like that so you can navigate things quite nicely that way um and the really nice thing about repet um let's see if I can um kind of demonstrate this is it's basically a collaborative environment that's kind of how it got it start but um they decided to make a version for educators which can be very very nice so let's uh pretend you for example didn't know how to spell Hello World in your very first program and you wanted to get help you could highlight the code here and go into threads down here start thread and it's going to basically pop this thing up and say um what do you want to say about this and say I don't know how to spell hello which is silly of course but um you can get help for anything like that and it will it will start that now this is tarm me as a test student but let me show you what that looks like on my end if I get um a notification um back uh where' It Go let back here and see so I get a notification here that um that a student left me um a comment and I can actually click the thing and it'll load on my end and uh you can see there that it popped up and it um it uh it will let me um you know I can I can review the comment things like that so if I I wanted to do that um I can I can review things like that and I can also just bring up um and so can you bring up threads so in here I can see that I don't know how to spell so I can just click this and say it's spelled hello so you can get a lot of help that way and I can even resolve it right here or so can you um so if I resolve this and we went back over as to my St test student you'll see that it popped up here and said he said something but you might not and you you'll get a notification but if you if you can't find that again you can use these same tools down here uh to grab the threads tool and just bring that or let's put it down here even and you can see that it was closed um but you can do uh view the the resolved ones and you can say um um you know it's it's spelled hello you can see what I said there and things like that um which is uh oops sorry didn't mean to click that so that's how you can get help with this thing but the really nice things about this um so say you're you're not you're not struggling and you just want to run this thing for most programs you can just hit run um and it'll it'll look for main here um and try to uh essentially execute um the main main program in C++ it just knows how to do that um but as we get a little more complex that might not work out so great so you might want to compile it yourself and this will especially be true if we're starting to use multiple files and headers and things like that so if you wanted to do that you can use the g++ command like this and I actually included that in in this one um oh wait no that's sorry that's that's machine code I made all call copied into the shell Force before the the um the class starts so you can use g++ and all that is is the gnu the open source C compiler and Linker and what you can do then is just give it the name of the file you want to run or or compile I'm sorry and we'll see over here that it's going to kick out an a.out file um because this is a Linux environment this is actually executable this would be like an executable in Windows and the exe file but here it's a. out and you can actually run it um and you uh like like so and you'll want to give it this uh uh period forward slash if you're unfamiliar with Linux this basically says say run in the current directory I think it works though even if you don't do that um nope it didn't so make sure you put the the a.out um and you'll notice here if I change this like so and save it um this is still going to just say hello world as we would expect right because we haven't recompiled it we haven't um made new machine code from our source but if I and you can just use the arrow keys that's all I'm doing here you can rerun this and then do a. out and you can see it's it's changed right so that's how you can do that um I'm going to go back out to our team here and show you a slightly different version of this and show you how you might do this uh with a uh multiple multiple files so let's pretend you're you're plugin away um and you um for example make a file like this with a header file like this excuse me and a support file like this and this could be classes or anything right I mean that's what we'll get into very very early on um so we've got where's this I don't know why it's opening multiple this well anyway you'd need a you'd need you know a support file and then of course the implementation file and then we'd have this guy or I'm sorry this guy um and the way you can do that is exactly the same gpp or g++ and what you'd want to do here is give it um main 2. CPP um and it will um oh I'm sorry I'm in the I'm in a subdirectory so I'd want to change to make main two like so and then I can compile that thing um now you'll see that it's it can't find this reference and that's because I need to include the header file or I'm sorry the um support file as well I need to compile and Link both of those so in this case I'd want to go main to support. CPP just like that and then main as well um and uh oh let me do this I think it's trying to run let's go main oops and oh well here let me move these back out I tried to get cute with my directories here let's just move these back out here for a sec and do this oh boy um what did I do here oh I'm still in that subd directory oh what did I do here let's see oh I misspelled support here I see so capitalization obviously matters and we can see it now compiles and uh then we can just run main two support much like we did before I'm sorry dot out there we go and we can see it's doing exactly what we want so um this is an executable um and there's some great errors here right uh because I I made some so I'm kind of glad I messed up not intentional I'll be honest with you but you can see what happens when you're in the wrong directory and I think this would even work in a subdirectory now uh let's put it back in main two let's put all these main two ones back in there and I think I could have done I think it was because I just made that one typo so let's let's go and you'd want to change directories right so we'd want to go back into main two like so and then I think we can actually uh see that I bet I get nope it worked there as well oh yeah it's because I was in there so you could work in subd directors if you got more than one now one thing that doesn't work great is um running uh more than one so like when you've got more than one and you try to do this it will it really doesn't like when there's more than one main in the project so that's when you'd want to go to compiling like I just did here so um that's kind of the that part in a nutshell um on how to how to work on the thing once you've got it working so let's say let's let's go clean this up a little and say okay I've got this going and I've read my unit test and things like that um all right so it's going to make new ones and then um all right we got that this is what it's supposed to do you can uh then then simply uh just grab your url here and go back to Canvas uh oops wrong one uh where canus go oh it's in here sorry you can go into the assignment itself and these are set up then all you have to do is go down and this looks different for for me as an instructor but and I can't log in unfortunately uh maybe I could do oh we don't even have any students I don't think let's let's see if this works so I can start the assignment and what you'll get is just this and you can just paste that in there like so and then um or you can even put a web website URL either one it doesn't matter and that'll just give me the link and let me know that you're done and you can even say I'm done so you don't need to work worry with files or anything like that because when you do that then I can go into to here and I can just I can just look at you at your code directly um so we're ready to go I can run it from here I just need to run it um and I can see the exact same stuff you were doing um if you make folders everything works just fine just swimming link so if I go back into the student view here um there's a couple other really nice features in here um if you didn't want to oh and you can see that I actually highlighted it because I'm actually in here right now and you can even see that up here um so there's documents here you can bring in libraries all kinds of stuff from here um if you're using GitHub there's a GitHub extension here um um I might make automated tests and I'll let you know if I do that which will kind of give you a clue if you're on the right track um don't really like those yet but they're kind of cool uh let's see what else can you do with this sucker oh you can you can do a chat as opposed to threads so it's very similar to threads except it's project wide so this project wide and it'll just stay there right and then I could come back in So if I go back over to my instructor view here you can see I have a chat here uh oh sorry chat here and uh I can say yes it is right so we you just get that right back so if you just want General help that's another way to do that and I'll see those um pretty much any time um so if you're if you're offline if you're you know two in the morning it'll just be there when I get up or if it's you know during office hours we can converse that way if you don't want to use microphone in teams like some people don't like to do um you can you can do all that uh lastly I want to show you how to use the debugger which is quite a cool feature um so if you drag a debugger out you can um you can just run this and I think it's a little funky uh with the multiple files but you can set break points and uh when you do that um it's going to show them down here and what it does uh is it actually will um oh I'm sorry so when you have more than one uh one file that's that's actually we're going to need to buug out um I'll put it here I don't think it'll actually trip there and so we bring the debugger out here uh where' It Go why can't I see there it is so we can bring that out and we can uh hopefully play this and it should catch here no it's not quite doing what it should here not entirely sure why that's not I think it might be this works quite nicely uh I just can't figure out why that's not getting caught it should stop there and give you some information about what's going on in the file I'll have to look into that but um I do know that works I don't know what I've what I've borked up here in this demo but just be aware that that that's useful and it'll what it'll do is it give you variables and you can trace them let's see if I can get it going on my end here let's go into here get that out it might have been because highlighted I don't know uh so let's let's grab the debugger here H not quite sure why that's doing that I'll have to look into that but it certainly works I do know it works I just don't know why it's not working right now um might be something to do with the way I was using the console or something so that's kind of how you'll work with most of your projects and things like that um get to know the compiler and the command line it's going to make your life a lot easier the the Run doesn't always work for C++ um and that's why I made this separate video um but it's it's a really nice environment I think it's going to serve us well uh please let me know if you have any questions or or your instructor if it doesn't happen to be me uh for your particular section um and uh we can certainly get going oh the one other thing um I forgot kind of how you get signed up for this during the beginning of the course uh you'll you'll just submit um you'll get an invitation a course invitation Link in the in the week one um and it will generate an email or I'll just send out emails to your student addresses and that will sign you up for replit you'll be automatically in the in the section so look out for those right at the beginning of the section as well um so I think that's everything thanks