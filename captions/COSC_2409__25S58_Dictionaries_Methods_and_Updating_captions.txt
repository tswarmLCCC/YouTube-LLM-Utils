as we continue on studying some of the um basic building blocks of python um and we've moved on from sets and uh tbal to to dictionaries now um we're continuing on our exploration of dictionaries in this video uh to talk about how we access items and do a few other operations on dictionaries um we'll see how far we get um I suspect there will be another video at least after this um just a review uh we have key value pairs in dictionaries uh that are defined with curly brackets where we have a key uh in this case called name a value called Alice and then we separate those key value pairs with commas and we can access them uh access the values by using their um their uh their key to get at their value um and we can use this explicitly um the other thing we can do is uh we can use a get method to look up a um a uh a um excuse me a key that we may or may not know if it exists um to just to demonstrate this um this aspect of it let's go and run this so we see here we get name agent City using our our simple syntax of uh just you know the bracket um basically accessing the dictionary um and using its key to get the first two um and then we're trying to get the city here um which does exist in this case um and it will return it if it will but it won't be it'll say not specified if it does not exist so for example if I wanted to change this to salary um using the get method here we can see that um well let's this will say s but know that I'm trying to assign it salary and it's looking up and say hey there's no key called salary assigning it let's just go just go and change this but actually you know what let's let's modify this one more time uh to actually do both because that that's a better example sourly this is what I get when I write code and when I I'm lecturing uh and then let's go ahead and just kick on salary there and we'll see here that it can find city but it can't find salary there's nothing called salary in our dictionary so it gives it a notspecified value this is opposed to what would happen if we tried to access it directly and we would just get um a uh a key error this is what I was alluding to in the last video um trying to look up something that doesn't exist will give you an error but you can um say try to get it and give me a not specified uh value or anything else you wanted to do you know no City found would work or no salary found would work uh things like that and in this way you can basically map uh dictionaries onto new dictionaries or data sets or things like that um and and Supply a default value very useful design pattern if you're building data sets and manipulating data with python um which is exactly what the demo I gave of course is what we saw here where it will give us an unknown country because again that's not up here I love when I write rewrite code that I forgot that I wrote a day or two ago um so uh much like I was talking about at the end of the first video um we can add things to so notice that we do not have a country in here right now there's no country in here but we can add it is simply as accessing a the key that we want to add it to and giving it a value super simple and lovely methodology uh very clean very uh nice to use as a programmer um in other programming languages this is very hard to do um I I already talked about that in the last video but this do not underestimate the power of this excuse me I don't care to have co-pilot up right now um the point being though is you can add these things and then of course if we change it to you know I don't know let's save Mexico um it will not insert a new key it will just update the one we have right so the contrast there is of course we wanted to do County we could say uh you know let's say laramy County here cheyen this would give us a new key because we're just adding it on um and then let's just go change that to I don't know Albany County that's how we can basically use these things to add or update um uh Records um and then of course we can remove them with the delete uh the uh Delete um uh item that we talked about before so here we've got our our our our um very simple um dictionary um and then we can uh clear it which I'm not going to do well actually I will we can remove everything from that or we can just delete simple items uh from them using the delete um uh uh command which we talked about in the last video um I'm sorry I misread what we we're going into here um clear here um is what was being set up basically here we'd have a dictionary and if we clear it it removes everything that's what clear does as opposed to delete de deel will take a key and remove one item we saw that earlier in the video that's why I keep saying I'm not going to do it again because we saw it right where did we see it let me find the thing right here this is how we would do that so let's um we could we could even do that um down here if we wanted to to get rid of the city um and it would remove that item so there we have uh basically um if if if you're familiar with databases we have create read update and delete those are the the crud operations crud um those are operations that you often need to do records Management Systems um create read update or delete those are how you manage data um input and output and um basically creation of our list updating modifying um items like we just saw and then deleting single items or deleting the entire record um those are how we can do do these these things in Python directly and natively which is just awesome um so let's go down past here yep um so there's other ways to delete these things um that uh are more akin to um uh what we were doing with some of the um the uh removal methods in lists um the first one is pop which you should recall from lists will basically remove a key value pair and return it so this will delete the key value pair just like delete does but instead of just getting rid of it it it um actually gives it back to you so you can add things and and remove them um in stacks and cues like we talked about a little bit ago as well um in the same way with uh with dictionaries so here we have an occupation being created as the very last key value pair in simple dictionary and let's go and print that just to demonstrate it uh then we're going to remove a value and then we're going to print the remove value and finally display the the dictionary again so let's go a and do that so here we have um our occupation with engineer right here at the end right and then we run the the pop operation which deletes it from here so it's gone from here but it actually returns this function returns it um and we could do something with it immediately if we need it to um this is this is called a stack right where the the the thing that gets removed we can use um immediately if we need to do some processing on that for some reason um and then of course we see in the updated um updated the simple dictionary after the pop operation um it is now not there we can of course access this by its key um just you know without deleting it like we saw earlier so pop is only used for deleting the things um we can do a similar operation with pop item uh so pop item will give us the key and the value um so we'll let's go ahead and print the last item here because it gets lost in here so let me reinitialize this so here uh we have a uh um the uh the last item which would be occupation and engineer um and we run that and then we'll see that the last uh full we get the key and the value when we use pop ID um pop item pop and pop item both by the way turn return the last thing from the end of the dictionary um there's ways to get at the other ones of course items and values uh items values and uh Keys you can get at them U directly but uh pop and pop item will return the last one delete it and return that as an item to you so items are key in value pairs by the way if I didn't Define that earlier um where you can get it both of them at once or or keys or values separately directly um you can also get keys or values from items uh let's see what else is trying to oh this is what I was trying to demo earlier so if you just want to re remove um a uh a key value from and we saw this earlier but I'll I'll reiterate it here um so if we want to get rid of City from our dictionary of course we can use just use the simple delete operator on that and it will delete in this case the country which is the USA uh so we'll see it uh we see it um let's just do this real quick so so we see that it of course we have a country here it's not the last item we run the delete command on that key um and it is no longer in there um when we look at the updated updated dictionary let's see how we do it on time U you know it's a good stopping point before I get into looping and the set logic and things like that uh so we'll come right back after this