hello in this video we're going to go over using a tool called repet um to uh do your coding work in this course and uh it'll be the primary mechanism um how on how you'll turn in assignments and collaborate with me when you need help um it it's a really cool tool so I'm going to go over some of the features um there's also a canvas page here that I will update as I kind of discover uh things that students struggle with and things like that at the beginning of the course um I'll send out um repet invitations um to create repet accounts using your LC uh email addresses and those will basically take you to the site have you register um you know using that that ID and it will also add you to what's called a team in in the LC institutional repet um all that means really though is that you're in the class and I'll show you what that looks like in just a bit um as as we get going um but uh look uh at the beginning of the uh of the semester for an email from probably repet I think I haven't sent them out yet so I don't know exactly what the the um you know subject and fr from line look like yet but you you'll look for that um get registered and then you'll just be in the class if you run into problems with that please get a hold of your instructor which right now will be me um but if not uh you know who whoever your instructor is to help with that if they're using repet um once you're logged in um I'm going to swap this page over with my notes here let's see to do that yeah there we go and I'm going to want this just to speak who to speak to so um when you go into repet you're going to see something like this uh where you'll have essentially the name of the course um and um a bunch of assignments um this is your primary navigation if for some reason you're not here and it looks something like this or something like this um know that you can and maybe you don't even see these you can click the hamburger thing over here in the left to bring up this menu and go to teams and the one you'll be looking for is in the section this is particularly important um if you happen to be in more than one computer science class at the same time you'll have multiple ones of these if they're both using repet um so you'll click on this and you can even see who's in it here and you've got a few uh don't do that don't leave the team oh there's a leave the team behind my my head here don't do that but uh you can go in here and get back to this so let's see um uh so um one thing that I'd like to kind of talk about is how you or to start out here is how you might also get into this directly without going to repet um is they might come from your assignments so if you're um in a canvas shell um oops let's go and do come on sorry oh let's just do it this way okay if you're in a canvas shell and you're in your in assignments let's say oops let's say we are working on which one did I want to use for this um I made one just for this guy uh trying there it is um so let's let's pretend this is just like your week two assignment I'll set these up where you'll have basically a link here that you can just click on or you can uh it it should log you in looking like this now this is not um what you this is as me so it'll look a little different there'll be a few more things here but you can just click view rep here and it'll actually just pop over in here this is going into my instructor via though so I I don't want to focus on this um but I might come back to this to to highlight a few things down here but the the the upshot of it is is look for the link here or the link here that should go directly from your assignment or from canvas to your assignment and then I also will also copy any instructions that we need here in canvas but they'll be available in the repet as well so once you've done that um I'm going to go over to a different browser that mimics a uh a uh student view here and let's just pretend that we um we we we came in from from the the assignment here what you might see is something like this um or an instruction page that looks like this and I'm going to try my best to um kind of copy the instructions in is in many places um the uh instructions are kind of a static copy and what I'll usually do is in the main Python program uh you'll get um essentially a copy of them as well um and some test cases and things like that um but as a student you can completely delete this right I mean and you you'll even be asked to to document your code and things like that so if you tend to lose them you can either go back to the assignment or you can go to instructions to kind of kind of get um an idea of uh of the overall assignments you can also um um move the instructions over like here um and and do some things with tabs uh and there's a few other things like that um so let's pretend you lost your instructions um one thing to kind of get used to are is this toolkit down here you can just click it and back it comes and you can think of this as a bunch of different tools uh that you can use uh to bring up different different aspects of the uh of the assignment um so one reason um oh let's go ahead and just do a little navigation of this so in in any rep you're going to have a console and again if you lose it you can just go down here to console um write here and click it and it'll come back right um the the console is um basically the output the printable output of your of your of your pro uh program so let's pretend we just did had done a little bit of work here and we just print hello right uh very simple command we can hit run up here and we'll see that it starts to Output things similarly we can use what's called a shell which uh as we move on we'll we'll use that more and more and the uh the uh console less and less so I'm going to grab a shell here and this is um an environment that's uh it's basically mimicking an environment from an operating system called Linux and we can use it to navigate um navigate around the environment but we can also run our um um our our programs by just typing the word Python and then the name of the of the uh of the program and um you'll notice that main is um it's kind of the starting point for most programs sometimes we'll have other files to support the thing but um you can you'll usually want to run this and maybe this with some arguments but that's beyond the scope this video so that's kind of what comes with it out of the box um but we also have some other really neat um some really neat uh features that we can uh that can be used in here so I'm going to bring up a different a different um um Ju Just A A repet with a little bit more code um and um and kind of show you some of the features and why we really like this so one thing you can do is let's pretend you're typing I don't don't worry about the coding here um what it what this does is essentially simulate um you know shooting a TWP pointer or a three-pointer over time with some probabilities that that's the idea of this code but let's pretend you get stuck and you know maybe uh make a typo here and you know it looks like something like that right um and you just can't figure out what's going on the first thing you can do is you can highlight this like this and you can get some help um so there's modify and then there's explain it's basically saying uh it looks like there's in tyo this is a feature of what are called integrated development environments IDE and um this one happens to be in a browser so we don't have to install one um but there's plenty of them out there you might hear of like idle in Python idle is one that comes with python uh Spider uh pie charm is another one and a Honda is a platform I like and might use in AI um Visual Studio or Visual Studio code are very common and that's what we used to use in this course but by using um repet here we can get around uh installing things on many different kinds of computers and simplify the setup and flow and I can keep our assignments very Compact and not worry about the environment and focus on the coding this along with our textbook environment uh should make things quite streamlined for you um so you can get some help by um you know highlighting and uh you can use the debugger things like that um you can get a lot of contextual help the other thing though and probably the main thing I like about this is if I highlight this and I'm just stuck um I can click this and the main one I really want to show you is start thread or chat um I don't know where oh chat's a project wived one I'll come to that but if I start thread here you can say hello Mr swarm I'm quite stuck and I don't even care if you make typos in there um I'm quite stuck and then you just hit submit and it's going to pop up this and that's going to send me a notification um and uh I I can even show you how that looks in a bit but that's going to pop up um some help and then if I see that let me see if I can find the one yeah it this should do it I'm going to go over here and show it what it look like for you so I get a notification here um like this right here that says you left me a message and I can go to that um and it's it basically highlights right where you're at and things like that it doesn't look like this for you it looks like that for me but when I go in here I can click on it and say oh I see you've made a typo and I can click that and immediately when I click it you'll see here that I've um I I I've kind of uh identified it so even if I'm not online if you're working at this like 2 in the morning this is a great way to get feedback um uh and uh you know don't worry about overc commenting if you happen to say let's pretend I didn't you know I didn't say that you can say oh I fixed it never mind you can do that too and that's fine with me just uh you know what whatever your thought process is um you know I'm happy to go through all of them and I'll kind of look at the end see how you did so let's pretend you you did fix it and uh you can resolve it and it'll just go away on mind as well and uh let's just copy the word percentage here so we don't have to worry about mping tying and away we go and again our program runs it's great right um so that's one way to get help another is to use the chat feature down here and this is in the toolbox again um sorry let me bring this up make sure yep that's working great um there's a chat guy here and again that just pops up a new window over here for us and you can do the same thing please help me and if I'm in office hours and you're not here um this is a great way to communicate with me um and I'll I'll you know certainly uh you know kind of answer these in the order they come in um and I'll certainly the other ideas that I can look at them in the morning worst case so this is a nice way to maybe avoid a lot of uh hey this is what I'm doing this is in this file on this line number here's the context please provide as much context and thought process as you you can um that'll help me and it'll help your learning as well um to to uh to help navigate um your your time here uh in this course so let me go back and get to my notes again one sec make sure that covering everything um there's a few more features down there um this it saves automatically um um in uh every time type it actually does and as a matter of fact you can even go back and kind of review everything you've done with this history thing down here it's down here at the bottom um and view the latest so if you mess something up you can go back and say oh okay I want this this version of it for some reason right you can do that um and there's a lot of features there as well that are kind of beyond the scope of this but um just a note though um and one thing I'd like to make you aware of that sometimes I'll use this to to to help understand you know kind of your thought process and um you know where you've come from if for example you're modifying you know code from an example or something you found online um you know I'll look to see you know how you've edited and things like that when it comes to grading um so just be aware of that that bit um uh let's see what else we have here besides history that I'd like to cover um oh let's see we got oh the debugger come to that we got chat oh there's a documentation uh uh a doc so the a lot of the Python documentation you can bring up here and say you wanted to know more about the print F function um or print function you can just bring that up and you'll get an example right here uh this happens to be in maybe maybe we do python in print that might be a little bit better there we go uh that happened to be basic so maybe a little contextual things so you know if I wanted to bring this in a function or just a print function I could use the online documentation um and just you know pretty much just go in with it um as I'm editing it oh I'm in the history by the way if you're in the history uh you'll want to cancel out or something to that end before you start editing again just a just a heads up there uh documentation threads so again threads um are are you know they're contextual so you click and you go and um you can create threads here but if you want to keep an eye on all of the threads you may have sent me you can click the threads tool down here bring it up and you can see um what all of them you can go back and say oh we talked about this thing that got resolved so just because um it's resolved doesn't mean it goes away you're going to have the the ones that are active in your inbox unread participating in so all of those will be context you know kind of relevant for you and then result and I'll use obviously the ones uh that are unread quite often on my end um the last thing oh two two things um so the one really cool uh um um benefit of using an IDE in a grad development environment is what's called a debugger um and there's one here you just again click it and it's going to ask you to create what's called a break point I I had one in here already um so it'll look like this and what what it'll do is it'll say Click by adding this breakpoint on a line number so say we have a problem with our for Loop here and I know know this is a little early for talking about what this is but you can set a a breakpoint here and you can hit run and it's basically going to run the program until it gets there and it's going to kind of kick out some information like what these VAR variables hold um and so you can start to examine what might be going on with your program um um if you're getting an error that doesn't make sense or not quite understand what's going on you can kind of see how things um you know play out there um we've got some tools here the next step will just literally go to the next line and you can kind of see how things keep going here um what's going on what's being examined what's being executed and if something's blowing up you can use this to kind of get an idea of what's going on there so let's say you know maybe we have a problem here for like for an example and we get past it you can just do uh next break point right that'll just skip forward to the next break point because this is a loop and it's coming back to this spot many many times um we can use this to just skip to the next iteration of the loop and you can even see the variables that we have here these guys you can see their values as they're changing because of the logic in the in the um in the uh in the program so here we shot a three-pointer and here we shot another three-pointer but we can see that these things are being incremented as we go which is kind of neat um here we shot a two-pointer um or I'm sorry uh we didn't we shot a there there's a two-pointer um so that's a nice way to use that U more on that later just wanted to make you aware of that and then the last thing I'd like to show show I don't think I have an example of it here so I'm going to stop the debugger and get rid of my bright point you don't need to but you can I'm going to go back out to here that's fine for this for our demo here um I think this one has what are called Unit tests so often uh what I will do is um create tests for you to kind of know if the program is working right um and you can bring those up just like this and we can see that this program sh uh should be able to take um an input of one and then four and then output uh I'm sorry the input should take one and four and the output should be uh one and4 um because this is um essentially doing some calculations right now this program only says solo so if I run the test here um it fails it fails but if I go to the solution of this thing um and I've got a fully working program let me just jump over to this guy again for you in my instructor copy and show you how that might look once you're um you know a little more successful let's just go to this one and I oops I want to actually edit this solution is what I want sorry um I can do this and I can go to the uh solution and this is just like your editor there's nothing magical about this being a uh a uh solution it's just a just the same file um I can um I I've got a working program here and I can um add the tests to it and I can run them and it passes and I can see why that passes um so on and so forth so that's kind of the overviews of that and how we use those lastly I haven't set it up yet I'm going back to our assignment though um basically when you're ready to turn these things in there will be a link in the assignment and I really wish I would have done this for this video I apologize but you'll go into the the uh the assignment itself and it when it's time to turn it in you can uh uh this is my instructor view oh let's see how you do this ah sorry um the idea though is that you'll just go in here and write done in a text box is kind of the idea of what we'll do here to turn that in so I'll go to your repet to grade this thing and uh and view any feedback and things like that um and the link will be right there for me so I'll go I'll do my grading and rep you don't need to submit anything this should uh simplify that work too um if you are ready to submit that button here and uh you can view the test it says oh you didn't pass so it does kind of give you that and if I submit anyway um that doesn't mean you're done right say um you know I might come back with some feedback hey this doesn't do anything um so you might you know you know write a a cool program that does does you know do something better right not really we'd write python code obviously and you can resubmit you can resubmit as many times as you want um and submitting itself just saves it for you and it gives me a notification that you know maybe a TR but but the grading you'll need to go into canvas and say ready for grading or whatever we decided to put there that'll be in the instructions for the assignment when I build this so that's kind of an introduction to repet um I think it's going to be a really nice tool for us and uh hopefully you'll you'll find it to be the same go in and play a little bit with some of the uh the assignments even you can't mess them up um you know you might just end up deleting code or deleting whatever you're doing uh feel free to work on there uh with some some of the um exercises uh or Labs we'll build uh for maybe the early weeks um and uh um we'll do those probably probably in in repet but maybe in um zybooks zybooks is the uh Interactive Learning environment we're going to use for the course at least uh COC 1010 uh where you kind of go through and and you can do some of this stuff there too um but we'll we will do most of our assignment work here so that's kind of it about repet um I hope you find this useful but if you have any questions or difficulty please let me know thanks