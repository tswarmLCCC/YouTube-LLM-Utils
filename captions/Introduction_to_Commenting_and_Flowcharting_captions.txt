hello in this video we're going to continue our introductory videos with a little bit on something you're going to have to do in every assignment and is just general practice which is getting into the habit of documenting your code um we're going to cover several things um one is a required header block that you'll have in every every bit of code that you submit for grading um and then we'll cover um inline comments in code and give you some my ideas and resources for that uh we'll follow that up with a um a technique called flow charting which is kind of diagramming your code visually um and then um and with a just a little bit um on on a concept called pseudo code which might help you think through uh some problem solving uh or think through uh challenges and it's a problem solving technique so um if you're in canvas um let's uh let me pop away from here if you're in canvas um I do I did put together this this little bit it's a page it'll be linked like in in module two or three but you can also find it under pages over here if you need to and it's just different kinds of comments in either C++ or python um uh for example this is an example of a block code in Python and this is one in C++ and an example to kind of how to do that um and uh some inline codes and a little bit about about flowcharting not this is not meant to be coper of just to give you some ideas and just a little bit at the end about pseudo code I'll probably also just link this video in there when I'm done recording it um it seems like a good place for that as well um but uh um so one thing that um I'm going to require of any any um any assignment and including your final and midterms if we have them in your course are to do what's called a block comment at the beginning and uh the idea is to fill out you you know the file name uh name Etc I'll go over all this in just a sec um in each of your shells you'll have this this blog this this starter um um this starter comment template. text you don't need to use all of it but it's a good idea to to consider each of it if it's appropriate for your for your file some things for example won't have like test data or key calculations but some of them might if you're doing some you know um you know um just really heavy math it's a good place to document your um it's a good place to document your your your calculations and in any assumptions that your your your program will make um so you can use this as kind of a starter block for that and the way you would do that is if you went into a um an assignment and you were you know starting out maybe you know starter you know there was some starter instructions up here um what you'd want to do is just paste that in and then fill it in appropriately so I went ahead and kind of did that as an example for this kind of program where the this is a very simple Loop that is just designed to uh write a program to display the numbers from 1 to five um and we see that we have a very simple increment variable here and a Terminator variable here where it's basically just um incrementing um I equal I + 1 each time it goes through the loop until it gets equal to until I gets equal to n this is you know probably the most basic Loop we can write with a while loop um we could do it a little simpler with a for Loop so the idea here then is we kind of document that in a different way where we first demo the file name and this is actually the name of the repet account or repet um repository but you could just give it some project name if you wanted to if you because you'll very often just be using main.py so the uh the the the you can just um you know either put the rep name or you know just give it an um like an assignment name there just to kind of differentiate between your code if they ever get moved around uh just my name um and then a very simple requirement stock this can actually be though um a copy of your assignment um you know uh your assignment uh requirements that I usually will give you um and you can do that by just making multiple lines here um like so and just copy and pasting it there so you always have available um one thing about uh this kind of syntax I guess I I skipped over with um with and I I did reference it in here is this is called a block comment or multi-line line comment when you use three uh quotation marks in here it's basically going to take all of this as just text it's not going to try to execute that or anything like that if you're unfamiliar with that you can write whatever you want in here and it's a great way to make notes to yourself um so in Python you do that with uh three e either single or uh double quotes the only Pro the only thing is they have to be the same so for example if this were double quotes let me kind of break this for a sec um you'll see that it starts throwing a bunch of Errors um because it's these are single quotes up here and double quotes so whatever you do just make sure they match if I change that back um it's trying to do a little auto complete you'll see that it's okay uh moving on um if your program takes some input um like for example if we you know did something like um oops but you have to write the code somewhere where it's actually useful if we wanted to for example start anywhere we could do something like this and uh and then the input VAR input would be input starter you know where um we could do something like that right where we we we document anything that the user inputs or a file inputs or a database inputs we could document that there um I went ahead and wrote some calculations uh in here um that I incremented each time it's it goes through the loop but that's also kind of um you know captured in this key design considerations you can do it in either place I you know ju just that it's documented I'm really looking what I'm looking for here is understanding of what you're trying to do how you're breaking down the problem and this gives you a nice nice format to do that in um so that's that's kind of what we expect out of block comments in a nutshell there inline comments we've already got a few here um are just these these with the pound sign here where it's describing what you're doing right right in line with what you're doing it so this is a little more formal of the overall purpose and this is what's happening right around uh where where you're operating you can also use block comments for this by the way so for example if I wanted to use block comments here I could easily just do this and it actually um in repet it creates it for you and then if I just copy and paste this in into there I this is this is just fine too and um if I do that um I could you know do something like this or I could write what what we'll get to in a bit with pseudo code um as well into there so that's kind of inline comments things like that um you know so we might even like say now this might look a little funny uh because what happened here is it wrapped around so this is actually still one line if I if I actually scroll this over you can see it do that um but if I'd actually typed hit enter in here I would either have to do another comment like this or use the block comment like what we did before so that's something else to keep in mind so that's kind of it uh for comments um there's another thing I'd like to introduce though if I'm going to go ahead and delete this um but this is uh a drawing tool that's in repc so you won't necessarily have these files when you first start so I'm actually going to delete this just to demonstrate how to do it and if I wanted to make a flowchart I could rightclick or click uh plus up here and it's going to ask ask you to um to to to create a file um and you can call it whatever you want let's call it flowchart do draw now the the the key here is that you have to call it draw. DW the these um this extension needs to be in there for this to work and if you do that then we can um uh go into what's called flowcharting um and I'm not going to really get into too much flowcharting with uh with this discussion this is mainly how to do it in repet um and and that you should do it especially if you're stuck um there is a couple a couple uh bits about it down here um where I've got some you know just a simple example of one as a matter of fact this is kind of what we'll be doing um and uh and then I also include this file if it comes up it might yeah the just one we grabbed from online years ago um that's available to you it's it should be in the same module as that comment template um but you can look up these shapes as well anywhere um to kind of get um you know what to use for a process the main two two you really need to know um just so you know our uh process so this would be basically any any line of code you want to do here is kind of this um and then decisions basically everything else you can kind of work around with just these two start and end are nice because it kind of shows you know your end points and where you're starting but you it's literally just at the beginning and end and then um you can do some other things like if you build functions you can start using these things or if you're importing documents you can do these things these are things that people in business might understand a little bit better um but really for your your the purposes of Designing a flowchart you really need to just know boxes are for processes essentially your lines of code and decisions are your ifs and things like that so let's go and do one um we happen to have a rectangle tool here and you can see you just get all kinds of of crazy things you can hear but we can go ahead and say uh let's just make um I equal 1 uh and it's a little funky because I've got a just a weird and let's call n equals five right um so that that's you know pretty simple and you can even resize these if you want uh to make it pretty um and then let's go ahead and grab our decision variable um our diamond and you can just draw it out like this and what we're going to do is we're going to write our test in here so we go I is less than or equal to 5 sorry two equals there we go um and a little space to make it a little more legible um and then we get an arrow so basically the idea is that you just connect these like so and if you don't like where that is you can wiggle it around and I'm not entirely sure how it works but you can they should stay connected most of the time but sometimes like this one oh this time it did um it got back behind there and you just need to play with it but I again just if this arrow is not attached I'm not going to do you any point that probably won't anyway um so the idea though with a flowchart is that if I is less than five we want to exit and exit is usually to the right so what you can do is like this and I think you could just double click on it type on it if not you can easily grab this and just say true and then we do the same thing with false like so and we just do grab our text thing here and um so if I I is less than five we basically want to increment so we add another uh another one of these and we go I oops I I plus one and then we loop back so we can do our Loop like this and then like this there's probably a smarter way to do it but and then you'll go back here and retest it so th this is kind of what a very simple Loop looks like um uh and um either way uh and we'll want the print statement in there as well so I'd probably want to do something like this and I know there is actually a uh um a control for put in there can't um it's it's like a uh it's like a kind of a squiggly box um so let's do something like that and then like this and then we can kind of finagle these around a little bit just to get them to look a little prettier and the idea then behind a flowchart and then then down here we're just done so we'll just use the the oval because that that's the Terminator di right um so the idea is we can kind of say okay we start with i and we can see like it makes us think okay what's I here well it's one right and we we we see does it pass this test it does so we're g we can you know say one is less than five we go print it we increment it now it's two and we go back and we know now the I is two you could even write these out right so this is a really nice way especially if you get into more complex structures to kind of diagram um out your problem and kind of get an idea of of what uh might be the issue for example if we didn't if we were only getting four um you know if we did something like this pretty common mistake we could see that I would get to five here because um we' get let's pretend I was I was four and it would go through um I'm sorry it' be four here because it would never go back up here um I would be four and that would pass here and then we'd go through we'd print it we'd increment it we'd come back and then I would be five but Le this is less than not less than or equal to right so then it would go out so that's a nice way to say oh I need an equal sign there right um nice way to kind of figure that out you can kind of uh see it U especially if you're not completely familiar you know with looking at code and doing that in your head which will get easier as you go but really nice tool there and you can just save this any time you can even export it if you're writing a paper but um if you wanted to you could just refer that to refer that to me um when you turn it in for your your assignment as well and we might do a few where um especially when we introduce if statements and loops and a few other things um but I'm not going to make you flowchart everything um it gets a little silly after a while uh but a really good um example on especially some of our early examples I might have you do this in the assignment and I'll let you know when we do that so this is a great way to do that you can also do it in paint or whatever any other program and submit it as a file to me if you want but this is a really nice way to do it within repet um the last thing I wanted to kind of cover um were was uh pseudo code so much like what we're doing with our new flowchart here where we're kind of talking through this thing and and and seeing it you can do that without drawing uh by kind of writing you know really fake code where it's you know this isn't really um you know any kind of code in Java it's kind of funny um it it it tried to do this in Python and Java when I wrote The Prompt for this um it doesn't really matter though uh where you use pseudo code and you can kind of see what it's doing here it's very simple this is not a loop but you could do you know while you know uh sum equals or is equal or less than you know uh n or or I is equal or less than and uh loop and you and sometimes you'll indent and things like that uh to do that if if you're interested in that just look up pseudo code examples or come visit with me happy to show you there's actually a cool little shorthand way I learned when I was um a seconde student um that uh you could use like squiggly bra braces and things like that and graph paper it's it's pretty cool but um I I really don't want to introduce more than than is necessary here so um and you know um again that's something you could do right in replate you could just make a a file and just call you know uh pseudo psudo code. text right you could just do that and that's just a text file you know nothing special here um you know and you could just write whatever you want there and refer to that as well the the other nice thing about um uh about uh the flow chart is it kind of kind of fits in with your debugger if you recall uh when we went over the debugger in the other video about your tools so if I like set a breakpoint here we can kind of see let's go and fire this sucker off should trip up right there so this thing is just being funky let's stop and let's try again I don't know what's going on with the deug I'm going have to figure that out guys uh let's try one there the debugger seems to be a little there it goes um you can see here did it work I don't know um I'll have figure out what's going on but you can see the the uh the variable increment here as we go I think it has to something to do with recording it doesn't seem to want to work right when I'm recording for some reason um but it it it's quite I'm going to try it over here see if that is indeed what it is huh yeah that's it that's interesting so for some reason when I'm not rec when when the video is recording the debugger doesn't want to work but you can see I increment is the idea and you can go to your next breakpoint over and over again and that that that'll go right along with your flowchart which is really cool the other thing you can do if you if you recall is you can put these in other windows so if you want your flowchart over there and your code over here you can kind of say okay is my code doing what I think it is right um you know so I'm going to you know compare I to n um or actually that's what I'd want to do here I see I even made a mistake in my flowchart that I just caught um so compare I to n and do you know greater than or equal to um uh side by side and kind of see how that's going now obviously your drawing doesn't interface with this that'd be really cool but it doesn't do that so that's kind of your uh the the main tool tools that you have available for commenting the main one I really wanted to make you familiar with because I'll require it on most assignments is this level of documentation describing what your program is doing it really shows me that you kind of understand the process the looping if there's looping involved um you know abstraction any data abstraction assumptions we'd want to make up here uh things like that so if you have any questions about that please let me know though okay um I think that's all I have on this one uh so um uh we'll get on to the next video I guess