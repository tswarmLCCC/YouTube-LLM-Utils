I I need to make an addendum video uh to this unit um in an upcoming video you'll see me use this syntax where essentially what what the purpose of this is is to use this lib directory this Library directory to separate our files our library files from our source files um but that's assuming that you want to work in a source directory in a subdirectory for your your source files themselves like I've done in most of the videos in this unit um but it's not necessary and frankly this is um not common Syntax for a lot of python programmers um I use it uh because I really like clean directory structures where I put my source files my my application files in the source directory um by default and as such you need to basically come back out use this uh back this Parent Directory syntax that's what this does and then go into the lib folder so essentially what this is saying is when I'm in The Source directory we're going to go back out and then go into the lib folder to look for uh Fibonacci py you'll see me uh give several examples of this in upcoming videos but if you're not if you don't want to work in a you know basically sister folders or cousin folders like this where source and lib are in the are at the same level if you only want to go down into lib you can use a much simpler syntax you don't need to use this syntax at all if you you do that um you can directly access subfolders in Python by using this dot syntax so let me I'll just rewrite this from scratch um so if I'm writing from I can do lib here so again this is meant to be run from the the the root directory here I can do lib Dot and you can even see that um it's starting python even is picking this up where it's finding that because this dot syntax basically says look in the subfolder so this is this is the subfolder and then it's finding the module here and then of course I can import the two uh Fibonacci methods within there and of course run them um this works just fine and it's very common so if if you basically wanted to delete this Source uh folder Al together and work with your your programs that kick off your modules or use your modules you can do it in this way um I Pro I kind of went from previous work that I've done when I designed this unit and uh it dawned on me that um I've kind of jumped ahead of where we should probably start at and this is probably the way you should start where your main programs the programs you want to run are in your root folder um and then your library uh files are in a lib folder like so um and this is a much simpler syntax than this is but um you'll see as we Pro progress into the third and fourth videos here that I'm going to interject this in the middle that um that uh this is not a a a bad way either but it's a little more complicated and certainly overkill for a lot of uh a lot of uh intermediate programmers which is of course what many of you are at this point of of of your career so um sorry about the confusion there in the extra video and being out of sequence um I will certainly present these in the right sequence but you're going to see me reference to reference this um source and lib folder and and introduce that trick very early on in in when we start talking about multiple files and separating these things uh where you can certainly use this um this syntax where you just do li. Fibonacci uh where you're basically going into a directory from here and or whatever you wanted to call it so again this is the folder name lib here and Fibonacci of course is the file name within there that I'm um accessing the methods from so that's how to read that uh hopefully that makes sense let me know if you have any questions thank you