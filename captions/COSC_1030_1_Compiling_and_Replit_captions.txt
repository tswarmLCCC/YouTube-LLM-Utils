okay uh one last thing I'd like to cover early on here is this idea of um how do we do things with our program um and I this slide's kind of overloaded a little bit sorry I jammed a couple things in there um but the idea of of compiling uh is covered in your book um so hopefully you've covered that but the idea is that we're taking um we're taking this machine code that we do um for example uh my file. CPP here and we're turning it into a a program that computers can actually run so we can't just write like see out and all that and expect the computer to just do that natively it doesn't know how to do that it it only operates on ones and zeros like we talked about so how do we get it to execute or build something that we can actually use on a computer well the answer is we compile it and compiling basically says take these highle instructions that we've given this program and turn it into ones and zeros and these ones and zeros represent everything we've done including the data and The Operators and the functions and all of the instructions that we've given it um it it takes that that that program and turns it into an executable program for lack of a better term um and that's done with uh a compiler so in our case we're going to be using a program called repet um but you can do this with Visual Studio code and things like that I uh provide an optional uh way to do that I I write a lot of the code in Visual Studio code here at the college before I before I move it over to repet um but uh repet sets a lot of this up but no behind the scenes and we'll demo this in just a sec that there's a compiler happening so what happens there is uh we can we have a a make uh or a run a run program uh button there I'll show you what it looks like real quick I think I've got it up here give me one sec uh where's repet it's just uploading this we can just run this um so this is a program just like what we talked about before and when I hit this run button it's going to basically say compile this and you're going to see this a. out let me go delete that so you can see it get recreated here uh that's what it looks like that's what the machine code looks like behind the scenes uh not very useful by for us by but the computer can run that but I'm going to delete that right quick uh yep that's the one I want to delete and when I run this you'll see it get rebuilt that's comp comp iling it that's compiling the program and in this case it actually runs so let me go and hit that and we'll see Hello World come up over here so it does what we wanted it to so again we're taking the input output stream and writing this program and we're getting an output right over here um but it turns out that the the this program called repet is doing something for us uh in this case it's called making it I'm going to move my head here back down to here um it it's doing something for us where it it compiles that force and runs it um and turns out sometimes we don't want to do that um if you write more than one program in in a repet uh project area for example if I have this hello world other program um and CPP just stands for C++ uh by the way it you don't have to use that extension but it's very common to um it lets people know that this is a C++ program and often your operating system will pick that up and say hey this is a C++ program I want he wants to do something with that so um but let me paste in a new program here so we've got this new program and uh let me grab one that I just had taken out of here and it's very similar to what we just saw it looks like this um the idea here though is that we've got two main programs so every program needs to have a main main function that's a requirement if I don't have that it's going to show an error and I'll show show you some errors in just a sec second um and this one uh does this is what we showed showed just a little bit ago right um but now we've got two of these things in the same project and repet doesn't like that when I run this is the same one we just ran um where I read this and it's going to try to do this so this worked just a little bit ago remember that so when I run this now it kind of freaks out it says you know there's too many things called Main in this in this first def find multiple definitions of main well the reason is is this has a main and this has a main and this project it only wants one main total so if you're only working with one program in your repet or in your project space hitting run is okay here but um I want to I want to teach you to how to use the compiler here as well because we'll need it we'll need it a lot in this class um and and and even more in the next class so we can uh instead of hitting run all the time um now again if you've only got one main program in your thing uh it's just fine to do that to just use run I I have no problem with that um but the the thing that I really want to show you though is that you don't need to so if you don't have this shell here or the console you've got these tools in repet uh over here and there's a whole video on using repet setting this all up all of that uh in the getting started stuff so if this is all looking forward to you if you've kind of jumped ahead go back to the getting started stuff you'll find how to get to what I'm looking at here from there but I'll go over some of that as well here at the end um but if you don't have the shell go grab the shell down here and you're going to D just drag that wherever you want you can put it here you can put it down here you can just do about anything you want with it like I could even put it down here so we can still see the console and the other thing you can do is you can clear a lot of these so if I if I don't want to keep this anymore you don't hit X because that'll get rid of it and I have to bring it back right so now now I need to get my console and bring it back um but instead I can hit this little trash can and that clears it up so it brings it back um but anyway the command I want to show you and they're in the slide deck as well here is this g++ this is the the gnu C compiler that's what uh g++ is there's there's several of them you often you'll also see GCC sometimes uh but g++ does what I want to do here um and and so the commands here are basically say take hello world and compile it with g++ and what that does is it creates by default an a.out file this is an executable file now out thatout extension probably looks kind of crazy to a lot of folks uh especially if if you haven't used Linux before or a system that's not Windows or Macintosh um the uh those will be um you know usually like EXE files sometimes like that so if you're doing this on Windows you'll often see a.exe instead but that but that out is an executable file and we'll demonstrate that here right now um so if I if I go to my shell here and I type g++ and I can type in this case main.cpp so the g++ is the compiler and then I'm just basically telling it which file I want to to to to compile and if I just run that by itself um we're going to get this a.out file you might have see it pop up over there and then what I can do here is I can just run that um now I can't just go like a.out that's it doesn't quite know that but because it doesn't know what directory you're in but if you use this syntax this dot forward slash the dot says look in the current directory or the current space and then use the forward slash says uh now I'm going to give you a file name so get used to this um you'll see basically when you have the you'll this will give you the directory and then I can run this and I'll get Hello World um if I don't want to use a.out I can actually override that I can override the fact that a. out is the name of the program so I'm going to actually delete that again just like we did before and I'm going to uh instead oh by the way you can just hit up a down arrow to to cycle through your previous commands also very useful if you've done this already you don't have to typ type it again you can just hit up arrow and you'll go through your history to get that out but I can use this o the output directive so if I go g++ uh main I can go out and let's call this main. out now um and you'll see instead of a DOT out I get main dot out and then I can just call that as well um that that's how that that can work quite nicely um the nice thing about this technique is I can now run this hello world program as well so I can have multiple versions of my program or multiple programs in here because I can just do g++ here and I can do hello world like this like that and it will compile that and then I can just run that as well um different programs that both say hello world so that's a little bit about compiling um and the important parts about that um now a lot of folks uh a lot of computer science classes will have you write um write your programs in a a development environment like um C++ or I'm sorry with like uh like uh Visual Studio code things like that uh for example um like here's some code I was writing in Python and it kind of looks like this right and even uh last year uh we we used this for everything um but what we get with repet is a really cool set of features and I go over this in another video but uh where you don't have to submit your files to me anymore uh for for this you can just share them so um what you'll want to do is you'll uh um you you'll clone your program from an assignment I give you it'll say clone and then you're going to set up a repet yourself and it's an online environment that you can use anywhere from a browser but you don't have to worry about setting up your compiler and all of that if you don't want to and you can also use the school computers because this runs on a server somewhere else where you don't you can use this on a lot of different computers and as a matter of fact you can even share this with me um you can share it with me in a couple of ways um the main way I I want you to do this is to use this invite button up here and if you do this you could invite me like this and uh but that's not what I want what I'd like you to do is you click this and you copy join link and when you send this to me you'll send this to me in an email or in your assignment either way um you can send this to me uh so if it's if if you're done send it an assignment say I'm done that that that this is how you'll turn things in and then I can come look at your workspace and just run it there and it'll work great but uh the other thing is if you're struggling you don't have to be on campus or anything you don't have to be on a lab you don't have to send me any files as a matter of fact I don't want you to what I want is this link and what I'll do is I can come through here uh and use this link and I can actually look at your code I can comment on your code like I can rightclick on things and I can like start this thread and say hey this isn't working something like that and what you'll see here is when you come back into it let's go and collapse oops uh where did our program go was it in the main hello world oh what happened here oh yeah so if I Collapse this now you'll see just these guys that's not part of C++ or anything that's in repet um but you can actually go through and say and you can reply right here things like that or you can come through and just say hey show me all the threads for this it's going to load them up here and then if I click this um we can go back and forth here I can even change code for you if I wanted to I can demo it I can highlight and the other thing I can see uh which is very useful and you should be aware of that I can see is that I can see everything you do in the program so I can say oh here's where they went South um the but the main thing is uh let's go back to hello world here um is like if you came from blink and all of a sudden I saw five pages on step two it's a big copy paste job right don't don't use AI to that extent um uh so just be aware of that um so anyway uh you can actually go back if you mess things up so let's say uh I'm out of this and I've said okay I forgot a semicolon here and uh this was main two and I run this now and everything blows up actually it's not going yep so now it's going to blow up right so I can be like man it was just running I don't know what I was doing I can go to history here and I can say okay let's see what happened here uh oh I forgot I did that oh that semicolon made sense I can reset the editor to there and it's it says it's not destructive uh it's just that it will basically copy this version to the most recent version so and actually you can see me go back and forth here so I'll go to two and then back to what I had but it will basically make your your current version uh any version that you had along the way very cool stuff that we get for free with repet so that's one last thing I wanted to make you aware anyway when you're done with your program what you'll do is you'll click invite if you haven't already and you'll copy this link and you'll paste it I don't have an assignment open here but you'll paste it into the submission link it'll just be a text thing and I'll just grab that open it in a new window grade it comment it right there um and send it back to you or if you need help um I'll ask for your invite Link in uh in chat or whatever or in the lab if you're up here and we'll bring it up and we'll talk about it that way we don't have to like deal with files and all that I think it's going to be really cool I'm really excited about this program so um anyway that's the last of the introduction videos uh for C++ hopefully they were useful for you um and uh good luck uh get out there start writing some programs I can't wait to get going on this stuff uh next week in week twos and two twos and threes in week two and three we'll start talking about um expressions and Mathematics and then uh some conditional logic where we talk about if if statements and while statements and things like that and Boolean Expressions so that that's what you can start to read ahead if you're if you're of that ilk so anyway thanks for watching watching these early videos um and I I'm trying to keep them shorter and topical here um but each each one should be useful in their own right thank you