welcome to computer science 1010 at laramy County Community College um this video is is an introduction to the topics and kind of some of the uh the way the the topic is broken down into units and things like that um that we'll cover it during this uh online online class what's not covered in this particular video is um the we're not going to go over the format of the class the syllabus any of the grading or ALS so the um setup of the tools and things like that that we'll use in the class those will come in other videos um in in the early weeks probably week one here um right right probably within the same module um this class um is not just a class on programming but more of an intro introduction on computational thinking and problem solving we use programming in this class particularly in a programming language called python to help facilitate that work but um examples are given in other programming languages and we even dwell delve into um some some subjects that aren't aren't typically Compu uh covered by computer science class in a bit of a survey format towards the end um regardless of what you think about your abilities coming into the class um I I hope I hope that you'll understand that this class is for everybody it's not for people that have heavy math backgrounds or programming backgrounds before they come in um it's it's really a class about problem solving and maybe thinking about approaching problem solving in a in a systemic computational way um we uh like I said we'll kind of dwell into you know some computer science topics that help us to that end but it it's not it's not just for a computer science Majors um I I think that as we go you'll find that anybody can use code computer code to solve problems regardless of your field um we'll build all the background that you need um starting all the way down to what a computer is and even how it's how things are represented with electricity and and some of the hardware that we use in computers um with that in mind though I I do wantan to I do want to um probably set an expectation that that some of these Concepts um aren't going to be exactly easy the first time that you do them um working through some of the hard work uh is one of the most rewarding parts of this class um but you know with that in mind buil you know keep in mind that computer science and computers were built by humans um the things can look a little bit cryptic and we'll even get into a bit of a bit of code here in a second um but with time and practice it'll all make sense um these uh this is a you know in in the realm of all the sciences and math and all that computer science is a fairly new new topic um and as such it's it's kind of built with modern mindsets and modern mindsets you know in its design um allow yourself some time though be be um be okay with allowing yourself to fail but keep coming back um computer science and some of these Information Technology subjects can be a bit of like drinking from a fire hose when you first start um but it's worth it um and uh it it'll get easier and easier the more you do it um if you find yourself frustrated um during with some of these topics please take a step away you know kind of digest it give yourself time to absorb some of the thought process and and then come back in also come find me or whoever happens to be teaching your section of this class um that's what we're here for we're happy to to help help facilitate that learning um what matters ultimately though is where you end up ultimate with regard to where you are now um compared to yourself not compared to others so um don't don't expect you know if you've never done this to maybe go out and write the next big big video game or or solve some you know cool artificial intelligence problem um you know build yourself up and and these things will come that's a a very cool thing about computer science though is once you build it it these things are very stackable you've kind of build your skill set over time and you'll be able to solve more and more complex problems um as a matter of fact that's kind of one of the Core Concepts that we'll talk about here is is the idea of abstraction where we distill these ideas um down and and make them Compact and then we can kind of put that on the shelf and bring that tool back when we need it um let's see so what we'll cover in this class uh let's see I'm going to do the slide deck here oh yeah sorry forgot I was this was more about the the mistak making process this slide but this is actually what you may have know you may have heard of computer bugs um oops I just realized my little picture let's see if I can move this sucker is right over that let's put it over here for just a sec um this is the first uh computer bug ever and it was actually a bug that went got into a computer hardware vacuum tubes and it shorted out the circuit um but there's a lot of lot of lot of uh stops and starts with computer programming in general and this kind of thinking where you explore an idea or you implement it a little incorrect and the computer doesn't know what to do no that's okay um you're going to see cryptic messages and things like that but as we iterate on the thing you're going to understand what's coming back out of the computer it's going to speed up your thought process on oh I made that mistake with with the way I typed the code or hey this computer program never ends I need to think about this kind of logic all this is all this stuff is very normal um and even expert programmers make mistakes all the time I was writing in example program that you're going to see in about in a few minutes here I probably broke it three times when I wrote it please don't be intimidated by this um let's see so um what we're going to cover in the class um is mainly centered around this idea of computational thinking um you know Loosely defined it means programming problem solving in a methodical manner then we Implement those ideas in a way the computer can understand it and we'll discover um how that's done but also techniques on how to how to kind of process our our problem solving in that manner but then we'll also work on implementing it in a way the computer can understand um speaking of that let's jump into our first very first program let's move my my mug here back to the other side of the screen so you can kind of see this but this is what a this top part here um is kind of what a computer program might might look like um and its only job is to write out the message you see at the end there hello cc1010 um this is uh probably looks a little cryptic I even wrote it a little more cryptic than it probably needed to be intentionally um with the idea that we'll quickly demystify this idea and really understand exactly what everything is doing here so much so that instead of understanding that this just does that it produces that message at the bottom when understand how it does it and how we might use you know each part of this this program to do other things uh that that we'll that we want it to do and these become really um it becomes more of a toolkit than any than than uh than just something you uh have to fully understand um we will also use industry standard tools to do this um the the programming environment that you're looking at is a program that that's freely available called VSS code and as I mentioned earlier we'll uh have a module on how to download and install this get it all running uh we're going to use uh LC's one drive environment to help us organize our our projects and code and things like that and then lastly we're going to use a uh industry standard um uh management environment for lack of a better term called GitHub and what GitHub really does is it allows us to collaborate with others and and have um uh versions of our code that we can rely on and then experiment on and then come back if we mess up it it's um it's a nice way to build a portfolio during your time time here at LC and uh and um and it's uh also offers just a heck of a lot of upside um and it it's really used in industry so buil getting to know that is is something that uh we're hoping to emphasize um will demystify computer Hardware a little bit I think I have a slide on that here yeah we'll get into how um we use electricity to um store information and process information but we'll also use some abstract ideas to um make that more concrete for example memory here this is computer memory it's the way um um you know uh the the computer stores information temporarily to do processing on it but it's kind of analogous to a bunch of mailboxes each that have their own address and we'll expand on that idea as we go to um understand that sometimes these things uh have um advantages in how we store them or or or um you know what we do and don't store to make them either more efficient to use or have some benefits for the way they actually process things like that um but again don't don't uh don't get too intimidated by that that idea we'll have full full um full lessons on that down down the uh down the road here um let's see uh we'll talk about um how uh we take some computer commands and build what are called algorithms uh which are very clever ways um to solve problems efficiently and we'll learn um things like um how to measure how efficiently they run and how we might improve those things um and then really the last parts of computational thinking and probably the biggest two um are the idea of systemic breaking down of a problem and and modeling it and that's kind of you know our flowchart you know kind of kind of this kind of thinking here um I just realized that my mouse is not showing and I'm I'm pointing and waving at things that they are not showing but really breaking things down into processes like this but then also this idea of abstraction where we take something we're interest interested in and um and and refine it and and perfect it and make it what's known as modular to make it reusable so we build tools as we're going um and and simp and take a a we simplify a process we perfect it and we basically make um make um our tools such that we can reuse that concept over and over again and then we can build more complex more complex uh uh bit bits of logic from that same kind of concept and um that's frankly how you know we have beautiful graphics and Ai and video games and things like that they all come down to you know signals on on the circuit board it turns out and we're going to explore that thought process a little bit so how are we going to do that we're going to do that in really two kinds of units um the first part of the course are going to go through what um I'm kind of affectionally calling the tools right these are kind of intro in introductory Concepts in computer science that help us write programs in in some in in some systemic ways uh we'll start by exploring what's called variable the the the concept of a variable where we take values and we store them with names and we figure out that we can reuse those things and and and use it to count and put and display information and do calculations explore some math um then we'll get into the idea of input and output where um you we learn to alter our programs to take um take information from a keyboard here or a mouse and we put it out on a monitor or we turn it into a video game or or uh video on a monitor or even audio all kinds of different things and we'll find that that that model will service well that kind of concept of taking input in sorry input processing and then output you'll see that a black box of that very very soon and we'll find it that that that will serve us well throughout our time uh studying computer science um then we'll get into um some kind of uh concepts of logic uh where we learn how to have our computer make some very simple decisions based on its input or um other information and and and redirect the flow for lack of a better term of our problem and that's basically the building block of computational problem solving when we have computers do things based on certain criteria we'll explore that and uh in in that in that vein we'll kind of expand that into this world where we might call uh something an event something happens um like a mouse click or a keystroke or um moral Falls in a pit um what happens then right we we start to explore that idea um and then we get into some um uh kind of like second level Concepts where we get into this world of looping where we iterate many many many many times on on a bit of information which is one of um the uh main values that we use computers for is being able to do things very fast in a repeated manner we'll explore that concept concept quite a bit um and then we're going to get into the world of um of uh of abstraction excuse me um getting a little dry here we'll start by exploring what is a data type describing different kinds of information and then um we'll get into a concept uh called arrays which is bunches and bunches of information that are of the same type um and then python in particular the main programming language we'll be using has some other Concepts that are more modern um and Mak some things some little easier we'll learn some trade-offs in in different versions of those um lists and dictionaries they're called where where they have um ways to um store and process many many kind just Bunches of information um and then in the world of abstraction we're going to start to take um procedural code for lack of a better term basically do this and then uh do this and then this and then this and then this we'll figure out that maybe we can take some of that and reuse it and we'll build what are called functions or methods modules um things like that um and learn that we can start to build little bits of code very well and reuse them many times and never even have to think about them again um as such we can build better and more complex code by having abstracted the the simple instructions and calling that um and then that's that kind of opens up our world into the last units of study where we abstract not just the way we execute code but how we store data and represent um entire um environments and things like that in in code and we that's called objects and classes then last we we'll kind of learn how to borrow other people's code for lack of a better term um because we can modularize and and and Abstract these ideas well guess what somebody's probably done a lot of that for us so we can go out and borrow a code that say draws to the screen or takes input from a keyboard or draws morio on the screen um that's kind of our tools uh that will will cover um the the tools right there's plenty of many more I'm not trying to say that this is by all all by uh any means completely exclusive um that'll be the first part of the class um and then the second second part of the class is we're going to will be a little bit more exploratory where we introduce the the concept of HTML which is the language the primary language that the internet uh uses to describe information on a web page um it'll be a very short unit but it'll give you some background on what's going on behind the scenes of CNN.com or ESPN or um things of that uh that nature uh we we may if we if we if if the pacing allows uh jump into the idea of a simple simple game um I'm not sure if it'll be graphical or text based yet but the idea there is that we would uh kind of wrap up all of our studies in an environment where we uh see just all of these things at play or we might just kind of study one and and write about it I'm not quite sure where where we'll end up there that'll kind of Jud be Jud I'll make that judgment at the at that point in the class and then two concepts that are kind of near and dear to my my heart will'll get into um a program that um uh was done on KH Academy um which doesn't really NE simulation and a really NE illustration of um kind of studying a series of events in a way that we might make decisions um uh it's a really fun unit um on the uh idea of should we shoot a three-point shot or a two point shot not we uh maybe LeBron James for is the video we'll use for that um given 30 seconds left in the game when you're down three should you take the take the three or shoot the two and how's that play out we'll get into the idea of that with some statistics um and then lastly we'll do a bit of a uh introduction to artificial intelligence mainly probably in the in the world of um chat jpt and and and and the cousins of that uh um you know new AI tool and how we might use that tool to both help us in computer science but also just in general and we'll get into the idea of crafting output or I'm sorry input it's called prompt engineering um just a very light introduction there and how that interplace so kind of two different sides the tools will be very technical as you might imagine we'll have some simple weekly or maybe bi-weekly um programs to kind of test your understanding there make sure we're all on base and then we'll have probably a midterm kind of wrapping that up with um you know a problem that would would you know kind of take all of those Concepts and uh and demonstrate that we're we're kind of getting that and then we'll explore those concepts with some fun projects from online and uh and explore that so that's kind of the the the scope of what you're getting yourself into right now um I'm super excited to um have you all in class um and uh start exploring that um I'll get into this in the logistics but please you know reach out anytime you're struggling that's why I'm here um and I can't wait to get started thank you