welcome back um this week actually probably two weeks we're going to jump into a another applied topic kind of like what we did with some of the other less lower lower level or um there's less coding in this than normal um it's not direct direct low-level programming or any of the tools or anything like that um instead we're applying what we've learned there to the world of uh data science it's called Uh data science is um uh kind of a cross between uh programming and uh statistical analysis um and really has opened up a lot of interesting ways to analyze data much more quickly um it's almost well it actually is an entire field many fields exact uh actually uh many fields allinone this world of data science um my master's degrees is actually in data science I did that for the School District here in Shine for many many years um and I I still teach some aspects of it at Northwestern University there in Chicago um it's an exciting world for me and one that I'm I'm quite passionate about um uh so uh we we'll get right into it um it'll be a standard unit um this video will be and an introduction will be posted here some learning objectives there for you um and then a discussion and an assignment of course we'll get to those in due time I very very well may be adding some more support files to this just to help uh perhaps something on notebooks or something on some of the different uh uh python modules that we'll be using here libraries excuse me but this will be the Bare Bones of it um this unit uh is probably going to be two weeks for two reasons um but none of those are because it's a terribly hard assignment for you to do the assignment actually probably shouldn't take you very long at all um I really would like you to spend a lot of time with this video the reading and do a little exploration on yourself uh with uh for yourself um in this world I I feel very strongly that of all the units that we cover in in in in our python courses that this one in particular might be one that non-computer scientists might want to take with them and use their python skills uh to help with data analysis and and uh data exploration in whatever field you go into and I mean about anything um you'll find as we go through this that there's some very nice tools for graphing and some very nice tools for data organization that blow Excel out of the water um so for personal you know statistical work um I I really don't think you're going to do much better than using um python or r r is another one of these that does some of this in a much different way um art the art programming language but you learn learning one or both of those will serve you very well in whatever professional career you go into okay let's jump right into it though um so but I I just just want to warn you this will probably be a little bit of a long lecture because I'm covering a lot of material introducing almost a whole new industry and also it's one that's near and dear to my heart and um and it's the only only unit we we'll cover this in and I think it's a huge one um and uh I'd like that to be something that you definitely take away from this course um we got just typical learning objectives here we'll cover some data manipulation talking about the three big libraries in Python we'll do some light data analysis although that could be a whole almost a whole well it is a whole degree by itself I think even here and the data Vis visualization we'll get into a library called map plot lip for that um and then then I give some um uh links to their uh their um their their uh references uh their references respectfully um each one of these would be an entire great great for you to read and I totally encourage you to do that especially when you get lost um technical documentation can be a bit hairy but once you get used to it there is a wealth of knowledge in there and you will learn a ton well beyond the scope of this unit uh but I want you to start to at least look what's in there and try to figure it out um and there's one other link I'll probably put in uh for map plot lib which is this examples Library oh it is actually in there um so when you go in there you can go to these examples and see all the different kinds of of charts you can see and I'll come back to this but the main thing about it is you can just straight up steal this code right you go in here and it will give you a Python program to do this now you need to adapt it to your data set of course uh but there there's great um great examples in here that you could follow along with and just do a ton of these things um but I'll I'll Circle back to that um but that's what's going on here there is a zybooks reading and it's it's actually a bit of a beefy one uh as far as zbooks has been going lately um there there's a um about four sections on the intro on on introducing data science and then three sections one each on each of matap plot lib numpy and pandas um so well worth your time though well worth your time to spend some time there they also revisit it Jupiter notebooks which we talked about a couple weeks ago I'm not going to focus on those but on that here because uh mainly because they're hard to set up um really quickly and in the twoe window we have here but this is uh what I was talking about when we talked about um modules in the modules unit when we use like Google collaboratory in that online environment you can do uh you can do a lot of this work uh actually almost all of it in notebooks which is often what you see uh in data science Jupiter notebook books and collaboratory Google collab notebooks um most of the time you'll see them in uh or you know data science work done in notebooks there because it's reproducible sharable right and then I just found a few other links down here that I may supplement as well this is a whole world you can jump into for sure lastly this this video when I get done with it we we'll we'll link here um the discussion is a pretty simple one um I just gave you a bunch of different uh topics to choose from choose one or more and just talk about it there's some questions here really anything data science related I just want you to discuss your experience here um hopefully it isn't too bad there's there's two there one on Wednesday one on Friday and then uh as part of the prim download which will be in this ZIP file here um that that's not it yet but I I'll zip this up and put it up here um I often make mistakes and catch them as I go through this video so I want to make sure I don't I get any typos out of there but uh there's a prim you know just like we've gone through and several other examples that'll be in that zip file the the make file and student info will be used to do some summary statistics uh at the end there and I even kind of guide you through how to do that once we get to that point so that's kind of what the unit will look like overall um I've got a bit of a lecture actually it's probably my biggest lecture to date so let's get right into that um let's see here um first I wanted to kind of elaborate on what data science is although the book does a pretty good job of it um you know we've been kind of playing in this world a lot right computer scientists we do things like develop software and you know some of our uh our students from the it pathway you know certainly play in this realm right uh website design is certainly something that you do as a programmer but then um we get into this world of What statistic statisticians do where you do like you know AB design and you you model reality and build inferences things like that if you studied stats at all you'll start to know what I am but the other the the main thing that that we share in this world is this idea of analyzing uh data with algorithms um and models uh and we don't get into modeling too much not in this unit it's it's a big world and it's fun uh but uh all of these tools can do statistical modeling I just want you to let you know so if you want to get into you know um you know regression and Data Mining and um and even machine learning these are the base tools of that I want to that's what I want to impart with this slide um we can build uh data storage tools we can link to databases uh uh uh with these kind of tools again a little beyond the scope of what we're doing here mainly because we don't have one set up yet here at LC yet uh hopefully next year um and then we'll do a little interpretation of results here all of those are what data scientists do I have a lot of background in statistics and Theory but also a lot of background uh in programming this this really uh kind of uh if you take away this and and really add a few other things uh um uh like Ai and some of the theory of deep learning and uh machine learning the the the deeper parts that need to learn this is really my background in what my education is in um it's pretty exciting world if you ask me but obviously I'm a little biased there okay let's see what was I going here so a couple terms a data set let's take a step back um in Python we often talk about lists and dictionaries right um or in other programming languages arrays uh these are collections of information that are the same or or or of the same type a data set is kind of like that you can think of it as a two-dimensional array but it can have other kinds of types in it uh much like what we do with dictionaries um and in in in in our case in Python in list as well um but they usually have or a data set will have uh rows which um are um usually tied to an observation of of something happening so in this case uh we're observing it looks like a species on an island and we're we're collecting some information about them so we observed uh a species called Gen 2 here and it was on an island called bisco and it had uh uh Bill a length of 48 uh millimeters here so on and so forth so the rows are observations and the columns here um instead of variables here we call these features or um columns uh are often just named in those but you'll hear the term features as well and these describe features of the data set um and things we use to describe the observation if you want to you know maybe get into the idea of um of object-oriented programming as well you can think of these as all one object or a description of an observation in an experiment um you'll see that a lot though um that's mainly in pandas when we talk about data frames um but let's take a step back and talk just a oh one more I do want to talk about data science one more time sorry and this is all from the book except for this graphic but I wanted to hit hit a few things so often what we do in data data science is we we we do quite quite a few different operations first we gather data we go get it um and that can be you know we can go write it down ourselves and and store it electronically like in a in a file or an Excel document things like that we can also get it from a database um uh using a a different kind of language called a query language uh often called often one one common one is uh called SQL SQL the standard querian language of modern databases where we bring large amounts of data in instead of from a file they'll come from another system um and python can do that quite well as can R um and then we often need to clean it um this is a big step huge step we're not going to do it today um or in this unit but cleaning the data and getting it ready for statistical analysis is a huge job um often you will need to remove rows to have missing values uh for example um data uh data algorithms often don't work when there's missing value on things or sometimes you would just have to clean up outliers or incorrect data by hand or or automatically we can write python programs to help us with that too and we'll even see some of our our tools to filter out data uh in just a bit um so things like that um and then we get into some of the stuff that we'll be talking about today mainly exploring data that's where we're going to spend most of our thought process today um where we create da D data visualizations and summary statistics to really look for uh interesting things that happen in the data sometimes these are relationships between data um or and sometimes these are just you know uh examining columns themselves um those of you that have taken statistics uh you know certainly might be familiar with the this concept you know with correlations and um and um regression is another one we use this um an NOA and uh some of ours uh you you know small sample uh tests like T tests uh are all would fall into this and all of these can be done right out of python uh with uh with um pandas will do a lot of it and uh SK pyit learn will do the rest if you don't have the have have it in pandas um modeling data and interpreting data um those are more well interpreting data is certainly kind of the realm of a uh of a um data scientist and that's how we present data so often we'll build build you know presentations for different folks or sometimes we'll build uh other plots that convey our findings to other people we won't do that in this in in this this unit uh but that's a big part of it too and you can use Python for that as well and then modeling data is of course you know when we really build mathematical models or data driven models uh to basically model what's happening in the real world with data and then we use those models to to to kind of play games like what's going to happen next what what what are some relationships that happen that we might not know of um what are things that we want to avoid all of those things are games uh that statisticians uh like and nerdy people like me like to play with data um but uh those are all well represented within the python realm python uh is probably the most widely known programming language for this and it and it might even be outright just the best tool for it in the modern world there is another programming language that I have a huge background in called the r programming language that I just wanted to introduce here and you'll see here that uh you can do almost all of these different things uh in r or Python and in some ways I rarely recommend R for some of them R is really really good at data transformation if you need to change your engineer data um for example if you wanted to like grab I don't know AG weight and build like a BMI and maybe height and build like a BMI like it BMI wasn't there you might do you know you could do that calculation and you can do it in Python too don't get me wrong but it's it's so much cleaner in R and it really deals with data frames a lot better than python does in my opinion and it's got some really cool tools for that ARA has a really nice um reporting Library built into it too it's called markdown um that you can build reports right out of our natively uh very cool well not natively but it's pretty close it's it's built by the same folks these days uh um but there's some downside it's a little it's a quite a bit different syntax than python so it'll be a bit of a learning curve but all the big big things uh that are in Python are also in R and then you also get some other things that are in r that do do things a little bit better than in my opinion than python one one uh library to be aware of in R that's not in Python if you ever go to down that road that I'd really it's actually a set of libraries it's a whole almost a whole new programming languages it's called the Tidy verse uh tidy like tidying up your room it's TI d y v RS e and that's got libraries for graphics and for data cleaning and data filtering and data mining all kinds of great things all baked into one syntax so they use a very common language and once you learn it you can do a lot lot in a hurry but enough of that I just want to give a little overview of the world um uh but and I and I I want you to also know that um there's many other languages besides R and python that can do this but um R is just one that I used for about 10 years and um I'd be remiss if I did not share some of my great experience with that language um uh with you as well so if you're struggling to do something in Python uh in in the data Science World it might be worth to looking at R to see if if it can do it um maybe a little bit easier okay back to python though in nutsh um there's let me put this back over here and uh maybe oops sorry shrink me down just a little bit like so cool okay so uh the big three uh programming or libraries that we're going to use packages in this case because there's multiple libraries even Within These packages are d by pandas and map plot lib um uh and I'm not going to read all of these to you but uh numpy is really good at dealing with large multi-dimensional data uh of of of the same type it's really good at doing quick math um and does just some amazing things there um and it's got a lot of math uh uh math capability built into it as well um it's a great great uh if you're not using the math Library out of python numpy is another great one um you know it'll give you a square root function give you power function and a bunch of trigonom functions are built right into numpy as well um as well as math but it's it's a good one if you're if you're a math person certainly uh you would you you could do worse than hanging out in there um give me one sec one thing about numpy as well is it's kind of the basis because it can describe things very well in a numeric fashion under the hood um it replaces a lot of the need for things like loops and um and single column uh sub statistics and things like that and that's what we'll be exploring just in a bit um it's also the basis of two bigger libraries that really start to open up actually it's the basis of a lot of bigger libraries but two two big ones that you if you ever jump into the world of machine learning or artificial intelligence um you'll quickly find out learn about a library called Caris um and then two more called tensor flow and py torch the uh Caris is kind of a an automation framework where it does a lot of iterations and tries a lot of different things for you um when you're doing data modeling and then Caris and tensor flow are what uh are are the backbone of modern neural networking and machine learning operations machine learning in the sense of neural networks there's other kinds of of machine learning as well um but that's that's that's a huge field right now and this is really where we take that step from python through a very core library in numpy into this bigger world and this is where a lot of the big math happens uh through python uh you know from python through numpy um but um just so that's just kind of this is just a huge Cornerstone of the data science world right now um pyit learn um it this is one that does a lot of data mining and U machine modeling for us just um if you ever pick up a data mining book I I can almost guarantee that every algorithm you'll find in there we'll have an implementation in in s learn uh Seaborn is another Graphics Library um uh that uh it builds on top in in this case of mat plot lip um and it does some really cool uh it gives us a lot of cool additional options M plot lb is no slouch in its own right there's another one by the way um that's out for python now that came from R and it's called ggplot 2 I also recommend you take a look at that if you're into Data visualization I like that one the best myself and then scipi and stats models are or scipi stats in this case and stats models are just more um statistics about models and things like that scipi in general is uh it does a lot of um it gives us a lot of algorithms from science um you'll find a lot of your Calculus functions in there as well integration and derivatives and things like that um so just a lot of the huge world that you you'll you'll see in in the data science world and uh if if you're interested in any one of these I strongly recommend that you just look at up and start looking at the documentation that's what I've done um you can find books on all of these of course but you don't need to all this is available for free online okay just going back to Jupiter notebooks uh Jupiter is an interactive development environment uh that what runs in a web browser uh basically it'll fire if you run it locally it'll fire up a little web server here and you can run python in your browser one cell at a time I'm not even going to demo this again we did this in the modules unit but you will really find that uh a lot of data science work will will you'll see the IP iynb extension or uh the um there's another one but uh chances are they're they're notebook if they're not py extensions they're probably notebooks um i p ynb i want to say I python notebook um but and these can also run uh on uh external servers Google collaboratory I've mentioned it a couple times is a great one you probably have a free account from your Gmail account where you could start to write Python and use their their computing power to do some of the stuff that might be slow especially if you have a slower computer there so that's something to look into as well huge World in its own right you can do a lot there um and a lot of the things that I'll be installing here in a bit will are already installed for free there they're really M meant for data science and for sharing notebook okay now we've got uh now we're going to get into uh the libraries and just a few features the book does a pretty good job of introducing these um and I G of course gave the documentation but I kind of wanted to land a little bit in the middle here um excuse me got a email there um nump like I was talking about um it basically lets us build numbers in a in a cool way I don't know how to describe this without a whiteboard um but uh you think about like a list in the way we've been using them where we typically have numbers in there right um although uh uh uh this would give us you know for example a one a one dimen sorry let me come over here see if I can do this backwards a one-dimensional array would give us numbers along a row and then two dimensionals would give us columns for each one of those and you can either add up on the row or the column and then you can get into three dimensions and I think maybe I grabbed the I didn't dang it they have a really cool graphic of it in the book uh how you get into end dimensional space but um anyway numpy lets us build basically more and more array uh dimensions of numbers which which turns out is very very handy in data science um for reasons uh we'll get into in just a bit when we start to see this stuff um numi is usually array uh abbreviated as ND and there's a an array data type that's just Central to all of these things now arrays are not like lists or uh dictionaries they always have to have the same type at them um and and and that's for performance reasons mainly that's why there there's a whole another type built in numpy for this but it's very important to know that you can't for example shove an address in there or things like that that's that's what Panda's data frames are for um and there's two tables of functions uh that uh that uh there's a functions on the arrays themselves like sorting and subsetting and things like that um in in your in your book uh in 1551 and then in 1552 there's a lot of The Operators like sum and and some of the different operators that you can use use on a collection of numbers we'll do a little work on this in in the in the guided learning here in just a bit as well let's see here yep and these are the common ones that I use that I saw in the reading uh you can take there if you give it an array uh Max will find the maximum number in there uh the median will find the median number these are statistical operations of course uh there's also min max and Min uh the standard deviation is a very common one it play very uh elegantly with Varian as you might well know from your statistics work if you variance in in standard deviation are uh are majores of spread how spread out are the numbers in these things um and then you get some things like dot product and some matrix multiplication as well built it right in with um right right in with numpy as well um but once you get out of there you can also go to scyth Karn to do other things with with matrices and things like that um but the dot products have very handy one as well okay so stepping a like a level of sophistication up in terms of application anyway from uh uh numpy arrays we get to pandas and and this is talking about data frames so let me let's see if I got one up here that's useful just going to grab Excel here you can think of uh data frame as kind of uh as kind of an Excel document where you might have you know uh columns like let's call this ID and maybe name and age and uh gender right gender right this is kind of what a a what a a data frame looks like it's a two-dimensional uh structure just like U Excel is so we might have an ID of like three and a name of Trevor and an age of 47 yes that's how old I am and a male right and then we might have you know a a five and Shayla which is my wife's name and I'm not going to tell you her real age we're going to call her 22 right now even though she is not that um right so what we do here is what we talk kind of like what we talked about earlier this pertains to one unit this is an observation of whatever we're studying in this case that we're people um and then this is a column and this is a column or a feature and this is a column or a feature well in Panda data frames it gives us the ability to not only store things like that but I can filter I could say give me only the males or give me people that are over 25 or under 25 um or things like that um I can also have the pandas data frame count things like names like Excel does basically almost anything you can do with excel in terms of statistics and Counting and data manipulation you can do it better with pandas and if I leave you with no take you it'll take some coding um but you're going to be better off if you learn pandas and and start to use um uh data frames for these work it does a cou it's got a couple really big features um that uh Ed programming does in general the biggest one and and and this is just straight up from personal experience a lot of business folks will do what I combine their data and their logic into one place um for example you might like highlight a row and do age of that whole row and the at the very bottom is the total of the age right well what happens if you need to put more data down there right you got to move the whole column it's nasty stuff so what I recommend is store your data in a data frame and then write python in one shape in one way shape for for form or another and then pull your statistics and other work Graphics into your program and uh and separate those two so keep your data where it needs to be clean it up and all that if you need to with python um and then uh use Python to do do the real uh description and things like that it it's a great practice and you you'll you'll thank me for that if you get into that habit and learn it early um just a little bit about panda syntax and you'll go through this in the book I'm not going to beat all of this with a dead horse but certainly you know feel free to read this as we go through but some big points subsetting is a big deal um this is selecting data in different ways um so you can either select data by uh limiting the number of rows or the number of columns sometimes you'll hear this called filtering when we talk about doing it with rows um you can uh you can reference the uh columns by their numbers so um back into this Let's Pretend This Excel was a data frame you could say give me columns two through five if you wanted to with a very using the colon syntax or you could even say just give me two to the end so if there's you know 100 columns you could just do two colon just like you do with lists you can do that in data frames um very handy all those shorthand syntaxes very worthwhile learning all of those you can also do them by name so you could say you know say I created an object of this thing and I called it you know people I could do people and then in Brackets in a quote I could say name and it will only return this column similarly I can say um I could say give me the rows where age is over uh um 47 using um operators uh you know mathematical operators examples of all of this in the book it certainly we'll do a little bit that as well uh but that's that even that alone is just a huge upside over doing this all all manually like you can think of it as having almost um a tool that's just way better than Excel built right into uh python ready for you to go um so that's talking a lot about subsetting using you'll use Lo and IO things like that um for example you can just grab a single element this would be a single cell this would be a range of rows for example rows come before columns so this would be Rows 2 through six um or five in this case because it's not inclusive and uh or you could do say give me um all of the all of the rows uh from the beginning to five and then columns one through three or one and two because again they're not inclusive um uh but you you you'll see this syntax a lot where the bracket um is uh giving you the rows and then the columns and you could either give single numbers like this zero and one to get the very first thing or you can uh you can give it ranges to get more than one it wants um you'll get some practice with that but uh more more the more things to know the more the better thing to know is that it's available that you you there is a way to do that uh feel free to ask uh uh uh or look that up or ask AI or even me if you want to play with that and we we could go through some demonstrations of that um I'm introducing a lot this week so I don't want to beat any one of these like each of these could be almost a week by itself um the only other one thing I did want to call uh call out here is that the syntax can be a little bit nasty um for example uh oh I actually messed this up um but uh like this middle part here will describe uh you know the rose to return but they only give you the indexes they they'll return a bunch of numbers um and then what you'll do need to do is plug that back in to your overall uh data frame to actually get the data back out that's just one common Pitfall to avoid there let's see oh yeah hey I I I actually wrote a slide on this sorry um one other thing that uh pandas is really good for and known for but also is kind of true we've done this in the files unit and things a few things like that it's you don't have to enter this data manually um much like we talked about with the databases and Excel and comma separated values you can read these things in directly um so here we're just saying you know from the pandas package you could say you might imagine we have import pandas SPD we can do panda. read CSV and we're going to get a whole data frame from this this uh comma separated value file called uh Old Faithful cluster in this case where we grab a bunch of data from a file and it just loads it up and it's ready to go um with a oneliner um that is just so much easier so all the looping and file handling all that stuff is abstracted away much like we've talked about before and put into a library and we get to use it in one line instead of writing all that all that again um so again we're kind of moving up that chain of abstraction aren't we here uh you can read from uh instead of commas we if file has tabs you can do that fixed with basically if there's data in a file and it's in an organized format at all you can describe it to Python and it will open it you might have to do a little looking up AI is great for this by the way it's very good at describing and building data loaders for you um so feel free to do that as well okay on to the second of the three or the third of the three sorry mat plot Libs a little bit different but they it uses uh uh it uses uh pandas and and numpy to do visualizations it's really cool um you can basically build all kinds of amazing visualizations reports um even interactive plots uh programmatically using the data in these so you can load up things and and start to visualize relationships and things like that we'll we'll study this in the exercise we're going to have two examples I think I don't have you to do this for the homework uh it's kind of fun uh and I encourage you to maybe do a little bit more with it um it's probably my favorite thing to do uh with python uh but again I do think our is a little bit better just just saying um there um but uh oh and that's where I wanted to bring back this thing uh so you can uh where's it at Yep this one so on the map plot lib website you can go to uh these examples and um you can say okay what kind of D what kind of visualization would I like to do with the data I as I've studied that I want to you know compare things well if I just want a simple bar chart I could do something like like this I could click this and I could say yeah this is kind of what I want I want to describe some groups maybe with with these totals right so I can go down here and kind of look at this and copy it and and start to play with that um and start to understand what's going on you can see there they give you even the the uh the files let's see I don't know I'm trying to see yep there's a so we could actually grab this I'll go and do it um this one actually has the data in there it does some stats for us um so I'll go and open this and uh oh well I'll come back to that in a sec uh because I I I want to demo something when we get to the code so let me come back to that but um the point being is you can get code here and then you can grab a jupyter notebook from here as well um which would I I don't want to upload it to collab and all that I'm already going to be really long on this video um but you you could you could upload it to to Google collab as well and you do that by just going to cab.com or or I'm sorry notc not cab.com it's it's Google collaboratory um you'd have to so just Google Google Google Google uh collab and you'll find it um and it will save you this in your in your Google Drive which is free you can see I have a whole bunch of them here um you know what I'm going to go ahead and demo it since I've already got it it open I'm going to cancel this and uh what you can do is uh is you can bring these open and you can upload them over here in the right um and and so you click on the the left here I'm sorry the left not the right um and you can or you can go file open notebook and it will go to your drive wherever you're at or your GitHub or you can upload it so if I if I downloaded it so let's go ahead and go back here and download this guy for a sec then I can go to my downloads direct ah dang it um you can see it trying to open locally here but it doesn't take too long to go into the folder here so this is just in my downloads folder and then I can just drag it into here like so and it'll open it for me so it's not too bad right and then um now this one uh is is a very simple one but you can see here that I've got a play button and if I play this it's going to just run this um and so it's it's connecting setting up its environment and and sure enough I get this now this one uses some randomization um so if I actually got rid of the random seed here we'll we'll get a different graphic each time random seed makes it so it's the same each time but uh you can see that changing so that's where the data data is coming here it's either hardcoded like so or um randomly generated but you can absolutely upload data to this file section on the left over here as well and and open that with a file command just like we've done locally so you can upload it temporarily load it and and do it that way as well and that's more common so um and that's a pretty common workflow as well um there's some tricks to it you'll have to look it up but uh that's kind of what what these are in a nutshell and you get the graphics right out you can right click these you can save them you can like say hey I don't want that anymore you know I'm going to change this to you know have uh I don't know let's see a do do we have a Sally here looks like I can input Sally really quickly and fire that off again and then we have Sally down here and that that worked because it's actually using the um the length of the people uh uh tupal in this case to populate these things you'd have might have to write more data normally so this one was easy to extend but you can quickly do do things like that anyway the whole point of the whole thing though is that you can go to these these examp PS um and just gra see mountains and mountains of data visualizations that are just amazing you can see how many there are I mean I'm only on the second one here you can go you know we got subplots where you can make plots within plots um all kinds of examples there um statistical ones all you know box wh plots histograms things like that very common ones um you can do just a just a just a mountain of stuff um with with with these one one and one that is kind of fun to play with is are these 3D plots uh let's see if I can find an interactive one here quickly uh let's let's just grab let's grab a common one let's grab a 3D surface plot and grab it it looks like this should run so I'm going to just going to copy this and I'm going to put it in our collab notebook here so all I do is add added another cell here run it and let's just fire this off and see what we get here and usually oh dang it sometimes you get interactive ones where you can drag it and play with the different ones let's see if I can find one because they are really cool uh and they're fun uh let's try let's try this no that's not a good one this one might work maybe unless maybe there's a different version that I need to do I I know I found them before and I know they work really nicely in um let's just okay now I'm just fixated on it inter interactive 3D plot there we go and it probably have an example hopefully just just want one in a hurry here just in a hurry let's try this gu yeah okay let's try one more just for fun and I promise I won't keep going um but you can see how kind of fun it can get so this has got a bunch of data our our x y and z- axises just going to try to met PL lib is there but I need to install something called widget so I'm going to actually do that it's not that hard to install packages here what you can usually do is instead of pip like we did you use this exclamation part and let's uh pip install what was it called it was called widget and I think this is what actually lets it do the 3D plotting that's why it needs it so let me let me fire this off Google uh will usually be able no dang it okay I'm going to bail on that but it's fun to play with um and usually you can install these locally as well um that's okay enough of that the the main point is there's a whole bunch of fun fun fun libraries out there that you can play with um and and uh and do do some and you can often uh grab them and play with them it's it's one of the cooler um aspects of of doing programmatic uh data visualization okay sorry where was I back to this um the galleries yep there's just tons PL yep they'll show up in notebooks and you can also save them so um if you have a plot object that you've alist just PLT uh you can often just do a almost any well I'm not going to say almost every single data uh image that you make you can save you just need to look up the right Syntax for it and it's usually just save. fig um some more examples oops dang it jumped right off the end there um you can do multiple plots I thought I had some text here I must have must a accidentally Del to that but you can put plots within plots is kind of the cool thing about it um this one is a 2X one plot so it's two I'm sorry it's a 1 by two plot one row two columns but you can do as many as you want um and they don't even have to be the same uh kind of plot like we have a scatter plot here all right so that sorry about the long lecture um uh I hope you got through it and I hope it was inspiring a little bit let's get into the code uh let's so go here so um one thing I've done uh is i' let's go and close that guy well you actually might run here I I'll leave this up for just a sec um but uh one thing you'll need to do to get these running is to import to to um install your libraries right we've talked about this before with modules but I actually wanted to demo how I would do that um if I didn't have them set up as well so you can do things like uh use pip so a very common syntax is PIP install pip install and in this case I'm going to do numpy what this will do is it's going to go out and uh resolve and it's going to go look up and figure out for my system which is the right one to get and right now it's installing it and now it's installed so now I could absolutely call numpy and as a matter of fact if I reloaded this uh bar one if I if I close it do I get a back I don't think I will so I'm not going to close this one uh but you'll notice here uh well Pand is is uh got a squiggly mark because it says can't be resolved um that's because it it's not installed the other way you can do it though and it's also using pip and this is why I I I'm showing you this if for nothing uh you can just list the um the uh the um packages you want in a file a very common syntax is to use the requirement. text file um you'll see this in a lot of packages projects you download from like GitHub you can install all of these At Once by using a slightly different uh pip install is still the same but instead of uh of just giving it single single ones at a time you can go R and requirements. text so this is going to basically install all of these for me I'll go to fire it off because it's going to take just a little bit and it you can see it's downloading and installing these things and getting my system set up um now I've I've done this in other parts of my computer um but I set up an environment that didn't have them so you could see what it looks like um so when you get get this downloaded if you haven't played with these packages before um again the syntax is uh pip - r or pip install dasr requirements. text and I'll type it out again for you one more time um here let me just make a new editor um so it's it's pip pip install casr requirements so you should be able to copy and paste that to your command line um and I'll just save that in here as well let's call this read me so that'll be in your file as well um and uh so you can copy and paste this and you'll see here now if I do this if I copy and paste this down here like so it will just uh did I type that wrong require let's do it let's cheat OB oh requirements yeah there we go so there we go and if I do this down here then it's basically saying they're already installed so um and it'll update them if it needs to as well but you'll need to do that to run these you need to get these installed so if you haven't done that yet um often you may not not have seen this uh window down here before uh except for when your program is running so to do that you can just go run I think it's run no it's terminal and do new terminal and it'll bring us something up like this and then you could just type that right there pip install d r requirements. text and this would be after you unpack the zip file that I give you and away it'll go and then you'll be set up now you'll notice here uh for example in your make file uh pandas is no longer gr out or squiggly lined it's ready to go um but if you got something like package not installed cannot resolve name things like that it's probably because you didn't install it you you'll need to do it so um hopefully you're watching the the video I know a few of you didn't know these videos were here I'm really sorry about that as well okay let's get into the demos I'm going to get over an hour here which which stinks um but you have two weeks for this so makes me feel a little bit better maybe uh the first one let's go I'm going to close everything here just going to close all of them oh except for this one except for that guy so this should run for me now uh it wants to you know what I'm not going to set up a a Jupiter environment you can you absolutely can set up Jupiter notebooks they're running VSS code uh I just don't want to get into yet another thing here so I'm gonna I'm going to close that with some uh some heartbreak so let's go and close all of these uh save you yep and that and that okay first example it's uh flight statuses so let's let's let's deconstruct this here we're importing map plot lib we're bringing in the PIP plot uh library and we're we're aliasing it same thing with pandas as PD these are not uncommon Imports you can copy and paste these um and then what we're doing next is we are grabbing a file so this is just a file in the directory I give it to you in this case it's in the flight sta and in this case we're grabbing this file it will it will come with it and we're reading it um so once it's read it will be in a pandas data frame called Flights and then what that will be doing is we can then start to use this is an F string um but uh we can start to use like the column name and grab the mean the average here and here we're just doing our trick where we format it to decimal points but this will print out the the number of delays and uh and uh canceled from these these two files and you can see what we got here we've got a month which is 1 2 3 4 5 6 7 8 9 10 11 12 canceled delayed these are columns of numbers um and then diverted in on time so we've got our month and our canceled number our delayed number our diverted number and then the number of on times so just very simple data separated by commas um and a lot of data is stored like this this is not uncommon at all this program we could read in each of the the strings pull apart the commas read each and loop through all this or we could simply do something like this and let's uh let's clear this out just down here oops uh let's kill you and kill you um and I'm just going to run partially hopefully I can do a partial run here uh yep so it's importing it and you can see it did exactly what we what we were doing where we got the average delays and the average cancellations right out of that thing across that data frame I'll run the whole thing in a bit but I'm trying to do this a little bit uh shorter actually I might just run them all yeah I think that's probably smarter at this point so let's go ahead and clear this again exit out it because it leaves me in the python interpreter and it start to freak out if I don't do that um I don't know why my control L's not working but we'll kill this for a sec I'm just going to run the whole file here and we'll talk about a few more features here as well so we already saw the top part where it does those first two which is the averages that's happening here and we do that by referencing a column name much easier than what we do with lists and things like that we actually call that column name and say hey from the flights uh data frame I'm going to use this syntax this bracket syntax not to be confused with a list to give me just the delayed column and I want the average of that and then of course we're doing the formatting and then the same thing with the cancel what else can we do well it turns out there's you can do a lot of function funs at once with this describe function so instead of mean we're calling describe here and that happens on a panda data frame as well um so in this case you'll see it under the summary stats here instead uh and and oh and the other new thing is you can have more than one column so we we say give me delayed and canceled here right all at once all at once and we use the describe to say give me a whole bunch of stats just describe it to me that's what that means so we get a count there's 12 of each we get the mean we already saw those up above you can see that those match we got 350 3596 and 216 right uh but then we also get the standard deviation the Min and the Max and then we get uh the the um the values at the 25th 50th the median in this case and the 75th percentile all for free um and then we get into we can do some custom aggregation here where um we can uh describe exactly what we want uh and pull out even some more uh aggregations so delayed here we want the mid the max median and the skew um and so we get that here we get those ones but we don't say we don't want that for the canceled for some reason and instead we want the mean um there so you can you can descri give a a list in this case of what you want the thing to give you and these are all just syntax of of uh um pandas now you need to get familiar with the documentation and examples I I strongly recommend using uh the documentation or an existing example from from like St stack Overflow a book or even AI to to build the syntax this is not python syntax this is Panda syntax um now these are built on python objects and you can see parts of this like functions and um a list here of arguments but how this is constructed is very dependent on pandas So you you're getting away from that but you could just do a mountain of things with the these these tools um and they've been built um so that's something that's used in custom aggregations and then uh finally we're building a plot um so here we're we're again grabbing three columns in this case the month canceled and delayed and we're grouping by the month what's Group by mean well it means basically take this thing called a group and do summaries by each each one of those so you might recall that we had this month here so it's basically saying hey um summarize you know all the all of this by each one of those so if we had more than one four it would do you know April in this case yeah you let's go and do that let's do that that let's just say this was like that and like that right just different rows um so you know these are all only have one but you don't need to do that so when I when I call this here I'm just going to run the whole thing again um what's going on here is it's saying Group by the month and give me the mean and so for each month this is the average of those um and that's why I wanted to show of course you know for the ones that only had one the average is just the one that was there but this one that we did in April it's averaging over all of the ones that were in April um and you can break it out by month or anything else in the data set so this is grouping or um disaggregation and of course you can use any statistical method you want on any of those um and then finally we're building a plot um so we're again grabbing the uh flights month for the X column and the delayed here for the uh y column and giving it labels and again this is all part of map plot lib and again look at the documentation but you can kind of read this one this one's a little easier to read we're setting the X label and the Y label here and things like that and then it's finally saving it to flight status. output. fig here and we can see that all of that comes together to make us a nice little graph that compares the delays and cancellations by graph and you can get a kind of oops sorry let's go back here you can kind of get a flavor of how those are controlled here so for example if I wanted to change the title um you know or something like this I can absolutely do that so if I just run this bit you know I'll just run the whole thing it's honestly easier um I and I go back into here again we can see that I changed the title it's all there programmatically and of course you could build the strings programmatically as well okay I'm going to try to get through the rest of this here in a bit as fast as I can I'm coming up on an hour and I I knew that was going to be an issue uh so let's go we got two here uh oh this may have been something I was considering for an assignment uh so let's just go into the plot here the idea here is we're reading two different files and doing Statistics over them so pandas has a read.csv uh uh function just like we saw in the other one we're building two data frames here data frame one and two um and we'll see here let's uh go and run this um so I can go through it you'll see it actually prints summaries of them each one of these has 132 rows you'll see here um so it gives you an idea when I print these df1 and df2 what's in there you can make a print all of them of course if you wanted to um and sometimes you need to uh but very often you're just trying to get an idea what's in there and there's other things that you can do to get an idea what's in there shape and describe are both ones shape gives you the dimension how many rows and columns it has and and describe gives you summary statistics much like what we just saw um and then very similarly we're building these um uh the these uh subplots um and you you need to read this but it's basically saying um for this is uh build we're going to build sub two two plots um one row and two columns and this is the the first one of those and this is the second one of those and then from there you're just describing the rest of it so you're using the df1 and then df2 objects here and you're grabbing the uh the gross potential capacity and you're just comparing July to December and that's only that's uh because the data in those two files represents July and December respectively then we give it the proper title and finally we see in plot example we should have a plot that got kicked out here and we sure enough we see a scatter plot of these two things because we asked for a plot plot by default if it's given two two uh arguments is a scatter plot and and the two arguments are the X and the Y uh uh definition again I I could spend a week or more just on plots Alone um even at an intro level um and I'm trying to boil this down to make it um a little more usable let's get in right into the uh the uh the uh assignment here it looks like I oh scores demo was supposed to be the first Prim yeah it is so let's go in here and um what I want you to do is just basically go through this and ask yourself what you think each of these is doing this will be something that you can use uh on the assignment or at least the basis although this is numpy and you'll be using pandas for the that but basically we're importing this we're grabbing um a file and importing it and of course you could print the file um as well uh not file name though you or uh you'd want to do it um after you load it so basically uh pandas has a load. CSV this is load Tex text uh which is just loading a text file and in this case the uh the actual file is just a bunch of numbers they're very there's nothing special about them and there's no column names because again numpy doesn't do that pandas does that pandas has the columns column names and you can address it um uh so uh but then it's just doing some average some using some of the uh numpy math operations to do some of these things building a meeting score and average score things like that um and in this case it's doing an operation as well it's giving you a new set of of of curved scores um that that are basically a way to curve things saying hey add up go figure out the max score and bump that one up to 100 and then give everybody else those points I'm not going to do that for you guys but that's what this program does so that's that's the first one make I'm going to go and rename this actually let's uh let's call this one predict just to help with that there you go that will help with that so start there and then we go to three where we're investigating and in here we're uh I I've got three things for you so the first thing I want you to do is investigate how we might do some math with a loop so we've got another file in here uh in this case it's called Data again just a bunch of numbers and this is kind of how we might do something sorry um I keep losing my my place uh we might do something like we might make a function here where we uh we you know make a list and we open it open the data file in this case the data file is called data. text right um this is all in a function that I we're writing called statistical Loop is how to read that and uh and then we might go through that file much like we did in the files unit and append each row in the file to a item in the list and and then might do like this kind of like hey give me the mean by summing up everything in the data uh list here and divide it by the length of the data list right these are all things we could do and have done um on with with lists the point here is to show you that this is a way to do it and then finally we print it out and I'll go and run this and we can see it does this we've kind of done this when we studied some of the stuff at the beginning of the year um but then in numpy we can see the the same thing um sorry let's get rid of you we don't need you anymore that was just left over from when I was breaking them apart here we do the same thing but these are built in built in to numpy same exact thing for free very nice right this is of course returning all three if you haven't seen this syntax it's building these variables in this function and returning all three as a tupal um and then we read the those back out here and then just print them down here but we could have done it one at a time or just printed it without a function the point being though is that numpy instead of doing all this nasty stuff with like you know plus equals loops and looping over the length and Counting how many all that's built in so you can replace all that nasty looping syntax and powers and things like that and even remembering the the form the statistical formula for standard deviation and variance it's just built into numpy forest for free as are many other functions and then lastly we have pandas which is the one we've been kind of playing with and I've got a slightly different data set here so the first thing we do I I'll just run this one the first thing we do is we get the same thing um on on a numerical column where we get count and all that using and this is using describe um so this function it reads it uh it reads our data file in from uh th this uh other data data file where we've got a category a numerical column an ordinal column numeric 2 and three just to have some more data in there um that's what it's using instead of just a one column thing um but it then uh uh pandas is what I'm doing um it reads that and it's going to call um this this function up here and it's actually doing this describe uh function that we talked about earlier so we get all of these these for free all of these for free right out of there where we get a count a mean standard deviation min max 50th percentile and of course those are not the only ones we could do those are just the ones that describe gives us in a oneliner so you can get all of this out of one line of code uh with pandas and of course pandas can use multiple columns as well so that's what I demoed here where I built data 2 as opposed to data one or data file so I grab data 2 here and I read the whole file and I just describ I said hey use this uh this data frame after I've read the file so here it's using pandas it's reading the entire file into this thing called Data 2 and then I just print out a line just to show me where I'm at and and I say describe the whole thing two lines of code to describe that entire file to get this kind of output um much much easier than those Loops that's the whole point of the prim assignment um but I want you to kind of go through through there and say hey this doesn't make sense where where' this come from that syntax I looked at the python docu or the the the um the pandas documents and I can't figure it out I just can't figure it out and come to me if you have questions on that okay finally the assignment the make assignment this is going to use pandas and I give you the file here it's it's it looks like this we've got a last name a first name midterm one two and three so these are three columns and basically all I'm asking you to do is to go through where's make at there it is I'm going so I I loaded up for you here I import it for you give you the description here and I'm just saying go through and um and and give me some statistics about these things and I do give you this one as well um I give you an example of this um and the reason I do that is just to demon that you don't have to call each column individually you can but you don't have to so you'll see I've got the Maxes here for you and that's basically saying hey give me the only new only the numeric columns that's what this does that's why I gave you this and then do the max of those from the grades data frame which you've loaded up here from this file name after you've imported pandas so I'm just have you going to have you go through and do the median the average and the standard deviation of those and print it out now if you want to feel free once you've got that loaded to expand it and do a little plotting of the things or do some other statistics or things like that you don't have to but this is a great opportunity especially with a little extra time to really jump into all of the other things I've talked about I don't want the assignment to be overwhelming I know we're coming up on the final and that's why I give two weeks on this um and and a very light assignment I think you'll agree this is a pretty a light assignment for the amount of material we just went over um but I want you to understand that this is a great tool for you to learn um and and I really I've worked hard on this unit for that reason I really wanted to package a big thing up and especially For You non-computer science folks that might take this unit um this is one that you will certainly use uh or you could find a use for let me put it that way um as as you as you go into the workforce and and things like that this skill set has served me very very well over over the last 20 years of my life um build being able to write computer code against against data is a huge skill set in the world and this is kind of your the the the opening of that door for you so I hope you take this opportunity and jump down that road okay well please consider this two 35 minute lectures over two weeks maybe as opposed to one huge long one I know these mine aren't normally this long but I really wanted to cover just a lot of stuff for you and uh build a very small assignment but uh I absolutely love talking about this please come to office hours uh and we could play with this all you want um and then um you know the other thing is of course we're coming up on the final so please start thinking about that as well that's the other reason I gave two weeks for this so we can really get into the um the uh the definitions and algorithms of the final during this time as well I don't want you to only have the the final two weeks really one week for the final before we we have to start grading things so H okay that was a big one um thanks for sticking with me I hope you enjoyed this and I hope this is a world you can jump into uh and enjoy a lot um I've got a mountain of books and tutorials and videos and all the things on all of these things um so if if this is something that interest you please let me know and um I I'll certainly set you on the path of more of this uh thanks bye