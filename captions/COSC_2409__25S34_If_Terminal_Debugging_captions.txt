all right first off a bit of an apology My Demo broke um and I'll explain why and then we'll go into some debugging methods here uh about if statements and tracing variables the reason it broke in my previous video is essentially what happens let me go ahead and exit python just for a sec just to just to demo that everything I was doing Works uh when I run the whole program right we can we can do this and we see that expected behavior that we were hoping to see there um what happen happens is when I when I'm in the python interpreter and this is a good lesson that's why I made this little oneoff video is what happens is I when I hit control uh or shift enter like this um it's basically just taking this text and jamming it in here all at once well what happens is it runs this first which is fine um it runs all of this first uh down here but then it starts to write if x uh X is less than zero and The Interpreter down here thinks that's the input from the the user that's what happened and why it broke the script so you can't run a complex statement like this where you do an input um directly I would have what I should have done is just basically put in uh five here I can certainly do this where I can test things like that um and you'll see that there's no errors there well there there this is the error from before um let me go ahead and let me go and clear this and just just to demo that um so if I do that we'll see we're not getting errors now and it's evaluating properly um but it's because of that user input it was waiting for something from the keyboard for me and it interpret this to it um that said um let's go ahead and go back uh to this format this version of it I'm going to actually leave The Interpreter so you might recall from my earlier videos and this is what I've been doing to to demo this stuff really quickly for you it's super handy to be able to do this but I'm going to exit the python interpreter here which was the three slashes or three uh three little greater than signs um and I'm going to go back to just a regular program and that's why it didn't work over here is I was sending the whole program down as well so now I can use the IDE where I'm running the entire file at a time and you'll see that this works as well um so I can do things like this and we get we we can do all of that so apologies I'll make a note about it when I post these videos to to to look at this as well but the other thing you can do and I just want to re reiterate this if I have in this class you can use what are called breakpoints and print print statements to see what's going on and as a matter of fact you can even do that with Expressions so if I was trying to debug this I could say Okay I want to know what x is or I can even do like X is colon and then uh like this I can write statements like this and it will print that out down here um and then I can also do something like this um I can do print X is less than 5 five literally that and I I'll show you what that looks like in a sec um so when I run this um I'm going to put in five right and what we'll see here it's going to say x is five and then it's going to print whether this is true or false so you can evaluate expressions there like so and we'll see that it's false um uh I can't remember what I typed there but uh oh yeah I did I did five and five so X is not less than five x is you know equal equal to five but you can print Expressions out I could even do something like this oops I could do something just like what we did before and or X is I don't know greater than 50 I don't know why you do that uh exact well I mean so we can do things like this um let's say it's 55 and we'll see that that's actually true now because that's an or statement so you can debug things like that as well of course the real cool thing about using an ID and in a create a development environment is you can use debuggers so um what I've done here is I've clicked off to the side and most of these have it you'll see this little red dot that's called a breako and then if I do this kind of drop down you'll see here I've got runner debug if I do oh I just realized my face is in the way what I'm trying to show you let me move myself down here for a sec move myself right there that's a good place for me right now um and I need to make this just a little bit smaller so you can see the right side of my screen there we go let's do that um let's uh so if I drop this down and I do debug python file it will use these and what it does is it starts to tell you a little bit about your program so it enters normally um and after the line that you're on is hit so let's go put in three it's going to stop uh wait why didn't it do that did I hit run or did I hit debug let's try yeah there we go I think I hit run so it's going to basically do some stuff here and now it stops and what and I'm going to even make one more down like here um so you might notice I got these new controls here that I didn't have and this kind of changed and there's all kinds of stuff going on down here um it went into a debugger which is doing a lot um I won't go into that but you you you don't want to use these for a little bit um what you've got is continue which would go to the next break point or step into and over um into over uh uh will go into a function or over for now they're equivalent I'm going to actually use uh just uh into for now and and and you can see that it's oh it's waiting now so I I it was paused here and then when I enter a number let me go and enter number five here you'll see here it's gone onto the next line and it hasn't printed it yet it's waiting for me um so it's pausing throughout the program but you can see that X has been assigned to the variable five so I can see what's going on there and then if I keep going um and I can use f11 or shift f11 here uh to keep doing it so you don't have to keep hitting the button now I can see that it's gone on and I'm getting ready to print so it printed it did it executed this um and it did the evaluation and now I can see and I the really cool thing about it is you can see what these variables are and I can oh I see why that happened right it's right there um and then the same thing will happen here um and you'll see it here because X is not equal to 5 it's going to skip over this you'll just see it do that jump there um hopefully that was apparent what happened there um and then this one will of course say greater than zero and you can see it go in here so I'm just hitting f11 here and again that's just the hotkey for this um and this should work at most idees you should have some version of this um so just a little bit about different ways to debug you can print you can uh send it to the terminal but you got to be AIT aware of what's going on there or you can use the debugger um sorry I kind of lose track of that when I'm getting going in lecturing it's hard to do demos sometimes in lecture but what I did before basically was I was sending a whole bunch of junk to the terminal at once trying to just show you the output uh but it confuses the terminal um so be aware of which mode you're in whether you're in your um your uh in just your your shell uh where you can write commands including the entire program um which this will work then or if you're in the um um the uh the uh the the python expression uh evaluator the the three uh the three greater than signs that doesit different behavior of course I can I can type I can't type python here right like I can um well it works in Powershell but I couldn't do um you know some of the Python stuff that we'd be doing like if I just sent all of this down it it'll blow up it it does it's like what are you trying to do um this is file system stuff not p Pyon stuff um but if I do if I go back to python then um and I get this I can do things like this as long as I set up the variables ahead of time this would blow up because it would not know what um what x was but if I actually just put it in there then it's got awareness enough to to finish the thing up and I can see the output there so that was the difference there sorry about the hiccup there but I needed to do a refresher on debugging anyway so it worked out um hopefully this was useful uh we'll move on uh to more if statements after this