welcome back to some of the supplemental stuff we need to study in C++ um certainly certainly important material just not part of our general toolkit um in addition to the file or the FI the class linking and compiling uh part of what I'll probably put these two units together um we need to study a little bit about file input output and we have some assigned reading to that effect here um and I just realized I haven't put the new assignment in here yet oh no it is here I just haven't I haven't activated it um so you'll have three things this week to work through um but but there's another one more video um here as well so right now I've got the the lecture on compiling and linking in here um and I might separate these out we'll see how we're doing um there and then this video will go here as well uh and this has to do with external files they're not directly related but they're small enough topics that I thought we could do them in the same week if we needed to um the assignment for this week we will be another Prim exercise and you'll just has have a zip file to to download there um and I've got just a bit of a lecture here that we can uh have a quick look at to uh to help us uh kind of demystify some of this stuff so I'll fire that up here uh in our thing um oops this is uh looks like I had something about pointers in there oh Ju Just a typo in the slide deck uh let me change this I I obviously started um I I obviously copy and pasted my uh PowerPoint deck from last an earlier week um so there's two objects in C++ let me move my picture here I just see that I'm kind of talking over the thing and I don't mean to do that um you know I'll just I'll just turn that off for now we don't need need to look at me um there's input streams and output streams um and the main thing uh and we've used these already right we we use these all the time when we do print or or inputs um the main thing that we were're starting to study here and it's really laid out well in the reading is that these things have more to them than just simple print and uh you know input type of functionality um the SE out uh pre it's it's actually a an output stream object um that is associated with the standard output so our usually our console when we're working in Visual Studio you know just um just this area down here here uh that the the actual the the output of this is usually associated with C out by default similarly CN is a predefined input stream that comes from our keyboard so what do we mean by input stream and output stream well these are just uh flows of characters or sometimes words um that come to or from a device um and we can do a lot of these a lot of things with them um like intercept them and manipulate them in the middle of things uh to format them or change them or whatever um but we get we get both all of this stuff from the io stream Library um and it's in the namespace uh the standard namespace the which we've again been looking at for a couple weeks now and and throughout 10:30 as well um but we've never really you know kind of jumped in there and figured out exactly what they do um so the output stream uh it supports output basically and it's got this uh this kind of syntax so we we you know we can take a string here and put it to the standard out or a variable or anything else um uh or I'm sorry it would combine a you know this or a variable and and and it streams all of these things in order to the output and similarly we can do the same thing from our standard input and we've seen this before it turns out though we can do similar things uh I'm going to well you know I'm going to I'm going to do it in order of the book here um but what what I was starting to say is we can do similar things with files or even other outputs we're just going to study files here but the same syntax uh kind of kind of gets used here that's a modern feature of C++ that didn't exist um throughout c++'s history uh but the other thing we can do with these things is um we can do things like intercept these things and say Amy and then we can use like set width uh to do like text alignment or set fill we can pad these things out with spaces and things like that uh with star and do alignment uh similarly and then we can left and right along these things in in a space uh as well so a lot of the string formatting that you'll want to do um I realize I'm speaking with my hands again uh let's see this uh I think we'll be okay for a little bit to have this back on go turn that back on um so as these things go we don't only have we don't have to change the variables or even strings themselves we can shove them through different functions some of which are provided for us or we can even write our own uh which we'll see in one of the units here um or one of the premise or one of the examples I'll get into uh to to do formatting and things like that and we see similar things with numbers where we can you know do scientific notation or sit set variables and things like that very handy things where we don't have to change the number themselves um like you know we don't change 12.34 here but we can have it do different things um to to uh outputs like if we said uh you know three points of s of precision we'd get it'd round up for us but the variable would still contain that same flow so we don't have to change the variable we can just use functions to maintain these things as they stream through and we do that just simply by doing that we we pipe them in really with this output stream into this function that's defined for us in this case or again we can Define our own and then that gets output as a string as a string to see out and then it gets printed so that's really the big use case the book does a really good job of walking you through some things here so I don't I didn't even spend time in the actual assignment for this just know that it exists um and pay attention to that as you're going through the book you will need this at some point um I'm not yeah so and this is this by the way this is straight from the book The these two um files so the other thing um that we can do is read from uh files um and when we do that um streams basically will implicitly call uh things until they run into things so like in in the case of a file operator it will keep going until it runs out of a file and then so you can do something like this where you create an O I stream in this or a file input stream and keep going and reading it into Data into the the data variable um uh as it goes and then when it runs out of the file it will just stop so this this Loop will basically be true until it runs out of the file and it will be false which gives us nice easy code to write um and again this is done in the book I just wanted to illustrate what's going on here um and why this works why this works is that basically this will um um uh process true until you run out of the file or it hits an error um so nothing too crazy there um so file input is really what I wanted to spend the bulk of the time of lecture on but we also do this in in the uh so I will actually hide me again because I have code behind myself um so you can actually instead of taking things from a keyboard we can create what's called an i instead of an I stream which is just an input stream we have do an if stream which is an input file stream um and then we can open a text file or any kind of file and it will read it uh what it usually does and there um what you usually want to do is um excuse me uh if it couldn't open you want to give it an error message like this this actually isn't doing any reading but it gives a nice uh indicator of what's going on but other than that just like our output we can um uh we we can read uh input uh just like we have um uh um so this is actually printing this is not actually doing anything this is just a standard print statement but then once we've we're reading this we can do NFS which is our file stream object and it will read the first up until the first whites space it turns out um and this is what you'll be doing a lot in your in your assignment for this week and then this one actually just reads the next thing that it sees until it hits whites space again usually a space or a new line um and then then of course we just say that we're closing it um at the end of a file uh loop if we were going to do something to that end so um similar to that we have file output which works much like what a print stream would um we can open a file and we can certainly check to see if it opened okay just like we just talked about but instead of printing to um you know for example C out we can print an out file system which we create here um by doing this so this just redirects this stream of text to a file instead of your screen everything else should look very similar right we've got the endline here which is again just a pre predefined character in the uh IO stream um uh uh part of C++ that we get for free so um I think that's actually it for the lecture I want to get right into the prim assignment here though so let me open um Visual Studio code uh where did I put it there it is so this week um oh I've got some examples too that I want to go through sorry um so a couple of these let's just start with which one's the easiest one this one's probably the easiest easiest one uh well no this one is so what this is going to do is we're going to define a function that basically does some text parsing and a lot of this is a little this is a string you know some of the string string library and things like that but the point of the thing is that uh we're running a get line here uh and we're just illustrating how we might use a function here to uh to intercept um our our month integer or or a string and parse it out um so this is just an example of one way you might you know parse a string and do some string um uh functionality down here um these are kind of close cut um not something that you'll be doing in the assignment but really all this is doing is looking to parse a string like this and then print out a slightly different uh sort of function so I'll run this real quick to demonstrate it just prints out a very simple like you know um input a date and it does some text uh conversion for you here U not necessarily part of a stream but certainly something oops I'm sorry I think I typed something wrong let's let's do that again uh what I do here let's see here let's uh I blew it up I think let's make sure this is all closed out I've got too many of these open sorry I was writing some of this code right before I got going so let's uh let's go and run this again and I'm just G to try to copy this and we should be able to paste it there uh like so um so what all this does is kind of walking you through how you can do use things like parts of a string finding spaces uh and things like that you don't necessarily need to go through this all the way I just wanted to give you an example of how you might tear apart a string itself and uh and output something um I think this was you know part of a unit I I just wanted to throw in with strings again we might revisit this topic um another one of these that uh we have here is actually a file input string so this is basically um a very simple take a file um and it's going to have you input the file that you want to process in this case it's this uh Park photos which is a bunch of pretend F names of files um and um what we're going to do here is open these things and basically make an output file um for each one um so oops that's actually the uhh where' my photos want go that's actually the M the the actual assignment that we're doing um so again this is an example of like go ahead and change the name of this thing or lock it somehow and it won't find it um so when we run this it'll actually find it but if it can't open it this is how You' handle that and you can test that with this right you could put in Just Junk and then um what it does is it will open the uh part of the file name and create a new file called infotext and it just uh it just basically takes the input from one stream and puts it in the other um but what you what else you could do is for example if you want to do some image processing you could add data to to the file there and things like that so all that'll look like when you run it if you choose to is it will ask you for the file so we're just taking in um and this is from our book by the way the the book gives an example so we can give it our uh photo our Park photos. taxt file well actually it did exactly what it wanted it couldn't find it right because I made a I typed it wrong so let's go and run this again Park photos txt and what it does is it basically will kick out this uh this bit of text where it would have you could process these things and things like that so again really just you know kind of working with the file system here listing things in a file um uh and more about reading than writing here but this is something you could do uh you can also do things like read the file system to do this um and things like that which is not enough un commmon operation and then lastly we have this HTML writer example so this is a this will actually write a file for us um so what it does is it takes the Bare Bones of an HTML file and it then we have a um so and then o stream so this is our output stream object and it actually writes this out so what it does is takes some text here um and creates a uh file with that in a paragraph in an HTML file so we get a very simple web page that actually just says whatever we pass into the function so right now we uh got like hello HTML world let's go ahead and do like CC world right uh let's call it you know 2030 right um so this will actually just take this random text you could have this input from a user and it kicks out a web page so when I run this you actually won't even see it do anything it just kicks it out um actually I think it does yeah so it actually shows you the HTML as well uh that it puts out but it created the file in our examples folder here this simple HTML so if I open this you can see that and sure enough if I go to that and do like this I can uh or this I can double click this guy and there it is there's our brand new web page um so it's generated that automatically it's it's a good example of automation but one thing you might want to use file IO for um so just some simp examples that kind of expand on what the text did that I wrote up for us um once you get into the assignment itself uh there's it's pretty simple stuff uh really compared to what you've been studying um the first one is just examine what's going on here and I put some prompts in the assignment as well uh where' that guy go there it is uh oops sorry thought I just not print materials I want the assignment not that that sorry too many things open like I always do uh where is it at it's in here and I think it's in here yep so the predict and run just some questions that you'll you know try to examine what's happening overall and things like that this is pretty much in the style of what we been what we've been doing uh with Prim uh for a bit now where did my there you're up yeah and I need Visual Studio back um where' vs code go there it is so you know go ahead before what will happen when this run you know the idea is that it will obviously do some things with files so pay attention over here in your space as you run this and see what happens um I want you to think about what's going on here this isn't our STD out right this isn't our standard output like we do when we print things like uh what we just did here um or not here it was in month baring has one I know so you know what's the difference between using C out here and using my file here right well that comes from here so I think that might be maybe self-explanatory at this point but um you know if if these questions are kind of hard for you to answer you know certainly get a hold of me and let's walk through some of this stuff okay or go back to the reading if you'd like um but that's the point of this this should really be kind of a checkpoint for you to say okay I think I get it right or not just like all of these um and then we go into investigate and in investigate we're doing something similar but in this in the case of um this we're going to have you output a file as opposed to input a file um or read from an input um so that should work uh just fine by without changing any code um and uh you should see some stuff and uh there's a file that will get created here I'll just do a little spoiler alert here it's going to create a file called Prim investigate and open that want you see how you can input things from standard input just like we've done here and then output something right that's that's what we're going to do um and there's a little little obviously silly humor there going on as well uh modify does a little bit goes a little bit further where we are taking a set of numbers uh there's a number file in your download looks like this although you can change these and I even encourage you to do you can even do things like this um it turns out just so you know that this and this they'll read very similarly and that's because it's hitting this white space here and that's why they read read uh this one and then this one um and then what you'll do for this is actually uh very similar to what you've done in the past where you're just going to take some variables and print some outputs down here so you don't actually have to do anything with file IO here but I give some more examples of reading um adding them in this case to a vector right we we were using a vector for this um and doing some math on them so um we do all the computations up here all you'll need here is uh the sum is there already there's going to be a Min number of Max number um uh a count and an average as well the average is right here yep so um just print those out and and you can kind of play with that and see how you read data in and you can do some summary statistics on it and then finally we get to our turned in uh assignment which is a bit of a uh something you might use in the game so I've written some stub code here to basically let you uh um come into this uh World um or this program and you can you you can either enter type enter to enter new data um and once you've done this is a continual Loop so every time you do one of these you'll come back to it until you type exit um you can so the first time you'll go through you'll want to enter some dat data and this again you'll want to write this coming in from CN so this should be um you know uh um when you're entering it you'll want to get this from the user using probably CN like I said and there's examples of that throughout this this this and the book um and then um what you then if they type Save which you you'll want to do um your program should support this is to save that data to a file um save that that to a file and then uh the the sister part of that should you you should be able to restore that file and plug that into these variables um so instead of the user entering them they'd read it from a file so first have them enter it and then save and then your your program should also be able to read that and the way I test that is first I go in and enter it and then I put in like Trevor you know Trev and some number and then um what I usually and then I save it and then I go into enter it again so not restore yet but enter again and I changed the the variables I I just put you know Joe or something and then I do a restore and see if it comes back and says Trev because I didn't save Joe right I saved Trev um so that's a way you can test that and that's what I'll be looking for when I grade it so um it's this is a little bit more than what we've done but I you know we're starting to ramp up where we've covered most of the tools at this point of the course um and I kind of want you to be able to do some of this debugging yourself um but if you have problems with it please let me know that's what I'm here for um but this will will serve you quite well uh when you get to the the final and a few other things like that uh mainly the Hangman game more than anything if we if we decide to do that part of it where you might want to read and write some things to that end uh or or do something with a game so um I think that's it for this week uh just wanted to qu quickly get this one recorded um and get get these two out there as well um and kind of cover I think maybe you covered this in 10:30 but I'm not sure so I wanted to cover it again um and certainly the book has a great unit on it so certainly rely on that as well all right thank you